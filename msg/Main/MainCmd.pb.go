// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MainCmd.proto

package Main

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EnMainCmdID int32

const (
	EnMainCmdID_LOGIN_MAIN_CMD             EnMainCmdID = 1
	EnMainCmdID_GATE_MAIN_CMD              EnMainCmdID = 2
	EnMainCmdID_USER_INFO_MAIN_CMD         EnMainCmdID = 3
	EnMainCmdID_LOBBY_MAIN_CMD             EnMainCmdID = 4
	EnMainCmdID_GAME_MAIN_USER             EnMainCmdID = 6
	EnMainCmdID_GAME_MAIN_GAME             EnMainCmdID = 8
	EnMainCmdID_LOBBY_MAIN_SIGN            EnMainCmdID = 12
	EnMainCmdID_LOBBY_MAIN_INVENTORY       EnMainCmdID = 13
	EnMainCmdID_LOBBY_MAIN_SHOPPINGMALL    EnMainCmdID = 14
	EnMainCmdID_LOBBY_MAIN_BANK            EnMainCmdID = 15
	EnMainCmdID_LOBBY_MAIN_FRIEND          EnMainCmdID = 16
	EnMainCmdID_LOBBY_MAIN_CHAT            EnMainCmdID = 17
	EnMainCmdID_LOBBY_MAIN_MAIL            EnMainCmdID = 18
	EnMainCmdID_LOBBY_MAIN_RANK            EnMainCmdID = 20
	EnMainCmdID_LOBBY_MAIN_PERSON_SET      EnMainCmdID = 21
	EnMainCmdID_LOBBY_MAIN_PURCHASE_REWARD EnMainCmdID = 22
	EnMainCmdID_CLUB_MAIN_CMD              EnMainCmdID = 23
	EnMainCmdID_ACTIVE_MAIN_CMD            EnMainCmdID = 24
	EnMainCmdID_LOBBY_MAIN_ITEM            EnMainCmdID = 25
	EnMainCmdID_LOBBY_MAIN_MISC            EnMainCmdID = 26
	EnMainCmdID_LOBBY_MAIN_TASK            EnMainCmdID = 27
	EnMainCmdID_LOBBY_MAIN_MATCH           EnMainCmdID = 28
)

var EnMainCmdID_name = map[int32]string{
	1:  "LOGIN_MAIN_CMD",
	2:  "GATE_MAIN_CMD",
	3:  "USER_INFO_MAIN_CMD",
	4:  "LOBBY_MAIN_CMD",
	6:  "GAME_MAIN_USER",
	8:  "GAME_MAIN_GAME",
	12: "LOBBY_MAIN_SIGN",
	13: "LOBBY_MAIN_INVENTORY",
	14: "LOBBY_MAIN_SHOPPINGMALL",
	15: "LOBBY_MAIN_BANK",
	16: "LOBBY_MAIN_FRIEND",
	17: "LOBBY_MAIN_CHAT",
	18: "LOBBY_MAIN_MAIL",
	20: "LOBBY_MAIN_RANK",
	21: "LOBBY_MAIN_PERSON_SET",
	22: "LOBBY_MAIN_PURCHASE_REWARD",
	23: "CLUB_MAIN_CMD",
	24: "ACTIVE_MAIN_CMD",
	25: "LOBBY_MAIN_ITEM",
	26: "LOBBY_MAIN_MISC",
	27: "LOBBY_MAIN_TASK",
	28: "LOBBY_MAIN_MATCH",
}

var EnMainCmdID_value = map[string]int32{
	"LOGIN_MAIN_CMD":             1,
	"GATE_MAIN_CMD":              2,
	"USER_INFO_MAIN_CMD":         3,
	"LOBBY_MAIN_CMD":             4,
	"GAME_MAIN_USER":             6,
	"GAME_MAIN_GAME":             8,
	"LOBBY_MAIN_SIGN":            12,
	"LOBBY_MAIN_INVENTORY":       13,
	"LOBBY_MAIN_SHOPPINGMALL":    14,
	"LOBBY_MAIN_BANK":            15,
	"LOBBY_MAIN_FRIEND":          16,
	"LOBBY_MAIN_CHAT":            17,
	"LOBBY_MAIN_MAIL":            18,
	"LOBBY_MAIN_RANK":            20,
	"LOBBY_MAIN_PERSON_SET":      21,
	"LOBBY_MAIN_PURCHASE_REWARD": 22,
	"CLUB_MAIN_CMD":              23,
	"ACTIVE_MAIN_CMD":            24,
	"LOBBY_MAIN_ITEM":            25,
	"LOBBY_MAIN_MISC":            26,
	"LOBBY_MAIN_TASK":            27,
	"LOBBY_MAIN_MATCH":           28,
}

func (x EnMainCmdID) Enum() *EnMainCmdID {
	p := new(EnMainCmdID)
	*p = x
	return p
}

func (x EnMainCmdID) String() string {
	return proto.EnumName(EnMainCmdID_name, int32(x))
}

func (x *EnMainCmdID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnMainCmdID_value, data, "EnMainCmdID")
	if err != nil {
		return err
	}
	*x = EnMainCmdID(value)
	return nil
}

func (EnMainCmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fe73070ce5d88f8d, []int{0}
}

func init() {
	proto.RegisterEnum("Main.EnMainCmdID", EnMainCmdID_name, EnMainCmdID_value)
}

func init() { proto.RegisterFile("MainCmd.proto", fileDescriptor_fe73070ce5d88f8d) }

var fileDescriptor_fe73070ce5d88f8d = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xd0, 0xcf, 0x4e, 0xfb, 0x30,
	0x0c, 0x07, 0x70, 0xfd, 0x7e, 0x9b, 0x10, 0x32, 0x6c, 0xf3, 0xcc, 0xfe, 0x0f, 0xf1, 0x00, 0x1c,
	0x78, 0x87, 0x34, 0xcd, 0x5a, 0x6b, 0x4d, 0x3a, 0x25, 0xe9, 0xd0, 0x4e, 0x15, 0x12, 0x1c, 0x38,
	0xb0, 0x21, 0xc4, 0xbb, 0x73, 0x45, 0x11, 0x93, 0x9a, 0xe5, 0xd6, 0x7e, 0xec, 0xaf, 0xdd, 0x1a,
	0x06, 0xfa, 0xe5, 0xfd, 0x28, 0x3f, 0x5e, 0x9f, 0x3e, 0xbf, 0x4e, 0xdf, 0x27, 0xea, 0x87, 0xd7,
	0xc7, 0x9f, 0x1e, 0xdc, 0xbc, 0x1d, 0xcf, 0x15, 0xce, 0x89, 0x60, 0x58, 0xd5, 0x05, 0x9b, 0x56,
	0x0b, 0x36, 0xad, 0xd4, 0x39, 0xfe, 0xa3, 0x31, 0x0c, 0x0a, 0xe1, 0x55, 0x47, 0xff, 0x69, 0x06,
	0xd4, 0x38, 0x65, 0x5b, 0x36, 0x9b, 0xba, 0xf3, 0xde, 0x5f, 0x3c, 0xcb, 0x0e, 0x9d, 0xf5, 0x83,
	0x15, 0x42, 0x9f, 0xe3, 0x21, 0x85, 0x57, 0x97, 0x16, 0x9e, 0xf0, 0x9a, 0xee, 0x60, 0x14, 0x65,
	0x1d, 0x17, 0x06, 0x6f, 0x69, 0x01, 0x93, 0x08, 0xd9, 0xec, 0x95, 0xf1, 0xb5, 0x3d, 0xe0, 0x80,
	0xd6, 0x30, 0x8f, 0xdb, 0xcb, 0x7a, 0xb7, 0x63, 0x53, 0x68, 0x51, 0x55, 0x38, 0x4c, 0x66, 0x65,
	0xc2, 0x6c, 0x71, 0x44, 0x53, 0x18, 0x47, 0xb8, 0xb1, 0xac, 0x4c, 0x8e, 0x98, 0xf4, 0xca, 0x52,
	0x78, 0x1c, 0x27, 0xa8, 0x05, 0x57, 0x48, 0x09, 0xda, 0x30, 0x75, 0x42, 0x4b, 0x98, 0x46, 0xb8,
	0x53, 0xd6, 0xd5, 0xa6, 0x75, 0xca, 0xe3, 0x94, 0x1e, 0x60, 0x15, 0x97, 0x1a, 0x2b, 0x4b, 0xe1,
	0x54, 0x6b, 0xd5, 0xb3, 0xb0, 0x39, 0xce, 0xc2, 0x61, 0x65, 0xd5, 0x64, 0xdd, 0xb1, 0xe6, 0x61,
	0x85, 0x90, 0x9e, 0xf7, 0xd1, 0xb5, 0x17, 0xc9, 0x5e, 0xf6, 0x4a, 0xe3, 0x32, 0xfd, 0x42, 0x76,
	0x12, 0x57, 0x09, 0x7a, 0xe1, 0xb6, 0xb8, 0xa6, 0x09, 0xe0, 0xc5, 0xbf, 0x78, 0x59, 0xe2, 0xfd,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xed, 0x92, 0x15, 0xe5, 0x0f, 0x02, 0x00, 0x00,
}
