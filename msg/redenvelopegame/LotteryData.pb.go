// Code generated by protoc-gen-go. DO NOT EDIT.
// source: LotteryData.proto

package redenvelopegame

import (
	context "context"
	fmt "fmt"
	tars "github.com/TarsCloud/TarsGo/tars"
	model "github.com/TarsCloud/TarsGo/tars/model"
	requestf "github.com/TarsCloud/TarsGo/tars/protocol/res/requestf"
	current "github.com/TarsCloud/TarsGo/tars/util/current"
	tools "github.com/TarsCloud/TarsGo/tars/util/tools"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//批次状态
type LotteryStatus int32

const (
	LotteryStatus_LOTTERY_STATUS_ALL      LotteryStatus = 0
	LotteryStatus_LOTTERY_STATUS_WAIT     LotteryStatus = 1
	LotteryStatus_LOTTERY_STATUS_REWAIT   LotteryStatus = 2
	LotteryStatus_LOTTERY_STATUS_PLAYING  LotteryStatus = 3
	LotteryStatus_LOTTERY_STATUS_GAMEOVER LotteryStatus = 4
)

var LotteryStatus_name = map[int32]string{
	0: "LOTTERY_STATUS_ALL",
	1: "LOTTERY_STATUS_WAIT",
	2: "LOTTERY_STATUS_REWAIT",
	3: "LOTTERY_STATUS_PLAYING",
	4: "LOTTERY_STATUS_GAMEOVER",
}

var LotteryStatus_value = map[string]int32{
	"LOTTERY_STATUS_ALL":      0,
	"LOTTERY_STATUS_WAIT":     1,
	"LOTTERY_STATUS_REWAIT":   2,
	"LOTTERY_STATUS_PLAYING":  3,
	"LOTTERY_STATUS_GAMEOVER": 4,
}

func (x LotteryStatus) String() string {
	return proto.EnumName(LotteryStatus_name, int32(x))
}

func (LotteryStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{0}
}

//抽奖类型模式
type LotteryCategory int32

const (
	LotteryCategory_LOTTERY_SYSTEM   LotteryCategory = 0
	LotteryCategory_LOTTERY_CUSTOMER LotteryCategory = 1
)

var LotteryCategory_name = map[int32]string{
	0: "LOTTERY_SYSTEM",
	1: "LOTTERY_CUSTOMER",
}

var LotteryCategory_value = map[string]int32{
	"LOTTERY_SYSTEM":   0,
	"LOTTERY_CUSTOMER": 1,
}

func (x LotteryCategory) String() string {
	return proto.EnumName(LotteryCategory_name, int32(x))
}

func (LotteryCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{1}
}

type LotterySystemType int32

const (
	LotterySystemType_LOTTERY_SYSTEM_NAME       LotterySystemType = 0
	LotterySystemType_LOTTERY_SYSTEM_WXNICKNAME LotterySystemType = 1
	LotterySystemType_LOTTERY_SYSTEM_PHONE      LotterySystemType = 2
	LotterySystemType_LOTTERY_SYSTEM_TICKET     LotterySystemType = 3
)

var LotterySystemType_name = map[int32]string{
	0: "LOTTERY_SYSTEM_NAME",
	1: "LOTTERY_SYSTEM_WXNICKNAME",
	2: "LOTTERY_SYSTEM_PHONE",
	3: "LOTTERY_SYSTEM_TICKET",
}

var LotterySystemType_value = map[string]int32{
	"LOTTERY_SYSTEM_NAME":       0,
	"LOTTERY_SYSTEM_WXNICKNAME": 1,
	"LOTTERY_SYSTEM_PHONE":      2,
	"LOTTERY_SYSTEM_TICKET":     3,
}

func (x LotterySystemType) String() string {
	return proto.EnumName(LotterySystemType_name, int32(x))
}

func (LotterySystemType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{2}
}

type SaveLotteryWinnerRecordReq struct {
	List                 []*PBLotteryWinnerRecord `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SaveLotteryWinnerRecordReq) Reset()         { *m = SaveLotteryWinnerRecordReq{} }
func (m *SaveLotteryWinnerRecordReq) String() string { return proto.CompactTextString(m) }
func (*SaveLotteryWinnerRecordReq) ProtoMessage()    {}
func (*SaveLotteryWinnerRecordReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{0}
}

func (m *SaveLotteryWinnerRecordReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveLotteryWinnerRecordReq.Unmarshal(m, b)
}
func (m *SaveLotteryWinnerRecordReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveLotteryWinnerRecordReq.Marshal(b, m, deterministic)
}
func (m *SaveLotteryWinnerRecordReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveLotteryWinnerRecordReq.Merge(m, src)
}
func (m *SaveLotteryWinnerRecordReq) XXX_Size() int {
	return xxx_messageInfo_SaveLotteryWinnerRecordReq.Size(m)
}
func (m *SaveLotteryWinnerRecordReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveLotteryWinnerRecordReq.DiscardUnknown(m)
}

var xxx_messageInfo_SaveLotteryWinnerRecordReq proto.InternalMessageInfo

func (m *SaveLotteryWinnerRecordReq) GetList() []*PBLotteryWinnerRecord {
	if m != nil {
		return m.List
	}
	return nil
}

//更新批次状态请求
type UpdateLotteryStateReq struct {
	ActivityId           int64         `protobuf:"varint,1,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	ProductId            int64         `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	BatchId              int64         `protobuf:"varint,3,opt,name=BatchId,proto3" json:"BatchId,omitempty"`
	State                LotteryStatus `protobuf:"varint,4,opt,name=State,proto3,enum=redenvelopegame.LotteryStatus" json:"State,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UpdateLotteryStateReq) Reset()         { *m = UpdateLotteryStateReq{} }
func (m *UpdateLotteryStateReq) String() string { return proto.CompactTextString(m) }
func (*UpdateLotteryStateReq) ProtoMessage()    {}
func (*UpdateLotteryStateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{1}
}

func (m *UpdateLotteryStateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLotteryStateReq.Unmarshal(m, b)
}
func (m *UpdateLotteryStateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLotteryStateReq.Marshal(b, m, deterministic)
}
func (m *UpdateLotteryStateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLotteryStateReq.Merge(m, src)
}
func (m *UpdateLotteryStateReq) XXX_Size() int {
	return xxx_messageInfo_UpdateLotteryStateReq.Size(m)
}
func (m *UpdateLotteryStateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLotteryStateReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLotteryStateReq proto.InternalMessageInfo

func (m *UpdateLotteryStateReq) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *UpdateLotteryStateReq) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *UpdateLotteryStateReq) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

func (m *UpdateLotteryStateReq) GetState() LotteryStatus {
	if m != nil {
		return m.State
	}
	return LotteryStatus_LOTTERY_STATUS_ALL
}

//获取摇号批次列表请求
type GetLotteryListReq struct {
	ActivityId           int64    `protobuf:"varint,1,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	ProductId            int64    `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLotteryListReq) Reset()         { *m = GetLotteryListReq{} }
func (m *GetLotteryListReq) String() string { return proto.CompactTextString(m) }
func (*GetLotteryListReq) ProtoMessage()    {}
func (*GetLotteryListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{2}
}

func (m *GetLotteryListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLotteryListReq.Unmarshal(m, b)
}
func (m *GetLotteryListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLotteryListReq.Marshal(b, m, deterministic)
}
func (m *GetLotteryListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLotteryListReq.Merge(m, src)
}
func (m *GetLotteryListReq) XXX_Size() int {
	return xxx_messageInfo_GetLotteryListReq.Size(m)
}
func (m *GetLotteryListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLotteryListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetLotteryListReq proto.InternalMessageInfo

func (m *GetLotteryListReq) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *GetLotteryListReq) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

//获取摇号批次列表返回
type GetLotteryListRsp struct {
	Code                 Code              `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	List                 []*PBLotteryBatch `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetLotteryListRsp) Reset()         { *m = GetLotteryListRsp{} }
func (m *GetLotteryListRsp) String() string { return proto.CompactTextString(m) }
func (*GetLotteryListRsp) ProtoMessage()    {}
func (*GetLotteryListRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{3}
}

func (m *GetLotteryListRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLotteryListRsp.Unmarshal(m, b)
}
func (m *GetLotteryListRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLotteryListRsp.Marshal(b, m, deterministic)
}
func (m *GetLotteryListRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLotteryListRsp.Merge(m, src)
}
func (m *GetLotteryListRsp) XXX_Size() int {
	return xxx_messageInfo_GetLotteryListRsp.Size(m)
}
func (m *GetLotteryListRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLotteryListRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetLotteryListRsp proto.InternalMessageInfo

func (m *GetLotteryListRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *GetLotteryListRsp) GetList() []*PBLotteryBatch {
	if m != nil {
		return m.List
	}
	return nil
}

type GetLotteryBatchByIdReq struct {
	ActivityId           int64    `protobuf:"varint,1,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	ProductId            int64    `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	BatchId              int64    `protobuf:"varint,3,opt,name=BatchId,proto3" json:"BatchId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLotteryBatchByIdReq) Reset()         { *m = GetLotteryBatchByIdReq{} }
func (m *GetLotteryBatchByIdReq) String() string { return proto.CompactTextString(m) }
func (*GetLotteryBatchByIdReq) ProtoMessage()    {}
func (*GetLotteryBatchByIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{4}
}

func (m *GetLotteryBatchByIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLotteryBatchByIdReq.Unmarshal(m, b)
}
func (m *GetLotteryBatchByIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLotteryBatchByIdReq.Marshal(b, m, deterministic)
}
func (m *GetLotteryBatchByIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLotteryBatchByIdReq.Merge(m, src)
}
func (m *GetLotteryBatchByIdReq) XXX_Size() int {
	return xxx_messageInfo_GetLotteryBatchByIdReq.Size(m)
}
func (m *GetLotteryBatchByIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLotteryBatchByIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetLotteryBatchByIdReq proto.InternalMessageInfo

func (m *GetLotteryBatchByIdReq) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *GetLotteryBatchByIdReq) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *GetLotteryBatchByIdReq) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

type GetLotteryBatchByIdRsp struct {
	Code                 Code            `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	Detail               *PBLotteryBatch `protobuf:"bytes,2,opt,name=Detail,proto3" json:"Detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetLotteryBatchByIdRsp) Reset()         { *m = GetLotteryBatchByIdRsp{} }
func (m *GetLotteryBatchByIdRsp) String() string { return proto.CompactTextString(m) }
func (*GetLotteryBatchByIdRsp) ProtoMessage()    {}
func (*GetLotteryBatchByIdRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{5}
}

func (m *GetLotteryBatchByIdRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLotteryBatchByIdRsp.Unmarshal(m, b)
}
func (m *GetLotteryBatchByIdRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLotteryBatchByIdRsp.Marshal(b, m, deterministic)
}
func (m *GetLotteryBatchByIdRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLotteryBatchByIdRsp.Merge(m, src)
}
func (m *GetLotteryBatchByIdRsp) XXX_Size() int {
	return xxx_messageInfo_GetLotteryBatchByIdRsp.Size(m)
}
func (m *GetLotteryBatchByIdRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLotteryBatchByIdRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetLotteryBatchByIdRsp proto.InternalMessageInfo

func (m *GetLotteryBatchByIdRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *GetLotteryBatchByIdRsp) GetDetail() *PBLotteryBatch {
	if m != nil {
		return m.Detail
	}
	return nil
}

//获取摇号开奖记录列表请求
type GetLotteryWinnerRecordListReq struct {
	ActivityId           int64    `protobuf:"varint,1,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	ProductId            int64    `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	BatchId              int64    `protobuf:"varint,3,opt,name=BatchId,proto3" json:"BatchId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLotteryWinnerRecordListReq) Reset()         { *m = GetLotteryWinnerRecordListReq{} }
func (m *GetLotteryWinnerRecordListReq) String() string { return proto.CompactTextString(m) }
func (*GetLotteryWinnerRecordListReq) ProtoMessage()    {}
func (*GetLotteryWinnerRecordListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{6}
}

func (m *GetLotteryWinnerRecordListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLotteryWinnerRecordListReq.Unmarshal(m, b)
}
func (m *GetLotteryWinnerRecordListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLotteryWinnerRecordListReq.Marshal(b, m, deterministic)
}
func (m *GetLotteryWinnerRecordListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLotteryWinnerRecordListReq.Merge(m, src)
}
func (m *GetLotteryWinnerRecordListReq) XXX_Size() int {
	return xxx_messageInfo_GetLotteryWinnerRecordListReq.Size(m)
}
func (m *GetLotteryWinnerRecordListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLotteryWinnerRecordListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetLotteryWinnerRecordListReq proto.InternalMessageInfo

func (m *GetLotteryWinnerRecordListReq) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *GetLotteryWinnerRecordListReq) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *GetLotteryWinnerRecordListReq) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

type GetLotteryWinnerRecordListByQueryReq struct {
	ActivityId           int64    `protobuf:"varint,1,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	ProductId            int64    `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	BatchId              int64    `protobuf:"varint,3,opt,name=BatchId,proto3" json:"BatchId,omitempty"`
	QueryStr             string   `protobuf:"bytes,4,opt,name=QueryStr,proto3" json:"QueryStr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLotteryWinnerRecordListByQueryReq) Reset()         { *m = GetLotteryWinnerRecordListByQueryReq{} }
func (m *GetLotteryWinnerRecordListByQueryReq) String() string { return proto.CompactTextString(m) }
func (*GetLotteryWinnerRecordListByQueryReq) ProtoMessage()    {}
func (*GetLotteryWinnerRecordListByQueryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{7}
}

func (m *GetLotteryWinnerRecordListByQueryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLotteryWinnerRecordListByQueryReq.Unmarshal(m, b)
}
func (m *GetLotteryWinnerRecordListByQueryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLotteryWinnerRecordListByQueryReq.Marshal(b, m, deterministic)
}
func (m *GetLotteryWinnerRecordListByQueryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLotteryWinnerRecordListByQueryReq.Merge(m, src)
}
func (m *GetLotteryWinnerRecordListByQueryReq) XXX_Size() int {
	return xxx_messageInfo_GetLotteryWinnerRecordListByQueryReq.Size(m)
}
func (m *GetLotteryWinnerRecordListByQueryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLotteryWinnerRecordListByQueryReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetLotteryWinnerRecordListByQueryReq proto.InternalMessageInfo

func (m *GetLotteryWinnerRecordListByQueryReq) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *GetLotteryWinnerRecordListByQueryReq) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *GetLotteryWinnerRecordListByQueryReq) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

func (m *GetLotteryWinnerRecordListByQueryReq) GetQueryStr() string {
	if m != nil {
		return m.QueryStr
	}
	return ""
}

//获取摇号开奖记录列表返回
type GetLotteryWinnerRecordListRsp struct {
	Code                 Code                     `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	List                 []*PBLotteryWinnerRecord `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetLotteryWinnerRecordListRsp) Reset()         { *m = GetLotteryWinnerRecordListRsp{} }
func (m *GetLotteryWinnerRecordListRsp) String() string { return proto.CompactTextString(m) }
func (*GetLotteryWinnerRecordListRsp) ProtoMessage()    {}
func (*GetLotteryWinnerRecordListRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{8}
}

func (m *GetLotteryWinnerRecordListRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLotteryWinnerRecordListRsp.Unmarshal(m, b)
}
func (m *GetLotteryWinnerRecordListRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLotteryWinnerRecordListRsp.Marshal(b, m, deterministic)
}
func (m *GetLotteryWinnerRecordListRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLotteryWinnerRecordListRsp.Merge(m, src)
}
func (m *GetLotteryWinnerRecordListRsp) XXX_Size() int {
	return xxx_messageInfo_GetLotteryWinnerRecordListRsp.Size(m)
}
func (m *GetLotteryWinnerRecordListRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLotteryWinnerRecordListRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetLotteryWinnerRecordListRsp proto.InternalMessageInfo

func (m *GetLotteryWinnerRecordListRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *GetLotteryWinnerRecordListRsp) GetList() []*PBLotteryWinnerRecord {
	if m != nil {
		return m.List
	}
	return nil
}

//获取摇号自定义号码请求
type GetLotteryCustomerNoListReq struct {
	ActivityId           int64    `protobuf:"varint,1,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	ProductId            int64    `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLotteryCustomerNoListReq) Reset()         { *m = GetLotteryCustomerNoListReq{} }
func (m *GetLotteryCustomerNoListReq) String() string { return proto.CompactTextString(m) }
func (*GetLotteryCustomerNoListReq) ProtoMessage()    {}
func (*GetLotteryCustomerNoListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{9}
}

func (m *GetLotteryCustomerNoListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLotteryCustomerNoListReq.Unmarshal(m, b)
}
func (m *GetLotteryCustomerNoListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLotteryCustomerNoListReq.Marshal(b, m, deterministic)
}
func (m *GetLotteryCustomerNoListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLotteryCustomerNoListReq.Merge(m, src)
}
func (m *GetLotteryCustomerNoListReq) XXX_Size() int {
	return xxx_messageInfo_GetLotteryCustomerNoListReq.Size(m)
}
func (m *GetLotteryCustomerNoListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLotteryCustomerNoListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetLotteryCustomerNoListReq proto.InternalMessageInfo

func (m *GetLotteryCustomerNoListReq) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *GetLotteryCustomerNoListReq) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

//获取摇号自定义号码返回
type GetLotteryCustomerNoListRsp struct {
	Code                 Code                         `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	List                 []*PBLotteryCustomerNoDetail `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *GetLotteryCustomerNoListRsp) Reset()         { *m = GetLotteryCustomerNoListRsp{} }
func (m *GetLotteryCustomerNoListRsp) String() string { return proto.CompactTextString(m) }
func (*GetLotteryCustomerNoListRsp) ProtoMessage()    {}
func (*GetLotteryCustomerNoListRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{10}
}

func (m *GetLotteryCustomerNoListRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLotteryCustomerNoListRsp.Unmarshal(m, b)
}
func (m *GetLotteryCustomerNoListRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLotteryCustomerNoListRsp.Marshal(b, m, deterministic)
}
func (m *GetLotteryCustomerNoListRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLotteryCustomerNoListRsp.Merge(m, src)
}
func (m *GetLotteryCustomerNoListRsp) XXX_Size() int {
	return xxx_messageInfo_GetLotteryCustomerNoListRsp.Size(m)
}
func (m *GetLotteryCustomerNoListRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLotteryCustomerNoListRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetLotteryCustomerNoListRsp proto.InternalMessageInfo

func (m *GetLotteryCustomerNoListRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *GetLotteryCustomerNoListRsp) GetList() []*PBLotteryCustomerNoDetail {
	if m != nil {
		return m.List
	}
	return nil
}

type PBLotteryCustomerNoDetail struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ActivityId           int64    `protobuf:"varint,2,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	ProductId            int64    `protobuf:"varint,3,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	CustomerNo           string   `protobuf:"bytes,4,opt,name=CustomerNo,proto3" json:"CustomerNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBLotteryCustomerNoDetail) Reset()         { *m = PBLotteryCustomerNoDetail{} }
func (m *PBLotteryCustomerNoDetail) String() string { return proto.CompactTextString(m) }
func (*PBLotteryCustomerNoDetail) ProtoMessage()    {}
func (*PBLotteryCustomerNoDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{11}
}

func (m *PBLotteryCustomerNoDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBLotteryCustomerNoDetail.Unmarshal(m, b)
}
func (m *PBLotteryCustomerNoDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBLotteryCustomerNoDetail.Marshal(b, m, deterministic)
}
func (m *PBLotteryCustomerNoDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBLotteryCustomerNoDetail.Merge(m, src)
}
func (m *PBLotteryCustomerNoDetail) XXX_Size() int {
	return xxx_messageInfo_PBLotteryCustomerNoDetail.Size(m)
}
func (m *PBLotteryCustomerNoDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_PBLotteryCustomerNoDetail.DiscardUnknown(m)
}

var xxx_messageInfo_PBLotteryCustomerNoDetail proto.InternalMessageInfo

func (m *PBLotteryCustomerNoDetail) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PBLotteryCustomerNoDetail) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *PBLotteryCustomerNoDetail) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *PBLotteryCustomerNoDetail) GetCustomerNo() string {
	if m != nil {
		return m.CustomerNo
	}
	return ""
}

type PBLotteryWinnerRecord struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ActivityId           int64    `protobuf:"varint,2,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	ProductId            int64    `protobuf:"varint,3,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	BatchId              int64    `protobuf:"varint,4,opt,name=BatchId,proto3" json:"BatchId,omitempty"`
	BatchName            string   `protobuf:"bytes,5,opt,name=BatchName,proto3" json:"BatchName,omitempty"`
	UserId               int64    `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId,omitempty"`
	WinnerNo             string   `protobuf:"bytes,7,opt,name=WinnerNo,proto3" json:"WinnerNo,omitempty"`
	UserAvatar           string   `protobuf:"bytes,8,opt,name=UserAvatar,proto3" json:"UserAvatar,omitempty"`
	PrizeItemId          int64    `protobuf:"varint,9,opt,name=PrizeItemId,proto3" json:"PrizeItemId,omitempty"`
	PrizeName            string   `protobuf:"bytes,10,opt,name=PrizeName,proto3" json:"PrizeName,omitempty"`
	PrizeImgUrl          string   `protobuf:"bytes,11,opt,name=PrizeImgUrl,proto3" json:"PrizeImgUrl,omitempty"`
	BatchCategory        int32    `protobuf:"varint,12,opt,name=BatchCategory,proto3" json:"BatchCategory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBLotteryWinnerRecord) Reset()         { *m = PBLotteryWinnerRecord{} }
func (m *PBLotteryWinnerRecord) String() string { return proto.CompactTextString(m) }
func (*PBLotteryWinnerRecord) ProtoMessage()    {}
func (*PBLotteryWinnerRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{12}
}

func (m *PBLotteryWinnerRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBLotteryWinnerRecord.Unmarshal(m, b)
}
func (m *PBLotteryWinnerRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBLotteryWinnerRecord.Marshal(b, m, deterministic)
}
func (m *PBLotteryWinnerRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBLotteryWinnerRecord.Merge(m, src)
}
func (m *PBLotteryWinnerRecord) XXX_Size() int {
	return xxx_messageInfo_PBLotteryWinnerRecord.Size(m)
}
func (m *PBLotteryWinnerRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_PBLotteryWinnerRecord.DiscardUnknown(m)
}

var xxx_messageInfo_PBLotteryWinnerRecord proto.InternalMessageInfo

func (m *PBLotteryWinnerRecord) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PBLotteryWinnerRecord) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *PBLotteryWinnerRecord) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *PBLotteryWinnerRecord) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

func (m *PBLotteryWinnerRecord) GetBatchName() string {
	if m != nil {
		return m.BatchName
	}
	return ""
}

func (m *PBLotteryWinnerRecord) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PBLotteryWinnerRecord) GetWinnerNo() string {
	if m != nil {
		return m.WinnerNo
	}
	return ""
}

func (m *PBLotteryWinnerRecord) GetUserAvatar() string {
	if m != nil {
		return m.UserAvatar
	}
	return ""
}

func (m *PBLotteryWinnerRecord) GetPrizeItemId() int64 {
	if m != nil {
		return m.PrizeItemId
	}
	return 0
}

func (m *PBLotteryWinnerRecord) GetPrizeName() string {
	if m != nil {
		return m.PrizeName
	}
	return ""
}

func (m *PBLotteryWinnerRecord) GetPrizeImgUrl() string {
	if m != nil {
		return m.PrizeImgUrl
	}
	return ""
}

func (m *PBLotteryWinnerRecord) GetBatchCategory() int32 {
	if m != nil {
		return m.BatchCategory
	}
	return 0
}

type PBLotteryBatch struct {
	Id                   int64             `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ActivityId           int64             `protobuf:"varint,2,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	ProductId            int64             `protobuf:"varint,3,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	BatchName            string            `protobuf:"bytes,4,opt,name=BatchName,proto3" json:"BatchName,omitempty"`
	Category             LotteryCategory   `protobuf:"varint,5,opt,name=Category,proto3,enum=redenvelopegame.LotteryCategory" json:"Category,omitempty"`
	SystemType           LotterySystemType `protobuf:"varint,6,opt,name=SystemType,proto3,enum=redenvelopegame.LotterySystemType" json:"SystemType,omitempty"`
	ShowAvatar           bool              `protobuf:"varint,7,opt,name=ShowAvatar,proto3" json:"ShowAvatar,omitempty"`
	PrizeBatchId         int64             `protobuf:"varint,8,opt,name=PrizeBatchId,proto3" json:"PrizeBatchId,omitempty"`
	Status               LotteryStatus     `protobuf:"varint,9,opt,name=Status,proto3,enum=redenvelopegame.LotteryStatus" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PBLotteryBatch) Reset()         { *m = PBLotteryBatch{} }
func (m *PBLotteryBatch) String() string { return proto.CompactTextString(m) }
func (*PBLotteryBatch) ProtoMessage()    {}
func (*PBLotteryBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_074ae620efc682b6, []int{13}
}

func (m *PBLotteryBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBLotteryBatch.Unmarshal(m, b)
}
func (m *PBLotteryBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBLotteryBatch.Marshal(b, m, deterministic)
}
func (m *PBLotteryBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBLotteryBatch.Merge(m, src)
}
func (m *PBLotteryBatch) XXX_Size() int {
	return xxx_messageInfo_PBLotteryBatch.Size(m)
}
func (m *PBLotteryBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_PBLotteryBatch.DiscardUnknown(m)
}

var xxx_messageInfo_PBLotteryBatch proto.InternalMessageInfo

func (m *PBLotteryBatch) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PBLotteryBatch) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *PBLotteryBatch) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *PBLotteryBatch) GetBatchName() string {
	if m != nil {
		return m.BatchName
	}
	return ""
}

func (m *PBLotteryBatch) GetCategory() LotteryCategory {
	if m != nil {
		return m.Category
	}
	return LotteryCategory_LOTTERY_SYSTEM
}

func (m *PBLotteryBatch) GetSystemType() LotterySystemType {
	if m != nil {
		return m.SystemType
	}
	return LotterySystemType_LOTTERY_SYSTEM_NAME
}

func (m *PBLotteryBatch) GetShowAvatar() bool {
	if m != nil {
		return m.ShowAvatar
	}
	return false
}

func (m *PBLotteryBatch) GetPrizeBatchId() int64 {
	if m != nil {
		return m.PrizeBatchId
	}
	return 0
}

func (m *PBLotteryBatch) GetStatus() LotteryStatus {
	if m != nil {
		return m.Status
	}
	return LotteryStatus_LOTTERY_STATUS_ALL
}

func init() {
	proto.RegisterEnum("redenvelopegame.LotteryStatus", LotteryStatus_name, LotteryStatus_value)
	proto.RegisterEnum("redenvelopegame.LotteryCategory", LotteryCategory_name, LotteryCategory_value)
	proto.RegisterEnum("redenvelopegame.LotterySystemType", LotterySystemType_name, LotterySystemType_value)
	proto.RegisterType((*SaveLotteryWinnerRecordReq)(nil), "redenvelopegame.SaveLotteryWinnerRecordReq")
	proto.RegisterType((*UpdateLotteryStateReq)(nil), "redenvelopegame.UpdateLotteryStateReq")
	proto.RegisterType((*GetLotteryListReq)(nil), "redenvelopegame.GetLotteryListReq")
	proto.RegisterType((*GetLotteryListRsp)(nil), "redenvelopegame.GetLotteryListRsp")
	proto.RegisterType((*GetLotteryBatchByIdReq)(nil), "redenvelopegame.GetLotteryBatchByIdReq")
	proto.RegisterType((*GetLotteryBatchByIdRsp)(nil), "redenvelopegame.GetLotteryBatchByIdRsp")
	proto.RegisterType((*GetLotteryWinnerRecordListReq)(nil), "redenvelopegame.GetLotteryWinnerRecordListReq")
	proto.RegisterType((*GetLotteryWinnerRecordListByQueryReq)(nil), "redenvelopegame.GetLotteryWinnerRecordListByQueryReq")
	proto.RegisterType((*GetLotteryWinnerRecordListRsp)(nil), "redenvelopegame.GetLotteryWinnerRecordListRsp")
	proto.RegisterType((*GetLotteryCustomerNoListReq)(nil), "redenvelopegame.GetLotteryCustomerNoListReq")
	proto.RegisterType((*GetLotteryCustomerNoListRsp)(nil), "redenvelopegame.GetLotteryCustomerNoListRsp")
	proto.RegisterType((*PBLotteryCustomerNoDetail)(nil), "redenvelopegame.PBLotteryCustomerNoDetail")
	proto.RegisterType((*PBLotteryWinnerRecord)(nil), "redenvelopegame.PBLotteryWinnerRecord")
	proto.RegisterType((*PBLotteryBatch)(nil), "redenvelopegame.PBLotteryBatch")
}

func init() { proto.RegisterFile("LotteryData.proto", fileDescriptor_074ae620efc682b6) }

var fileDescriptor_074ae620efc682b6 = []byte{
	// 957 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xcb, 0x73, 0xdb, 0x64,
	0x10, 0x8f, 0xe4, 0x47, 0x9d, 0x4d, 0xea, 0x2a, 0xdb, 0x26, 0x51, 0xd4, 0x36, 0x18, 0x4d, 0x07,
	0x32, 0x81, 0xf1, 0xc1, 0xe5, 0x31, 0x53, 0x18, 0x66, 0x6c, 0x57, 0x04, 0x4d, 0x1d, 0xc7, 0x95,
	0x64, 0x92, 0xc0, 0x21, 0x23, 0xac, 0x6f, 0x52, 0xcf, 0xc4, 0x91, 0x90, 0xbe, 0xb8, 0xb8, 0xc3,
	0x81, 0x2b, 0x9c, 0x39, 0x71, 0xe7, 0x3f, 0xe4, 0x02, 0x27, 0xc6, 0x9f, 0x64, 0xeb, 0x65, 0x29,
	0xf5, 0xd4, 0xbd, 0xe5, 0xdb, 0xdf, 0xbe, 0x7e, 0xbb, 0xeb, 0xec, 0x0a, 0xb6, 0x3a, 0x36, 0xa5,
	0xc4, 0x9d, 0x3c, 0x37, 0xa9, 0x59, 0x77, 0x5c, 0x9b, 0xda, 0x78, 0xcf, 0x25, 0x16, 0xb9, 0x1e,
	0x93, 0x2b, 0xdb, 0x21, 0x97, 0xe6, 0x88, 0x48, 0x9b, 0x6d, 0x7b, 0x34, 0xb2, 0xaf, 0x7d, 0x58,
	0x3e, 0x03, 0x49, 0x37, 0xc7, 0x24, 0xb0, 0x3b, 0x1d, 0x5e, 0x5f, 0x13, 0x57, 0x23, 0x03, 0xdb,
	0xb5, 0x34, 0xf2, 0x33, 0x3e, 0x83, 0x62, 0x67, 0xe8, 0x51, 0x91, 0xab, 0x15, 0x0e, 0x36, 0x1a,
	0x1f, 0xd5, 0x13, 0xbe, 0xea, 0xbd, 0xd6, 0x22, 0x43, 0x66, 0x23, 0xff, 0xcd, 0xc1, 0x76, 0xdf,
	0xb1, 0x4c, 0x3a, 0x73, 0xae, 0x53, 0x93, 0x92, 0xa9, 0xd7, 0x7d, 0x80, 0xe6, 0x80, 0x0e, 0xc7,
	0x43, 0x3a, 0x51, 0x2d, 0x91, 0xab, 0x71, 0x07, 0x05, 0x2d, 0x22, 0xc1, 0x47, 0xb0, 0xde, 0x73,
	0x6d, 0xeb, 0x66, 0x40, 0x55, 0x4b, 0xe4, 0x19, 0x1c, 0x0a, 0x50, 0x84, 0x3b, 0x2d, 0x93, 0x0e,
	0x5e, 0xa9, 0x96, 0x58, 0x60, 0xd8, 0xec, 0x89, 0x9f, 0x41, 0x89, 0xc5, 0x10, 0x8b, 0x35, 0xee,
	0xa0, 0xda, 0xd8, 0x4f, 0xa5, 0x1b, 0x49, 0xe4, 0xc6, 0xd3, 0x7c, 0x65, 0xf9, 0x25, 0x6c, 0x1d,
	0x11, 0x1a, 0x40, 0xd3, 0xcc, 0xdf, 0x39, 0x45, 0x79, 0x90, 0x72, 0xe9, 0x39, 0xb8, 0x07, 0xc5,
	0xb6, 0x6d, 0x11, 0xe6, 0xac, 0xda, 0x28, 0xd5, 0xa7, 0x0f, 0x8d, 0x89, 0xf0, 0x69, 0x50, 0x66,
	0x9e, 0x95, 0xf9, 0x83, 0xec, 0x32, 0x33, 0xa6, 0x41, 0x7d, 0x1d, 0xd8, 0x09, 0x83, 0x30, 0xa0,
	0x35, 0x51, 0xad, 0xf7, 0x58, 0x5f, 0xf9, 0x6a, 0x71, 0xc4, 0x7c, 0x6e, 0x5f, 0x42, 0xf9, 0x39,
	0xa1, 0xe6, 0xf0, 0x8a, 0x45, 0x7a, 0x0b, 0x76, 0x81, 0xba, 0xfc, 0x1a, 0x1e, 0x87, 0xd1, 0xa2,
	0xf3, 0xb5, 0x92, 0x1e, 0xe5, 0xd0, 0xfc, 0x8b, 0x83, 0x27, 0xd9, 0x91, 0x5b, 0x93, 0x97, 0x37,
	0xc4, 0x9d, 0xbc, 0xcf, 0x39, 0x96, 0xa0, 0xc2, 0x62, 0xe8, 0xd4, 0x65, 0xa3, 0xbc, 0xae, 0xcd,
	0xdf, 0xf2, 0x38, 0xb7, 0x2a, 0xf9, 0xad, 0x78, 0x16, 0x1b, 0xb3, 0xe5, 0x7e, 0xcd, 0x3f, 0xc2,
	0xc3, 0x30, 0x6e, 0xfb, 0xc6, 0xa3, 0xf6, 0x88, 0xb8, 0x5d, 0x7b, 0x35, 0xbf, 0x97, 0x5f, 0x72,
	0x9c, 0xe7, 0x53, 0xfa, 0x26, 0x46, 0xe9, 0x30, 0x9b, 0x52, 0xe8, 0xd5, 0x1f, 0xaf, 0x80, 0xd6,
	0xef, 0x1c, 0xec, 0x65, 0xea, 0x60, 0x15, 0xf8, 0x39, 0x1b, 0x5e, 0xb5, 0x12, 0x2c, 0xf9, 0x7c,
	0x96, 0x85, 0x64, 0xc3, 0xf7, 0x01, 0xc2, 0x08, 0x41, 0x63, 0x23, 0x12, 0xf9, 0x5f, 0x1e, 0xb6,
	0x17, 0xb6, 0x60, 0xc5, 0x79, 0x44, 0x06, 0xaf, 0x18, 0x1f, 0xbc, 0x47, 0xb0, 0xce, 0xfe, 0xec,
	0x9a, 0x23, 0x22, 0x96, 0x58, 0x82, 0xa1, 0x00, 0x77, 0xa0, 0xdc, 0xf7, 0x88, 0xab, 0x5a, 0x62,
	0x99, 0x99, 0x05, 0xaf, 0xe9, 0xb8, 0xfa, 0xd9, 0x76, 0x6d, 0xf1, 0x8e, 0x3f, 0xae, 0xb3, 0xf7,
	0x34, 0xd3, 0xa9, 0x56, 0x73, 0x6c, 0x52, 0xd3, 0x15, 0x2b, 0x3e, 0xe7, 0x50, 0x82, 0x35, 0xd8,
	0xe8, 0xb9, 0xc3, 0x37, 0x44, 0xa5, 0x64, 0xa4, 0x5a, 0xe2, 0x3a, 0x73, 0x1c, 0x15, 0xf9, 0x5c,
	0x86, 0x6f, 0x08, 0xcb, 0x09, 0xfc, 0x9c, 0xe6, 0x82, 0xd0, 0x7e, 0x74, 0xd9, 0x77, 0xaf, 0xc4,
	0x0d, 0x86, 0x47, 0x45, 0xf8, 0x04, 0xee, 0x32, 0x0a, 0x6d, 0x93, 0x92, 0x4b, 0xdb, 0x9d, 0x88,
	0x9b, 0x35, 0xee, 0xa0, 0xa4, 0xc5, 0x85, 0xf2, 0x7f, 0x3c, 0x54, 0xe3, 0xff, 0x87, 0x56, 0x5c,
	0xf4, 0x58, 0x69, 0x8b, 0xc9, 0xd2, 0x7e, 0x0d, 0x95, 0x79, 0x7e, 0x25, 0x36, 0xe5, 0xb5, 0xac,
	0xe5, 0x35, 0xd3, 0xd3, 0xe6, 0x16, 0xd8, 0x02, 0xd0, 0x27, 0x1e, 0x25, 0x23, 0x63, 0xe2, 0x10,
	0xd6, 0x9c, 0x6a, 0x43, 0xce, 0x5c, 0x7e, 0x73, 0x4d, 0x2d, 0x62, 0x35, 0x65, 0xa7, 0xbf, 0xb2,
	0x5f, 0x07, 0x8d, 0x9a, 0xb6, 0xb1, 0xa2, 0x45, 0x24, 0x28, 0xc3, 0x26, 0xab, 0xea, 0x6c, 0x72,
	0x2a, 0x8c, 0x60, 0x4c, 0x86, 0x5f, 0x40, 0xd9, 0x5f, 0xad, 0xac, 0x8f, 0xb7, 0x2f, 0xe0, 0x40,
	0xfb, 0xf0, 0x4f, 0x0e, 0xee, 0xc6, 0x10, 0xdc, 0x01, 0xec, 0x9c, 0x18, 0x86, 0xa2, 0x9d, 0x5f,
	0xe8, 0x46, 0xd3, 0xe8, 0xeb, 0x17, 0xcd, 0x4e, 0x47, 0x58, 0xc3, 0x5d, 0xb8, 0x9f, 0x90, 0x9f,
	0x36, 0x55, 0x43, 0xe0, 0x70, 0x0f, 0xb6, 0x13, 0x80, 0xa6, 0x30, 0x88, 0x47, 0x09, 0x76, 0x12,
	0x50, 0xaf, 0xd3, 0x3c, 0x57, 0xbb, 0x47, 0x42, 0x01, 0x1f, 0xc2, 0x6e, 0x02, 0x3b, 0x6a, 0x1e,
	0x2b, 0x27, 0xdf, 0x2b, 0x9a, 0x50, 0x3c, 0xfc, 0x0a, 0xee, 0x25, 0x6a, 0x8e, 0x08, 0xd5, 0xb9,
	0xfe, 0xb9, 0x6e, 0x28, 0xc7, 0xc2, 0x1a, 0x3e, 0x00, 0x61, 0x26, 0x6b, 0xf7, 0x75, 0xe3, 0xe4,
	0x58, 0xd1, 0x04, 0xee, 0xf0, 0x37, 0x6e, 0x7e, 0x8c, 0x45, 0xaa, 0x1c, 0xcd, 0x9f, 0xd9, 0x5f,
	0x74, 0x9b, 0xc7, 0x8a, 0xb0, 0x86, 0x8f, 0x61, 0x2f, 0x01, 0x9c, 0x9e, 0x75, 0xd5, 0xf6, 0x0b,
	0x06, 0x73, 0x28, 0xc2, 0x83, 0x04, 0xdc, 0xfb, 0xee, 0xa4, 0xab, 0x08, 0x7c, 0x8c, 0xb8, 0x8f,
	0x18, 0x6a, 0xfb, 0x85, 0x62, 0x08, 0x85, 0xc6, 0x3f, 0x25, 0xc0, 0xc8, 0x3d, 0xa8, 0x13, 0x77,
	0x3c, 0x1c, 0x10, 0x3c, 0x83, 0x6a, 0xfc, 0x38, 0xc1, 0xf4, 0xac, 0xa4, 0x0e, 0x22, 0xe9, 0x56,
	0x1d, 0xcf, 0xc1, 0x4b, 0xb8, 0xbf, 0xe0, 0x3e, 0xc0, 0x8f, 0x73, 0x4c, 0xa3, 0x77, 0x8b, 0xf4,
	0x76, 0x8a, 0x9e, 0x83, 0xbf, 0x82, 0x94, 0xbd, 0x04, 0xb1, 0x9e, 0xe3, 0x66, 0xc1, 0x1d, 0x21,
	0x2d, 0xa5, 0xef, 0x39, 0x38, 0x06, 0x31, 0x6b, 0x5b, 0xe1, 0xa7, 0x39, 0xbe, 0x52, 0x5b, 0x53,
	0x5a, 0x42, 0xdb, 0x73, 0xf0, 0x5b, 0xc0, 0xf4, 0x3d, 0x8d, 0xe9, 0x35, 0xbe, 0xf0, 0xe8, 0x96,
	0x2a, 0xfe, 0xda, 0xf4, 0x1c, 0xec, 0xc1, 0x6e, 0xc6, 0xc9, 0x8f, 0x9f, 0xa4, 0x9c, 0x65, 0x7f,
	0x1c, 0x44, 0x3c, 0xfe, 0xc1, 0xc1, 0x87, 0xb7, 0x5e, 0x4c, 0xf8, 0xf9, 0x12, 0x75, 0x0e, 0xaf,
	0xac, 0x65, 0xdb, 0xd3, 0xda, 0xfa, 0x21, 0xf9, 0xc9, 0xf3, 0x53, 0x99, 0x7d, 0xeb, 0x3c, 0xfd,
	0x3f, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x17, 0x63, 0x2b, 0x1f, 0x0d, 0x00, 0x00,
}

// This following code was generated by tarsrpc
// Gernerated from LotteryData.proto
type LotteryDataService struct {
	s model.Servant
}

//SetServant is required by the servant interface.
func (obj *LotteryDataService) SetServant(s model.Servant) {
	obj.s = s
}

//AddServant is required by the servant interface
func (obj *LotteryDataService) AddServant(imp impLotteryDataService, objStr string) {
	tars.AddServant(obj, imp, objStr)
}

////AddServant adds servant  for the service with context
func (obj *LotteryDataService) AddServantWithContext(imp impLotteryDataServiceWithContext, objStr string) {
	tars.AddServantWithContext(obj, imp, objStr)
}

//TarsSetTimeout is required by the servant interface. t is the timeout in ms.
func (obj *LotteryDataService) TarsSetTimeout(t int) {
	obj.s.TarsSetTimeout(t)
}

//TarsSetProtocol is required by the servant interface. t is the protocol.
func (obj *LotteryDataService) TarsSetProtocol(p model.Protocol) {
	obj.s.TarsSetProtocol(p)
}

type impLotteryDataService interface {
	GetLotteryList(input GetLotteryListReq) (output GetLotteryListRsp, err error)
	GetLotteryBatchById(input GetLotteryBatchByIdReq) (output GetLotteryBatchByIdRsp, err error)
	GetLotteryWinnerRecordList(input GetLotteryWinnerRecordListReq) (output GetLotteryWinnerRecordListRsp, err error)
	GetLotteryCustomerNoList(input GetLotteryCustomerNoListReq) (output GetLotteryCustomerNoListRsp, err error)
	UpdateLotteryState(input UpdateLotteryStateReq) (output CodeRsp, err error)
	SaveLotteryWinnerRecord(input SaveLotteryWinnerRecordReq) (output CodeRsp, err error)
	GetLotteryWinnerRecordListByQuery(input GetLotteryWinnerRecordListByQueryReq) (output GetLotteryWinnerRecordListRsp, err error)
}

type impLotteryDataServiceWithContext interface {
	GetLotteryList(ctx context.Context, input GetLotteryListReq) (output GetLotteryListRsp, err error)
	GetLotteryBatchById(ctx context.Context, input GetLotteryBatchByIdReq) (output GetLotteryBatchByIdRsp, err error)
	GetLotteryWinnerRecordList(ctx context.Context, input GetLotteryWinnerRecordListReq) (output GetLotteryWinnerRecordListRsp, err error)
	GetLotteryCustomerNoList(ctx context.Context, input GetLotteryCustomerNoListReq) (output GetLotteryCustomerNoListRsp, err error)
	UpdateLotteryState(ctx context.Context, input UpdateLotteryStateReq) (output CodeRsp, err error)
	SaveLotteryWinnerRecord(ctx context.Context, input SaveLotteryWinnerRecordReq) (output CodeRsp, err error)
	GetLotteryWinnerRecordListByQuery(ctx context.Context, input GetLotteryWinnerRecordListByQueryReq) (output GetLotteryWinnerRecordListRsp, err error)
}

//Dispatch is used to call the user implement of the defined method.
func (obj *LotteryDataService) Dispatch(ctx context.Context, val interface{}, req *requestf.RequestPacket, resp *requestf.ResponsePacket, withContext bool) (err error) {
	input := tools.Int8ToByte(req.SBuffer)
	var output []byte
	funcName := req.SFuncName
	switch funcName {

	case "GetLotteryList":
		inputDefine := GetLotteryListReq{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res GetLotteryListRsp
		if withContext == false {
			imp := val.(impLotteryDataService)
			res, err = imp.GetLotteryList(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impLotteryDataServiceWithContext)
			res, err = imp.GetLotteryList(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GetLotteryBatchById":
		inputDefine := GetLotteryBatchByIdReq{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res GetLotteryBatchByIdRsp
		if withContext == false {
			imp := val.(impLotteryDataService)
			res, err = imp.GetLotteryBatchById(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impLotteryDataServiceWithContext)
			res, err = imp.GetLotteryBatchById(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GetLotteryWinnerRecordList":
		inputDefine := GetLotteryWinnerRecordListReq{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res GetLotteryWinnerRecordListRsp
		if withContext == false {
			imp := val.(impLotteryDataService)
			res, err = imp.GetLotteryWinnerRecordList(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impLotteryDataServiceWithContext)
			res, err = imp.GetLotteryWinnerRecordList(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GetLotteryCustomerNoList":
		inputDefine := GetLotteryCustomerNoListReq{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res GetLotteryCustomerNoListRsp
		if withContext == false {
			imp := val.(impLotteryDataService)
			res, err = imp.GetLotteryCustomerNoList(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impLotteryDataServiceWithContext)
			res, err = imp.GetLotteryCustomerNoList(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "UpdateLotteryState":
		inputDefine := UpdateLotteryStateReq{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res CodeRsp
		if withContext == false {
			imp := val.(impLotteryDataService)
			res, err = imp.UpdateLotteryState(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impLotteryDataServiceWithContext)
			res, err = imp.UpdateLotteryState(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "SaveLotteryWinnerRecord":
		inputDefine := SaveLotteryWinnerRecordReq{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res CodeRsp
		if withContext == false {
			imp := val.(impLotteryDataService)
			res, err = imp.SaveLotteryWinnerRecord(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impLotteryDataServiceWithContext)
			res, err = imp.SaveLotteryWinnerRecord(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GetLotteryWinnerRecordListByQuery":
		inputDefine := GetLotteryWinnerRecordListByQueryReq{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res GetLotteryWinnerRecordListRsp
		if withContext == false {
			imp := val.(impLotteryDataService)
			res, err = imp.GetLotteryWinnerRecordListByQuery(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impLotteryDataServiceWithContext)
			res, err = imp.GetLotteryWinnerRecordListByQuery(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	default:
		return fmt.Errorf("func mismatch")
	}
	var _status map[string]string
	s, ok := current.GetResponseStatus(ctx)
	if ok && s != nil {
		_status = s
	}
	var _context map[string]string
	c, ok := current.GetResponseContext(ctx)
	if ok && c != nil {
		_context = c
	}
	*resp = requestf.ResponsePacket{
		IVersion:     1,
		CPacketType:  0,
		IRequestId:   req.IRequestId,
		IMessageType: 0,
		IRet:         0,
		SBuffer:      tools.ByteToInt8(output),
		Status:       _status,
		SResultDesc:  "",
		Context:      _context,
	}
	return nil
}

// GetLotteryList is client rpc method as defined
func (obj *LotteryDataService) GetLotteryList(input GetLotteryListReq, _opt ...map[string]string) (output GetLotteryListRsp, err error) {
	ctx := context.Background()
	return obj.GetLotteryListWithContext(ctx, input, _opt...)
}

// GetLotteryListWithContext is client rpc method as defined
func (obj *LotteryDataService) GetLotteryListWithContext(ctx context.Context, input GetLotteryListReq, _opt ...map[string]string) (output GetLotteryListRsp, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GetLotteryList", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GetLotteryBatchById is client rpc method as defined
func (obj *LotteryDataService) GetLotteryBatchById(input GetLotteryBatchByIdReq, _opt ...map[string]string) (output GetLotteryBatchByIdRsp, err error) {
	ctx := context.Background()
	return obj.GetLotteryBatchByIdWithContext(ctx, input, _opt...)
}

// GetLotteryBatchByIdWithContext is client rpc method as defined
func (obj *LotteryDataService) GetLotteryBatchByIdWithContext(ctx context.Context, input GetLotteryBatchByIdReq, _opt ...map[string]string) (output GetLotteryBatchByIdRsp, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GetLotteryBatchById", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GetLotteryWinnerRecordList is client rpc method as defined
func (obj *LotteryDataService) GetLotteryWinnerRecordList(input GetLotteryWinnerRecordListReq, _opt ...map[string]string) (output GetLotteryWinnerRecordListRsp, err error) {
	ctx := context.Background()
	return obj.GetLotteryWinnerRecordListWithContext(ctx, input, _opt...)
}

// GetLotteryWinnerRecordListWithContext is client rpc method as defined
func (obj *LotteryDataService) GetLotteryWinnerRecordListWithContext(ctx context.Context, input GetLotteryWinnerRecordListReq, _opt ...map[string]string) (output GetLotteryWinnerRecordListRsp, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GetLotteryWinnerRecordList", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GetLotteryCustomerNoList is client rpc method as defined
func (obj *LotteryDataService) GetLotteryCustomerNoList(input GetLotteryCustomerNoListReq, _opt ...map[string]string) (output GetLotteryCustomerNoListRsp, err error) {
	ctx := context.Background()
	return obj.GetLotteryCustomerNoListWithContext(ctx, input, _opt...)
}

// GetLotteryCustomerNoListWithContext is client rpc method as defined
func (obj *LotteryDataService) GetLotteryCustomerNoListWithContext(ctx context.Context, input GetLotteryCustomerNoListReq, _opt ...map[string]string) (output GetLotteryCustomerNoListRsp, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GetLotteryCustomerNoList", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// UpdateLotteryState is client rpc method as defined
func (obj *LotteryDataService) UpdateLotteryState(input UpdateLotteryStateReq, _opt ...map[string]string) (output CodeRsp, err error) {
	ctx := context.Background()
	return obj.UpdateLotteryStateWithContext(ctx, input, _opt...)
}

// UpdateLotteryStateWithContext is client rpc method as defined
func (obj *LotteryDataService) UpdateLotteryStateWithContext(ctx context.Context, input UpdateLotteryStateReq, _opt ...map[string]string) (output CodeRsp, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "UpdateLotteryState", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// SaveLotteryWinnerRecord is client rpc method as defined
func (obj *LotteryDataService) SaveLotteryWinnerRecord(input SaveLotteryWinnerRecordReq, _opt ...map[string]string) (output CodeRsp, err error) {
	ctx := context.Background()
	return obj.SaveLotteryWinnerRecordWithContext(ctx, input, _opt...)
}

// SaveLotteryWinnerRecordWithContext is client rpc method as defined
func (obj *LotteryDataService) SaveLotteryWinnerRecordWithContext(ctx context.Context, input SaveLotteryWinnerRecordReq, _opt ...map[string]string) (output CodeRsp, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "SaveLotteryWinnerRecord", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GetLotteryWinnerRecordListByQuery is client rpc method as defined
func (obj *LotteryDataService) GetLotteryWinnerRecordListByQuery(input GetLotteryWinnerRecordListByQueryReq, _opt ...map[string]string) (output GetLotteryWinnerRecordListRsp, err error) {
	ctx := context.Background()
	return obj.GetLotteryWinnerRecordListByQueryWithContext(ctx, input, _opt...)
}

// GetLotteryWinnerRecordListByQueryWithContext is client rpc method as defined
func (obj *LotteryDataService) GetLotteryWinnerRecordListByQueryWithContext(ctx context.Context, input GetLotteryWinnerRecordListByQueryReq, _opt ...map[string]string) (output GetLotteryWinnerRecordListRsp, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GetLotteryWinnerRecordListByQuery", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}
