// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Game.proto

package redenvelopegame

import (
	context "context"
	fmt "fmt"
	tars "github.com/TarsCloud/TarsGo/tars"
	model "github.com/TarsCloud/TarsGo/tars/model"
	requestf "github.com/TarsCloud/TarsGo/tars/protocol/res/requestf"
	current "github.com/TarsCloud/TarsGo/tars/util/current"
	tools "github.com/TarsCloud/TarsGo/tars/util/tools"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GameInfo struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Cover                string   `protobuf:"bytes,3,opt,name=Cover,proto3" json:"Cover,omitempty"`
	LiveSite             string   `protobuf:"bytes,4,opt,name=LiveSite,proto3" json:"LiveSite,omitempty"`
	PhoneSite            string   `protobuf:"bytes,5,opt,name=PhoneSite,proto3" json:"PhoneSite,omitempty"`
	ControlSite          string   `protobuf:"bytes,6,opt,name=ControlSite,proto3" json:"ControlSite,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=Description,proto3" json:"Description,omitempty"`
	TopicId              string   `protobuf:"bytes,8,opt,name=TopicId,proto3" json:"TopicId,omitempty"`
	ResourceDomain       string   `protobuf:"bytes,9,opt,name=ResourceDomain,proto3" json:"ResourceDomain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameInfo) Reset()         { *m = GameInfo{} }
func (m *GameInfo) String() string { return proto.CompactTextString(m) }
func (*GameInfo) ProtoMessage()    {}
func (*GameInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a508e860af41bdad, []int{0}
}

func (m *GameInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameInfo.Unmarshal(m, b)
}
func (m *GameInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameInfo.Marshal(b, m, deterministic)
}
func (m *GameInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameInfo.Merge(m, src)
}
func (m *GameInfo) XXX_Size() int {
	return xxx_messageInfo_GameInfo.Size(m)
}
func (m *GameInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GameInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GameInfo proto.InternalMessageInfo

func (m *GameInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GameInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GameInfo) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *GameInfo) GetLiveSite() string {
	if m != nil {
		return m.LiveSite
	}
	return ""
}

func (m *GameInfo) GetPhoneSite() string {
	if m != nil {
		return m.PhoneSite
	}
	return ""
}

func (m *GameInfo) GetControlSite() string {
	if m != nil {
		return m.ControlSite
	}
	return ""
}

func (m *GameInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GameInfo) GetTopicId() string {
	if m != nil {
		return m.TopicId
	}
	return ""
}

func (m *GameInfo) GetResourceDomain() string {
	if m != nil {
		return m.ResourceDomain
	}
	return ""
}

type GetGameReq struct {
	GameId               int64    `protobuf:"varint,1,opt,name=GameId,proto3" json:"GameId,omitempty"`
	ActivityId           int64    `protobuf:"varint,2,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGameReq) Reset()         { *m = GetGameReq{} }
func (m *GetGameReq) String() string { return proto.CompactTextString(m) }
func (*GetGameReq) ProtoMessage()    {}
func (*GetGameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a508e860af41bdad, []int{1}
}

func (m *GetGameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGameReq.Unmarshal(m, b)
}
func (m *GetGameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGameReq.Marshal(b, m, deterministic)
}
func (m *GetGameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGameReq.Merge(m, src)
}
func (m *GetGameReq) XXX_Size() int {
	return xxx_messageInfo_GetGameReq.Size(m)
}
func (m *GetGameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGameReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetGameReq proto.InternalMessageInfo

func (m *GetGameReq) GetGameId() int64 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *GetGameReq) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

type GetGameRsp struct {
	Code                 Code      `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	Game                 *GameInfo `protobuf:"bytes,2,opt,name=Game,proto3" json:"Game,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetGameRsp) Reset()         { *m = GetGameRsp{} }
func (m *GetGameRsp) String() string { return proto.CompactTextString(m) }
func (*GetGameRsp) ProtoMessage()    {}
func (*GetGameRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a508e860af41bdad, []int{2}
}

func (m *GetGameRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGameRsp.Unmarshal(m, b)
}
func (m *GetGameRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGameRsp.Marshal(b, m, deterministic)
}
func (m *GetGameRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGameRsp.Merge(m, src)
}
func (m *GetGameRsp) XXX_Size() int {
	return xxx_messageInfo_GetGameRsp.Size(m)
}
func (m *GetGameRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGameRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetGameRsp proto.InternalMessageInfo

func (m *GetGameRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *GetGameRsp) GetGame() *GameInfo {
	if m != nil {
		return m.Game
	}
	return nil
}

func init() {
	proto.RegisterType((*GameInfo)(nil), "GameInfo")
	proto.RegisterType((*GetGameReq)(nil), "GetGameReq")
	proto.RegisterType((*GetGameRsp)(nil), "GetGameRsp")
}

func init() { proto.RegisterFile("Game.proto", fileDescriptor_a508e860af41bdad) }

var fileDescriptor_a508e860af41bdad = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x69, 0x9a, 0x36, 0xcd, 0x44, 0x7a, 0x18, 0x44, 0xd6, 0xa2, 0x52, 0x2a, 0x48, 0x4f,
	0x39, 0xc4, 0x27, 0xd0, 0x14, 0x4b, 0x40, 0x44, 0xb6, 0x9e, 0xbc, 0xd5, 0x64, 0xc5, 0x05, 0x93,
	0x89, 0x9b, 0x6d, 0xc0, 0xbb, 0x0f, 0x2e, 0x99, 0x34, 0x26, 0x78, 0x4a, 0xfe, 0xef, 0x1b, 0x86,
	0xe5, 0x1f, 0x80, 0xed, 0x3e, 0x57, 0x61, 0x69, 0xc8, 0xd2, 0xe2, 0x24, 0xa6, 0x3c, 0xa7, 0xa2,
	0x4d, 0xab, 0x1f, 0x07, 0x66, 0x8d, 0x4c, 0x8a, 0x77, 0xc2, 0x39, 0x38, 0x49, 0x26, 0x46, 0xcb,
	0xd1, 0x7a, 0x2c, 0x9d, 0x24, 0x43, 0x04, 0xf7, 0x69, 0x9f, 0x2b, 0xe1, 0x2c, 0x47, 0x6b, 0x5f,
	0xf2, 0x3f, 0x9e, 0xc2, 0x24, 0xa6, 0x5a, 0x19, 0x31, 0x66, 0xd8, 0x06, 0x5c, 0xc0, 0xec, 0x51,
	0xd7, 0x6a, 0xa7, 0xad, 0x12, 0x2e, 0x8b, 0xbf, 0x8c, 0x17, 0xe0, 0x3f, 0x7f, 0x50, 0xd1, 0xca,
	0x09, 0xcb, 0x1e, 0xe0, 0x12, 0x82, 0x98, 0x0a, 0x6b, 0xe8, 0x93, 0xfd, 0x94, 0xfd, 0x10, 0x35,
	0x13, 0x1b, 0x55, 0xa5, 0x46, 0x97, 0x56, 0x53, 0x21, 0xbc, 0x76, 0x62, 0x80, 0x50, 0x80, 0xf7,
	0x42, 0xa5, 0x4e, 0x93, 0x4c, 0xcc, 0xd8, 0x76, 0x11, 0x6f, 0x60, 0x2e, 0x55, 0x45, 0x07, 0x93,
	0xaa, 0x0d, 0xe5, 0x7b, 0x5d, 0x08, 0x9f, 0x07, 0xfe, 0xd1, 0xd5, 0x06, 0x60, 0xab, 0x6c, 0x53,
	0x84, 0x54, 0x5f, 0x78, 0x06, 0x53, 0xee, 0xa4, 0xeb, 0xe2, 0x98, 0xf0, 0x0a, 0xe0, 0x2e, 0xb5,
	0xba, 0xd6, 0xf6, 0x3b, 0xc9, 0xb8, 0x95, 0xb1, 0x1c, 0x90, 0xd5, 0x43, 0xbf, 0xa5, 0x2a, 0xf1,
	0x1c, 0xdc, 0x98, 0x32, 0xc5, 0x3b, 0xe6, 0xd1, 0x24, 0x6c, 0x82, 0x64, 0x84, 0x97, 0xe0, 0x6e,
	0xbb, 0x62, 0x83, 0xc8, 0x0f, 0xbb, 0x0b, 0x48, 0xc6, 0x51, 0x04, 0x41, 0xf3, 0xdd, 0x29, 0x53,
	0xeb, 0x54, 0xe1, 0x35, 0x78, 0xc7, 0xb5, 0x18, 0x84, 0xfd, 0x33, 0x17, 0x7d, 0xa8, 0xca, 0x7b,
	0xff, 0xd5, 0x2b, 0x0d, 0x65, 0x87, 0xd4, 0xbe, 0x4d, 0xf9, 0xb4, 0xb7, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xbf, 0x6e, 0x17, 0x8c, 0xf6, 0x01, 0x00, 0x00,
}

// This following code was generated by tarsrpc
// Gernerated from Game.proto
type GameService struct {
	s model.Servant
}

//SetServant is required by the servant interface.
func (obj *GameService) SetServant(s model.Servant) {
	obj.s = s
}

//AddServant is required by the servant interface
func (obj *GameService) AddServant(imp impGameService, objStr string) {
	tars.AddServant(obj, imp, objStr)
}

////AddServant adds servant  for the service with context
func (obj *GameService) AddServantWithContext(imp impGameServiceWithContext, objStr string) {
	tars.AddServantWithContext(obj, imp, objStr)
}

//TarsSetTimeout is required by the servant interface. t is the timeout in ms.
func (obj *GameService) TarsSetTimeout(t int) {
	obj.s.TarsSetTimeout(t)
}

//TarsSetProtocol is required by the servant interface. t is the protocol.
func (obj *GameService) TarsSetProtocol(p model.Protocol) {
	obj.s.TarsSetProtocol(p)
}

type impGameService interface {
	GetGame(input GetGameReq) (output GetGameRsp, err error)
}

type impGameServiceWithContext interface {
	GetGame(ctx context.Context, input GetGameReq) (output GetGameRsp, err error)
}

//Dispatch is used to call the user implement of the defined method.
func (obj *GameService) Dispatch(ctx context.Context, val interface{}, req *requestf.RequestPacket, resp *requestf.ResponsePacket, withContext bool) (err error) {
	input := tools.Int8ToByte(req.SBuffer)
	var output []byte
	funcName := req.SFuncName
	switch funcName {

	case "GetGame":
		inputDefine := GetGameReq{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res GetGameRsp
		if withContext == false {
			imp := val.(impGameService)
			res, err = imp.GetGame(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impGameServiceWithContext)
			res, err = imp.GetGame(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	default:
		return fmt.Errorf("func mismatch")
	}
	var _status map[string]string
	s, ok := current.GetResponseStatus(ctx)
	if ok && s != nil {
		_status = s
	}
	var _context map[string]string
	c, ok := current.GetResponseContext(ctx)
	if ok && c != nil {
		_context = c
	}
	*resp = requestf.ResponsePacket{
		IVersion:     1,
		CPacketType:  0,
		IRequestId:   req.IRequestId,
		IMessageType: 0,
		IRet:         0,
		SBuffer:      tools.ByteToInt8(output),
		Status:       _status,
		SResultDesc:  "",
		Context:      _context,
	}
	return nil
}

// GetGame is client rpc method as defined
func (obj *GameService) GetGame(input GetGameReq, _opt ...map[string]string) (output GetGameRsp, err error) {
	ctx := context.Background()
	return obj.GetGameWithContext(ctx, input, _opt...)
}

// GetGameWithContext is client rpc method as defined
func (obj *GameService) GetGameWithContext(ctx context.Context, input GetGameReq, _opt ...map[string]string) (output GetGameRsp, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GetGame", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}
