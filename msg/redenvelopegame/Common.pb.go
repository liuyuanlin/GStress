// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Common.proto

package redenvelopegame

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Code int32

const (
	Code_NOT_USE Code = 0
	Code_SUCCESS Code = 1
	Code_FAIL    Code = 2
	//tenant服务 100开头
	Code_TENANT_NAME_EXIST           Code = 10001
	Code_TENANT_PHONE_EXIST          Code = 10002
	Code_TENANT_MAIL_EXIST           Code = 10003
	Code_TENANT_NOT_EXIST            Code = 10004
	Code_TENANT_CAN_NOT_MODIFY       Code = 10005
	Code_TENANT_CAN_NOT_REPEAT_APPLY Code = 10006
	//wallet服务 200开头
	Code_WALLET_REPEAT_ADD                      Code = 20001
	Code_WALLET_RECORD_NOTFOUND                 Code = 20002
	Code_WALLET_AUDIT_NOPASS_NOPROCESS          Code = 20003
	Code_WALLET_BALANCE_FREEZE_NOPROCESS        Code = 20004
	Code_WALLET_NOT_SUFFICIENT_FUNDS            Code = 20005
	Code_WALLET_ORDERNO_INVALID                 Code = 20006
	Code_WALLET_ORDER_HAVE_PAID                 Code = 20007
	Code_WALLET_ACTIVITY_NOT_FOUND              Code = 20008
	Code_WALLET_NOTIFY_ANALYSIS_ERROR           Code = 20009
	Code_WALLET_NOTIRY_VERIFY_ERROR             Code = 20010
	Code_WALLET_NOTIRY_REPEAT                   Code = 20011
	Code_WALLET_AMOUNT_INVALID                  Code = 20012
	Code_WALLET_SYSTEM_NOT_ALLOWED_EDIT         Code = 20013
	Code_WALLET_PAY_PARAMS_NOT_EMPTY            Code = 20014
	Code_WALLET_ACTIVITY_ACCOUNT_REINVENT       Code = 20015
	Code_WALLET_ACTIVITY_PAYMENT_NOT_CONFIGURED Code = 20016
	Code_WALLET_PAYMENT_ACCOUNT_REINVENT        Code = 20017
	Code_WALLET_ACTIVITY_PAYMENT_TYPE_ERROR     Code = 20018
	Code_WALLET_PAYMENT_ACCOUNT_BEING_USED      Code = 20019
	Code_WALLET_APPID_REQUIRED                  Code = 20020
	Code_WALLET_PAYMENT_ACCOUNT_NO_CONFIGURED   Code = 20021
	Code_WALLET_PAYTYPE_INVALID                 Code = 20022
	Code_WALLET_NOT_INPUT_RIGHT_ACCOUNT_NO      Code = 20024
	Code_WALLET_NOT_INPUT_RIGHT_BANK_NAME       Code = 20025
	Code_WALLET_NOT_INPUT_RIGHT_ACCOUNT_NAME    Code = 20023
	Code_WALLET_NOT_INPUT_RIGHT_PASSPORT        Code = 20026
	//user服务 300开头
	Code_USER_LOGIN_USER_OR_PASSWORD_ERROR Code = 30001
	Code_USER_LOGIN_SMS_VERIFY_ERROR       Code = 30002
	Code_USER_LOGIN_CAPTCHA_ERROR          Code = 30003
	Code_USER_REGISTER_CAPTCHA_ERROR       Code = 30004
	Code_USER_REGISTER_SMS_VERIFY_ERROR    Code = 30005
	Code_USER_TOKEN_ERROR                  Code = 30006
	Code_USER_TOKEN_EXPIRED                Code = 30007
	Code_USER_NOT_EXIST                    Code = 30008
	Code_ORGANIZER_EXIST                   Code = 30009
	//优惠服务 400开头
	Code_PREF_NAME_EXIST        Code = 40001
	Code_PREF_POLICY_NAME_EXIST Code = 40002
	//活动服务 500开头
	Code_ACTIVITY_DATE_INVALID             Code = 50001
	Code_ACTIVITY_RECORD_NOTFOUND          Code = 50002
	Code_ACTIVITY_ADDRESS_REQUIRED         Code = 50003
	Code_ACTIVITY_STARTED_NOT_DELETE       Code = 50004
	Code_ACTIVITY_DEFAULT_PLACE_NOT_DELETE Code = 50005
	Code_ACTIVITY_PLACE_EXCEED_LIMIT       Code = 50006
	//门票服务 600开头
	Code_TICKET_RECORD_NOTFOUND      Code = 60001
	Code_TICKET_UNDERSTOCK           Code = 60002
	Code_TICKET_NAME_EXIST           Code = 60003
	Code_TICKET_PAYMENT_NO_CONFIGUED Code = 60004
	//签到服务 700开头
	Code_SIGN_RECORD_NOTFOUND                  Code = 70001
	Code_SIGN_DATE_INVALID                     Code = 70002
	Code_SIGN_ATTENDER_USERID_REPEAT_BINDING   Code = 70003
	Code_SIGN_REQUEST_PARAMETER_INVALID        Code = 70004
	Code_SIGN_SIGNIN_ATTENDER_NOT_EXIST        Code = 70005
	Code_SIGN_ATTENDER_REPEAT_APPLY            Code = 70006
	Code_SIGN_EXCEL_ROW_COUNT_OVERRUN          Code = 70007
	Code_SIGN_EXCEL_TEMPLATE_CHECK_FAILURE     Code = 70008
	Code_SIGN_JSON_ANALYSIS_ERROR              Code = 70009
	Code_SIGN_EXEC_FORM_CREATE_OR_UPDATE_ERROR Code = 70010
	Code_SIGN_EXEC_GETFORM_ERROR               Code = 70011
	Code_SIGN_EXEC_CREATEORDER_ERROR           Code = 70012
	Code_SIGN_TICKET_UNDERSTOCK                Code = 70013
	Code_SIGN_EXPORT_DATA_EMPTY                Code = 70014
	Code_SIGN_DEFAULT_SIGNDROP                 Code = 70015
	//通知服务 800开头
	Code_NOTIFY_TEMPLATE_NOT_EXIST    Code = 80001
	Code_NOTIFY_SEND_FAIL             Code = 80002
	Code_NOTIFY_TEMPLATE_CAN_NOT_EDIT Code = 80003
	Code_NOTIFY_PARAMS_ERROR          Code = 80004
	//报名服务 900开头
	Code_SIGNUP_PARAMS_NO_ACTIVITY_ID  Code = 90001
	Code_SIGNUP_NO_TEMPLATE            Code = 90002
	Code_SIGNUP_NO_INPUT_UNIQUE        Code = 90003
	Code_SIGNUP_UNIQUE_VALUE_EXIT      Code = 90004
	Code_SIGNUP_ACTIVITY_NEED_TICKET   Code = 90005
	Code_SIGNUP_CHAN_NAME_EXIT         Code = 90006
	Code_SIGNUP_CHAN_PATH_EXIT         Code = 90007
	Code_SIGNUP_CHAN_ID_ERROR          Code = 90008
	Code_SIGNUP_CHAN_PATH_NOT_EXIT     Code = 90009
	Code_SIGNUP_REPEATED               Code = 90010
	Code_SIGNUP_PHONE_FORMAT_ERR       Code = 90011
	Code_SIGNUP_MAIL_FORMAT_ERR        Code = 90012
	Code_SIGNUP_UNIQUE_SHOULD_REQUIRED Code = 90013
	Code_SIGNUP_NOT_BEGIN              Code = 90014
	Code_SIGNUP_ALREADY_END            Code = 90015
	Code_SIGNUP_DATE_ERROR             Code = 90016
	//表单服务 1000开头
	Code_FORM_ID_ERROR Code = 100001
	//游戏服务 1100开头
	Code_GAME_NOT_EXIST          Code = 110001
	Code_GAME_NOT_START          Code = 110002
	Code_GAME_ENDED              Code = 110003
	Code_GAME_PARAMS_INVALID     Code = 110004
	Code_GAME_FINISHED           Code = 110005
	Code_GAME_NO_PRIZE           Code = 110006
	Code_GAME_NO_WINNER          Code = 110007
	Code_GAME_START              Code = 110008
	Code_GAME_PRIZE_FILLED       Code = 110009
	Code_GAME_NOT_JOIN           Code = 110010
	Code_GAME_MESSAGE_ISBAD      Code = 110011
	Code_GAME_MESSAGE_SEND_LIMIT Code = 110012
	//订单服务 1200开头
	Code_ORDER_NOT_EXIST         Code = 120001
	Code_ORDER_ALREADY_PAID      Code = 120002
	Code_ORDER_INVOICE_NOT_EXIST Code = 120003
	//开放平台服务 1300开头
	Code_OPEN_PLATFORM_NOT_CONF                     Code = 130001
	Code_OPEN_PLATFORM_NOT_RECEIVE_ACCOUNT          Code = 130002
	Code_OPEN_PLATFORM_NOT_MINI_RECEIVE_ACCOUNT     Code = 130003
	Code_OPEN_PLATFORM_NOT_OFFICIAL_RECEIVE_ACCOUNT Code = 130004
	Code_OPEN_PLATFORM_NOT_H5_RECEIVE_ACCOUNT       Code = 130005
)

var Code_name = map[int32]string{
	0:      "NOT_USE",
	1:      "SUCCESS",
	2:      "FAIL",
	10001:  "TENANT_NAME_EXIST",
	10002:  "TENANT_PHONE_EXIST",
	10003:  "TENANT_MAIL_EXIST",
	10004:  "TENANT_NOT_EXIST",
	10005:  "TENANT_CAN_NOT_MODIFY",
	10006:  "TENANT_CAN_NOT_REPEAT_APPLY",
	20001:  "WALLET_REPEAT_ADD",
	20002:  "WALLET_RECORD_NOTFOUND",
	20003:  "WALLET_AUDIT_NOPASS_NOPROCESS",
	20004:  "WALLET_BALANCE_FREEZE_NOPROCESS",
	20005:  "WALLET_NOT_SUFFICIENT_FUNDS",
	20006:  "WALLET_ORDERNO_INVALID",
	20007:  "WALLET_ORDER_HAVE_PAID",
	20008:  "WALLET_ACTIVITY_NOT_FOUND",
	20009:  "WALLET_NOTIFY_ANALYSIS_ERROR",
	20010:  "WALLET_NOTIRY_VERIFY_ERROR",
	20011:  "WALLET_NOTIRY_REPEAT",
	20012:  "WALLET_AMOUNT_INVALID",
	20013:  "WALLET_SYSTEM_NOT_ALLOWED_EDIT",
	20014:  "WALLET_PAY_PARAMS_NOT_EMPTY",
	20015:  "WALLET_ACTIVITY_ACCOUNT_REINVENT",
	20016:  "WALLET_ACTIVITY_PAYMENT_NOT_CONFIGURED",
	20017:  "WALLET_PAYMENT_ACCOUNT_REINVENT",
	20018:  "WALLET_ACTIVITY_PAYMENT_TYPE_ERROR",
	20019:  "WALLET_PAYMENT_ACCOUNT_BEING_USED",
	20020:  "WALLET_APPID_REQUIRED",
	20021:  "WALLET_PAYMENT_ACCOUNT_NO_CONFIGURED",
	20022:  "WALLET_PAYTYPE_INVALID",
	20024:  "WALLET_NOT_INPUT_RIGHT_ACCOUNT_NO",
	20025:  "WALLET_NOT_INPUT_RIGHT_BANK_NAME",
	20023:  "WALLET_NOT_INPUT_RIGHT_ACCOUNT_NAME",
	20026:  "WALLET_NOT_INPUT_RIGHT_PASSPORT",
	30001:  "USER_LOGIN_USER_OR_PASSWORD_ERROR",
	30002:  "USER_LOGIN_SMS_VERIFY_ERROR",
	30003:  "USER_LOGIN_CAPTCHA_ERROR",
	30004:  "USER_REGISTER_CAPTCHA_ERROR",
	30005:  "USER_REGISTER_SMS_VERIFY_ERROR",
	30006:  "USER_TOKEN_ERROR",
	30007:  "USER_TOKEN_EXPIRED",
	30008:  "USER_NOT_EXIST",
	30009:  "ORGANIZER_EXIST",
	40001:  "PREF_NAME_EXIST",
	40002:  "PREF_POLICY_NAME_EXIST",
	50001:  "ACTIVITY_DATE_INVALID",
	50002:  "ACTIVITY_RECORD_NOTFOUND",
	50003:  "ACTIVITY_ADDRESS_REQUIRED",
	50004:  "ACTIVITY_STARTED_NOT_DELETE",
	50005:  "ACTIVITY_DEFAULT_PLACE_NOT_DELETE",
	50006:  "ACTIVITY_PLACE_EXCEED_LIMIT",
	60001:  "TICKET_RECORD_NOTFOUND",
	60002:  "TICKET_UNDERSTOCK",
	60003:  "TICKET_NAME_EXIST",
	60004:  "TICKET_PAYMENT_NO_CONFIGUED",
	70001:  "SIGN_RECORD_NOTFOUND",
	70002:  "SIGN_DATE_INVALID",
	70003:  "SIGN_ATTENDER_USERID_REPEAT_BINDING",
	70004:  "SIGN_REQUEST_PARAMETER_INVALID",
	70005:  "SIGN_SIGNIN_ATTENDER_NOT_EXIST",
	70006:  "SIGN_ATTENDER_REPEAT_APPLY",
	70007:  "SIGN_EXCEL_ROW_COUNT_OVERRUN",
	70008:  "SIGN_EXCEL_TEMPLATE_CHECK_FAILURE",
	70009:  "SIGN_JSON_ANALYSIS_ERROR",
	70010:  "SIGN_EXEC_FORM_CREATE_OR_UPDATE_ERROR",
	70011:  "SIGN_EXEC_GETFORM_ERROR",
	70012:  "SIGN_EXEC_CREATEORDER_ERROR",
	70013:  "SIGN_TICKET_UNDERSTOCK",
	70014:  "SIGN_EXPORT_DATA_EMPTY",
	70015:  "SIGN_DEFAULT_SIGNDROP",
	80001:  "NOTIFY_TEMPLATE_NOT_EXIST",
	80002:  "NOTIFY_SEND_FAIL",
	80003:  "NOTIFY_TEMPLATE_CAN_NOT_EDIT",
	80004:  "NOTIFY_PARAMS_ERROR",
	90001:  "SIGNUP_PARAMS_NO_ACTIVITY_ID",
	90002:  "SIGNUP_NO_TEMPLATE",
	90003:  "SIGNUP_NO_INPUT_UNIQUE",
	90004:  "SIGNUP_UNIQUE_VALUE_EXIT",
	90005:  "SIGNUP_ACTIVITY_NEED_TICKET",
	90006:  "SIGNUP_CHAN_NAME_EXIT",
	90007:  "SIGNUP_CHAN_PATH_EXIT",
	90008:  "SIGNUP_CHAN_ID_ERROR",
	90009:  "SIGNUP_CHAN_PATH_NOT_EXIT",
	90010:  "SIGNUP_REPEATED",
	90011:  "SIGNUP_PHONE_FORMAT_ERR",
	90012:  "SIGNUP_MAIL_FORMAT_ERR",
	90013:  "SIGNUP_UNIQUE_SHOULD_REQUIRED",
	90014:  "SIGNUP_NOT_BEGIN",
	90015:  "SIGNUP_ALREADY_END",
	90016:  "SIGNUP_DATE_ERROR",
	100001: "FORM_ID_ERROR",
	110001: "GAME_NOT_EXIST",
	110002: "GAME_NOT_START",
	110003: "GAME_ENDED",
	110004: "GAME_PARAMS_INVALID",
	110005: "GAME_FINISHED",
	110006: "GAME_NO_PRIZE",
	110007: "GAME_NO_WINNER",
	110008: "GAME_START",
	110009: "GAME_PRIZE_FILLED",
	110010: "GAME_NOT_JOIN",
	110011: "GAME_MESSAGE_ISBAD",
	110012: "GAME_MESSAGE_SEND_LIMIT",
	120001: "ORDER_NOT_EXIST",
	120002: "ORDER_ALREADY_PAID",
	120003: "ORDER_INVOICE_NOT_EXIST",
	130001: "OPEN_PLATFORM_NOT_CONF",
	130002: "OPEN_PLATFORM_NOT_RECEIVE_ACCOUNT",
	130003: "OPEN_PLATFORM_NOT_MINI_RECEIVE_ACCOUNT",
	130004: "OPEN_PLATFORM_NOT_OFFICIAL_RECEIVE_ACCOUNT",
	130005: "OPEN_PLATFORM_NOT_H5_RECEIVE_ACCOUNT",
}

var Code_value = map[string]int32{
	"NOT_USE":                                    0,
	"SUCCESS":                                    1,
	"FAIL":                                       2,
	"TENANT_NAME_EXIST":                          10001,
	"TENANT_PHONE_EXIST":                         10002,
	"TENANT_MAIL_EXIST":                          10003,
	"TENANT_NOT_EXIST":                           10004,
	"TENANT_CAN_NOT_MODIFY":                      10005,
	"TENANT_CAN_NOT_REPEAT_APPLY":                10006,
	"WALLET_REPEAT_ADD":                          20001,
	"WALLET_RECORD_NOTFOUND":                     20002,
	"WALLET_AUDIT_NOPASS_NOPROCESS":              20003,
	"WALLET_BALANCE_FREEZE_NOPROCESS":            20004,
	"WALLET_NOT_SUFFICIENT_FUNDS":                20005,
	"WALLET_ORDERNO_INVALID":                     20006,
	"WALLET_ORDER_HAVE_PAID":                     20007,
	"WALLET_ACTIVITY_NOT_FOUND":                  20008,
	"WALLET_NOTIFY_ANALYSIS_ERROR":               20009,
	"WALLET_NOTIRY_VERIFY_ERROR":                 20010,
	"WALLET_NOTIRY_REPEAT":                       20011,
	"WALLET_AMOUNT_INVALID":                      20012,
	"WALLET_SYSTEM_NOT_ALLOWED_EDIT":             20013,
	"WALLET_PAY_PARAMS_NOT_EMPTY":                20014,
	"WALLET_ACTIVITY_ACCOUNT_REINVENT":           20015,
	"WALLET_ACTIVITY_PAYMENT_NOT_CONFIGURED":     20016,
	"WALLET_PAYMENT_ACCOUNT_REINVENT":            20017,
	"WALLET_ACTIVITY_PAYMENT_TYPE_ERROR":         20018,
	"WALLET_PAYMENT_ACCOUNT_BEING_USED":          20019,
	"WALLET_APPID_REQUIRED":                      20020,
	"WALLET_PAYMENT_ACCOUNT_NO_CONFIGURED":       20021,
	"WALLET_PAYTYPE_INVALID":                     20022,
	"WALLET_NOT_INPUT_RIGHT_ACCOUNT_NO":          20024,
	"WALLET_NOT_INPUT_RIGHT_BANK_NAME":           20025,
	"WALLET_NOT_INPUT_RIGHT_ACCOUNT_NAME":        20023,
	"WALLET_NOT_INPUT_RIGHT_PASSPORT":            20026,
	"USER_LOGIN_USER_OR_PASSWORD_ERROR":          30001,
	"USER_LOGIN_SMS_VERIFY_ERROR":                30002,
	"USER_LOGIN_CAPTCHA_ERROR":                   30003,
	"USER_REGISTER_CAPTCHA_ERROR":                30004,
	"USER_REGISTER_SMS_VERIFY_ERROR":             30005,
	"USER_TOKEN_ERROR":                           30006,
	"USER_TOKEN_EXPIRED":                         30007,
	"USER_NOT_EXIST":                             30008,
	"ORGANIZER_EXIST":                            30009,
	"PREF_NAME_EXIST":                            40001,
	"PREF_POLICY_NAME_EXIST":                     40002,
	"ACTIVITY_DATE_INVALID":                      50001,
	"ACTIVITY_RECORD_NOTFOUND":                   50002,
	"ACTIVITY_ADDRESS_REQUIRED":                  50003,
	"ACTIVITY_STARTED_NOT_DELETE":                50004,
	"ACTIVITY_DEFAULT_PLACE_NOT_DELETE":          50005,
	"ACTIVITY_PLACE_EXCEED_LIMIT":                50006,
	"TICKET_RECORD_NOTFOUND":                     60001,
	"TICKET_UNDERSTOCK":                          60002,
	"TICKET_NAME_EXIST":                          60003,
	"TICKET_PAYMENT_NO_CONFIGUED":                60004,
	"SIGN_RECORD_NOTFOUND":                       70001,
	"SIGN_DATE_INVALID":                          70002,
	"SIGN_ATTENDER_USERID_REPEAT_BINDING":        70003,
	"SIGN_REQUEST_PARAMETER_INVALID":             70004,
	"SIGN_SIGNIN_ATTENDER_NOT_EXIST":             70005,
	"SIGN_ATTENDER_REPEAT_APPLY":                 70006,
	"SIGN_EXCEL_ROW_COUNT_OVERRUN":               70007,
	"SIGN_EXCEL_TEMPLATE_CHECK_FAILURE":          70008,
	"SIGN_JSON_ANALYSIS_ERROR":                   70009,
	"SIGN_EXEC_FORM_CREATE_OR_UPDATE_ERROR":      70010,
	"SIGN_EXEC_GETFORM_ERROR":                    70011,
	"SIGN_EXEC_CREATEORDER_ERROR":                70012,
	"SIGN_TICKET_UNDERSTOCK":                     70013,
	"SIGN_EXPORT_DATA_EMPTY":                     70014,
	"SIGN_DEFAULT_SIGNDROP":                      70015,
	"NOTIFY_TEMPLATE_NOT_EXIST":                  80001,
	"NOTIFY_SEND_FAIL":                           80002,
	"NOTIFY_TEMPLATE_CAN_NOT_EDIT":               80003,
	"NOTIFY_PARAMS_ERROR":                        80004,
	"SIGNUP_PARAMS_NO_ACTIVITY_ID":               90001,
	"SIGNUP_NO_TEMPLATE":                         90002,
	"SIGNUP_NO_INPUT_UNIQUE":                     90003,
	"SIGNUP_UNIQUE_VALUE_EXIT":                   90004,
	"SIGNUP_ACTIVITY_NEED_TICKET":                90005,
	"SIGNUP_CHAN_NAME_EXIT":                      90006,
	"SIGNUP_CHAN_PATH_EXIT":                      90007,
	"SIGNUP_CHAN_ID_ERROR":                       90008,
	"SIGNUP_CHAN_PATH_NOT_EXIT":                  90009,
	"SIGNUP_REPEATED":                            90010,
	"SIGNUP_PHONE_FORMAT_ERR":                    90011,
	"SIGNUP_MAIL_FORMAT_ERR":                     90012,
	"SIGNUP_UNIQUE_SHOULD_REQUIRED":              90013,
	"SIGNUP_NOT_BEGIN":                           90014,
	"SIGNUP_ALREADY_END":                         90015,
	"SIGNUP_DATE_ERROR":                          90016,
	"FORM_ID_ERROR":                              100001,
	"GAME_NOT_EXIST":                             110001,
	"GAME_NOT_START":                             110002,
	"GAME_ENDED":                                 110003,
	"GAME_PARAMS_INVALID":                        110004,
	"GAME_FINISHED":                              110005,
	"GAME_NO_PRIZE":                              110006,
	"GAME_NO_WINNER":                             110007,
	"GAME_START":                                 110008,
	"GAME_PRIZE_FILLED":                          110009,
	"GAME_NOT_JOIN":                              110010,
	"GAME_MESSAGE_ISBAD":                         110011,
	"GAME_MESSAGE_SEND_LIMIT":                    110012,
	"ORDER_NOT_EXIST":                            120001,
	"ORDER_ALREADY_PAID":                         120002,
	"ORDER_INVOICE_NOT_EXIST":                    120003,
	"OPEN_PLATFORM_NOT_CONF":                     130001,
	"OPEN_PLATFORM_NOT_RECEIVE_ACCOUNT":          130002,
	"OPEN_PLATFORM_NOT_MINI_RECEIVE_ACCOUNT":     130003,
	"OPEN_PLATFORM_NOT_OFFICIAL_RECEIVE_ACCOUNT": 130004,
	"OPEN_PLATFORM_NOT_H5_RECEIVE_ACCOUNT":       130005,
}

func (x Code) String() string {
	return proto.EnumName(Code_name, int32(x))
}

func (Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{0}
}

type PaginationReq struct {
	PageIndex            int32    `protobuf:"varint,1,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	Search               string   `protobuf:"bytes,3,opt,name=Search,proto3" json:"Search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaginationReq) Reset()         { *m = PaginationReq{} }
func (m *PaginationReq) String() string { return proto.CompactTextString(m) }
func (*PaginationReq) ProtoMessage()    {}
func (*PaginationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{0}
}

func (m *PaginationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaginationReq.Unmarshal(m, b)
}
func (m *PaginationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaginationReq.Marshal(b, m, deterministic)
}
func (m *PaginationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaginationReq.Merge(m, src)
}
func (m *PaginationReq) XXX_Size() int {
	return xxx_messageInfo_PaginationReq.Size(m)
}
func (m *PaginationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PaginationReq.DiscardUnknown(m)
}

var xxx_messageInfo_PaginationReq proto.InternalMessageInfo

func (m *PaginationReq) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *PaginationReq) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PaginationReq) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type PaginationRsp struct {
	PageIndex            int32    `protobuf:"varint,1,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	TotalPage            int32    `protobuf:"varint,3,opt,name=TotalPage,proto3" json:"TotalPage,omitempty"`
	TotalCount           int64    `protobuf:"varint,4,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaginationRsp) Reset()         { *m = PaginationRsp{} }
func (m *PaginationRsp) String() string { return proto.CompactTextString(m) }
func (*PaginationRsp) ProtoMessage()    {}
func (*PaginationRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{1}
}

func (m *PaginationRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaginationRsp.Unmarshal(m, b)
}
func (m *PaginationRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaginationRsp.Marshal(b, m, deterministic)
}
func (m *PaginationRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaginationRsp.Merge(m, src)
}
func (m *PaginationRsp) XXX_Size() int {
	return xxx_messageInfo_PaginationRsp.Size(m)
}
func (m *PaginationRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_PaginationRsp.DiscardUnknown(m)
}

var xxx_messageInfo_PaginationRsp proto.InternalMessageInfo

func (m *PaginationRsp) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

func (m *PaginationRsp) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PaginationRsp) GetTotalPage() int32 {
	if m != nil {
		return m.TotalPage
	}
	return 0
}

func (m *PaginationRsp) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type CodeRsp struct {
	Code                 Code     `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CodeRsp) Reset()         { *m = CodeRsp{} }
func (m *CodeRsp) String() string { return proto.CompactTextString(m) }
func (*CodeRsp) ProtoMessage()    {}
func (*CodeRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee72d9a89737215c, []int{2}
}

func (m *CodeRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeRsp.Unmarshal(m, b)
}
func (m *CodeRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeRsp.Marshal(b, m, deterministic)
}
func (m *CodeRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeRsp.Merge(m, src)
}
func (m *CodeRsp) XXX_Size() int {
	return xxx_messageInfo_CodeRsp.Size(m)
}
func (m *CodeRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CodeRsp proto.InternalMessageInfo

func (m *CodeRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func init() {
	proto.RegisterEnum("Code", Code_name, Code_value)
	proto.RegisterType((*PaginationReq)(nil), "PaginationReq")
	proto.RegisterType((*PaginationRsp)(nil), "PaginationRsp")
	proto.RegisterType((*CodeRsp)(nil), "CodeRsp")
}

func init() { proto.RegisterFile("Common.proto", fileDescriptor_ee72d9a89737215c) }

var fileDescriptor_ee72d9a89737215c = []byte{
	// 1751 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0x49, 0x93, 0x1c, 0x47,
	0x15, 0xa6, 0xa6, 0xab, 0xbb, 0xad, 0x04, 0x99, 0x74, 0xda, 0x92, 0x47, 0x8b, 0xe5, 0xf1, 0x58,
	0x36, 0x42, 0x10, 0x0e, 0x02, 0x82, 0x1f, 0x90, 0x53, 0xf5, 0xba, 0x3b, 0x3d, 0xd5, 0x59, 0xa9,
	0xac, 0xac, 0x1e, 0xb5, 0x2e, 0x19, 0x63, 0x3c, 0x61, 0x14, 0x81, 0x67, 0x84, 0x11, 0x11, 0x04,
	0x37, 0x96, 0x18, 0x4e, 0x1c, 0xbc, 0xc8, 0x6c, 0xcd, 0xe2, 0x66, 0x15, 0xbb, 0x16, 0x4b, 0x23,
	0x41, 0x44, 0x87, 0xcd, 0x2f, 0xb0, 0x3d, 0xe2, 0x32, 0x27, 0x96, 0xd3, 0xdc, 0x86, 0x6d, 0xd8,
	0x21, 0x5e, 0x56, 0x55, 0x77, 0x55, 0x37, 0x0a, 0x0e, 0xbe, 0x48, 0x53, 0xef, 0xfb, 0xf2, 0xbd,
	0xcc, 0x2f, 0xdf, 0x92, 0x4d, 0xde, 0x15, 0x6c, 0x3c, 0xfb, 0xec, 0xc6, 0xfa, 0x13, 0x17, 0x9e,
	0xdb, 0xb8, 0xb8, 0xb1, 0xb8, 0x4a, 0x0e, 0xaa, 0xd5, 0x67, 0xce, 0xaf, 0xaf, 0x5e, 0x3c, 0xbf,
	0xb1, 0xae, 0xd7, 0x3e, 0xce, 0x8e, 0x93, 0x03, 0x6a, 0xf5, 0x99, 0x35, 0xb1, 0xfe, 0xf4, 0xda,
	0xa7, 0xe6, 0xbd, 0x05, 0xef, 0x54, 0x5d, 0x4f, 0x0c, 0xec, 0x28, 0xb9, 0x07, 0x3f, 0x92, 0xf3,
	0x9f, 0x5e, 0x9b, 0x9f, 0x73, 0xe0, 0xf8, 0x9b, 0x1d, 0x26, 0x8d, 0x64, 0x6d, 0xf5, 0xb9, 0x8f,
	0x7c, 0x74, 0xbe, 0xb6, 0xe0, 0x9d, 0x3a, 0xa0, 0xf3, 0xaf, 0xc5, 0x2f, 0x78, 0x95, 0x18, 0x9f,
	0xb8, 0xf0, 0x36, 0x62, 0x1c, 0x27, 0x07, 0xcc, 0xc6, 0xc5, 0xd5, 0x8f, 0xa1, 0xc1, 0x85, 0xa9,
	0xeb, 0x89, 0x81, 0x9d, 0x20, 0xc4, 0x7d, 0x04, 0x1b, 0x9f, 0x5c, 0xbf, 0x38, 0xef, 0x2f, 0x78,
	0xa7, 0x6a, 0xba, 0x64, 0x59, 0x3c, 0x49, 0x9a, 0xc1, 0xc6, 0xd3, 0x6b, 0xb8, 0x85, 0x23, 0xc4,
	0xc7, 0x3f, 0x5d, 0xf4, 0x7b, 0x3f, 0x58, 0x7f, 0xc2, 0xd9, 0x9d, 0xe9, 0xf4, 0xa5, 0x63, 0x19,
	0xc6, 0xde, 0x49, 0x9a, 0x32, 0x36, 0x36, 0x4d, 0x80, 0xbe, 0x03, 0x3f, 0x92, 0x34, 0x08, 0x20,
	0x49, 0xa8, 0xc7, 0xee, 0x21, 0x7e, 0x8b, 0x8b, 0x88, 0xce, 0xb1, 0xc3, 0xe4, 0x3e, 0x03, 0x92,
	0x4b, 0x63, 0x25, 0xef, 0x82, 0x85, 0xb3, 0x22, 0x31, 0xf4, 0x79, 0xc9, 0x1e, 0x24, 0x2c, 0xb7,
	0xab, 0x4e, 0x2c, 0x0b, 0xe0, 0x05, 0x59, 0x5a, 0xd0, 0xe5, 0x22, 0xca, 0xed, 0x2f, 0x4a, 0x76,
	0x88, 0xd0, 0xc2, 0x51, 0x6c, 0x72, 0xf3, 0x4b, 0x92, 0x1d, 0x25, 0x87, 0x72, 0x73, 0xc0, 0xa5,
	0x83, 0xba, 0x71, 0x28, 0x5a, 0x7d, 0x7a, 0x49, 0xb2, 0x05, 0x72, 0x6c, 0x0a, 0xd3, 0xa0, 0x80,
	0x1b, 0xcb, 0x95, 0x8a, 0xfa, 0xf4, 0x65, 0xdc, 0xc5, 0x7d, 0x2b, 0x3c, 0x8a, 0x60, 0x82, 0x84,
	0x21, 0x7d, 0x65, 0xe0, 0xb1, 0xe3, 0xe4, 0xf0, 0x18, 0x08, 0x62, 0x1d, 0xe2, 0xea, 0x56, 0x9c,
	0xca, 0x90, 0x0e, 0x07, 0x1e, 0x7b, 0x94, 0x3c, 0x94, 0xa3, 0x3c, 0x0d, 0x05, 0xee, 0x48, 0xf1,
	0x24, 0xc1, 0xff, 0x74, 0xec, 0x14, 0xf8, 0xf6, 0xc0, 0x63, 0x8f, 0x91, 0x87, 0x73, 0xd2, 0x12,
	0x8f, 0xb8, 0x0c, 0xc0, 0xb6, 0x34, 0xc0, 0x39, 0x28, 0xd1, 0xbe, 0x33, 0xf0, 0xd8, 0x23, 0xe4,
	0x58, 0x4e, 0xc3, 0x0d, 0x26, 0x69, 0xab, 0x25, 0x02, 0x01, 0xd2, 0xd8, 0x56, 0x2a, 0xc3, 0x84,
	0x7e, 0xb7, 0xb2, 0x99, 0x58, 0x87, 0xa0, 0x65, 0x6c, 0x85, 0xec, 0xf1, 0x48, 0x84, 0xf4, 0x7b,
	0xb3, 0xa8, 0xed, 0xf0, 0x1e, 0x58, 0xc5, 0x45, 0x48, 0xbf, 0x3f, 0xf0, 0xd8, 0xc3, 0xe4, 0x48,
	0xb1, 0xd5, 0xc0, 0x88, 0x9e, 0x30, 0x7d, 0x17, 0x27, 0x3b, 0xcb, 0x0f, 0x06, 0x1e, 0x5b, 0x24,
	0xc7, 0x27, 0xf1, 0x45, 0xab, 0x6f, 0xb9, 0xe4, 0x51, 0x3f, 0x11, 0x89, 0x05, 0xad, 0x63, 0x4d,
	0x2f, 0x0f, 0x3c, 0xb6, 0x40, 0x8e, 0x96, 0x38, 0xba, 0x6f, 0x7b, 0xa0, 0x91, 0x9a, 0x31, 0x7e,
	0x38, 0xf0, 0xd8, 0x51, 0xf2, 0x40, 0x95, 0x91, 0xe9, 0x49, 0x7f, 0x34, 0xf0, 0xd8, 0x31, 0x72,
	0xa8, 0xd8, 0x42, 0x37, 0x4e, 0xa5, 0x19, 0xef, 0xfe, 0xc7, 0x03, 0x8f, 0x9d, 0x24, 0x27, 0x72,
	0x30, 0xe9, 0x27, 0x06, 0xba, 0x6e, 0x77, 0x3c, 0x8a, 0xe2, 0x15, 0x08, 0x2d, 0x84, 0xc2, 0xd0,
	0x9f, 0x54, 0x44, 0x52, 0xbc, 0x6f, 0x15, 0xd7, 0xbc, 0x9b, 0x64, 0x79, 0xd0, 0x55, 0xa6, 0x4f,
	0x7f, 0x3a, 0xf0, 0xd8, 0xe3, 0x64, 0x61, 0xfa, 0xa0, 0x3c, 0x08, 0x5c, 0x3c, 0x0d, 0x42, 0xf6,
	0x40, 0x1a, 0xfa, 0xb3, 0x81, 0xc7, 0xde, 0x4f, 0x1e, 0x9f, 0xe6, 0x29, 0xde, 0xef, 0x42, 0x9e,
	0x58, 0x41, 0x2c, 0x5b, 0xa2, 0x9d, 0x6a, 0x08, 0xe9, 0xcf, 0x2b, 0x97, 0x58, 0x90, 0x66, 0x9c,
	0x5e, 0x19, 0x78, 0xec, 0x14, 0x59, 0xbc, 0x9b, 0x53, 0xd3, 0x57, 0x90, 0x0b, 0x75, 0x75, 0xe0,
	0xb1, 0xf7, 0x90, 0x47, 0xee, 0xe2, 0x70, 0x09, 0x84, 0x6c, 0x63, 0x31, 0x85, 0xf4, 0x5a, 0x55,
	0x35, 0xa5, 0x44, 0x68, 0x35, 0x9c, 0x49, 0x05, 0x6e, 0xeb, 0xfa, 0xc0, 0x63, 0xa7, 0xc9, 0xc9,
	0xbb, 0x78, 0x91, 0x71, 0xf9, 0x08, 0xaf, 0x56, 0xf2, 0x43, 0xf1, 0xbe, 0xdb, 0x4d, 0xa1, 0xff,
	0x8d, 0xca, 0x7e, 0xf0, 0xf4, 0x42, 0xaa, 0xd4, 0x58, 0x2d, 0xda, 0x9d, 0xb2, 0x47, 0xba, 0x55,
	0xd1, 0x77, 0x9a, 0xb8, 0xc4, 0xe5, 0xb2, 0xab, 0x6e, 0x7a, 0x6b, 0xe0, 0xb1, 0xf7, 0x92, 0x47,
	0xff, 0x9f, 0x43, 0xa4, 0xde, 0xac, 0x88, 0x3b, 0x4d, 0xc5, 0x72, 0x52, 0xb1, 0x36, 0xf4, 0x76,
	0xb6, 0xc5, 0x34, 0x01, 0x6d, 0xa3, 0xb8, 0x2d, 0xa4, 0x75, 0x7f, 0xc6, 0xda, 0x51, 0x56, 0xb0,
	0x32, 0x33, 0x6d, 0xaf, 0xec, 0xba, 0x2c, 0x29, 0x11, 0x93, 0x6e, 0x52, 0xcd, 0xd3, 0xab, 0xbb,
	0x1e, 0x3b, 0x41, 0xe6, 0x4b, 0x94, 0x80, 0x2b, 0x13, 0x74, 0x78, 0x8e, 0x5f, 0x2b, 0xb9, 0xd0,
	0xd0, 0x16, 0x89, 0x01, 0x3d, 0x45, 0xb9, 0xbe, 0xeb, 0x32, 0xb6, 0x4a, 0x99, 0x09, 0xf4, 0xea,
	0xae, 0xc7, 0x0e, 0x13, 0xea, 0x58, 0x26, 0x5e, 0x06, 0x99, 0xdb, 0x6f, 0xec, 0x7a, 0x6c, 0x9e,
	0xb0, 0xb2, 0xfd, 0xac, 0x72, 0x77, 0x7a, 0x73, 0xd7, 0x63, 0x0f, 0x90, 0x7b, 0x1d, 0x32, 0x69,
	0x6f, 0x5b, 0xbb, 0x1e, 0x3b, 0x44, 0xde, 0x1d, 0xeb, 0x36, 0x97, 0xe2, 0x1c, 0xe8, 0xdc, 0x7c,
	0x2b, 0x33, 0x2b, 0x0d, 0xad, 0x72, 0x53, 0x7d, 0x6d, 0x6b, 0x0e, 0xef, 0xda, 0x99, 0x55, 0x1c,
	0x89, 0xa0, 0x5f, 0x46, 0x5f, 0xdf, 0x9a, 0xc3, 0x94, 0x1a, 0xa7, 0x67, 0xc8, 0xcd, 0x24, 0x11,
	0xde, 0xd8, 0xac, 0xa1, 0x32, 0x63, 0x70, 0xba, 0xe7, 0xbd, 0xb9, 0x59, 0xc3, 0x46, 0x32, 0x29,
	0xac, 0x30, 0xd4, 0x90, 0x24, 0x93, 0x9c, 0x7c, 0x6b, 0xb3, 0x86, 0xd2, 0x8d, 0x09, 0x89, 0xe1,
	0xda, 0x80, 0xf3, 0x60, 0x43, 0x88, 0xc0, 0x00, 0xdd, 0xde, 0xac, 0xe1, 0x4d, 0x4e, 0x36, 0x00,
	0x2d, 0x9e, 0x46, 0xc6, 0xaa, 0x88, 0x07, 0x50, 0x26, 0xde, 0x99, 0xf2, 0x95, 0x11, 0xe0, 0x6c,
	0x00, 0x10, 0xda, 0x48, 0x74, 0x85, 0xa1, 0xbf, 0xde, 0xac, 0xe1, 0x51, 0x8d, 0x08, 0x96, 0xff,
	0x47, 0x87, 0xfe, 0xcd, 0x76, 0x0d, 0x1b, 0x7b, 0x8e, 0xa6, 0x32, 0x04, 0x9d, 0x98, 0x38, 0x58,
	0xa6, 0xbf, 0xad, 0x00, 0x25, 0x71, 0x7e, 0xb7, 0xed, 0x42, 0xe6, 0xc0, 0xa4, 0x1d, 0x14, 0xa5,
	0x04, 0x21, 0xfd, 0xfd, 0x76, 0x0d, 0x9b, 0x5c, 0x22, 0xda, 0x72, 0x26, 0xe0, 0xde, 0xd0, 0x47,
	0xbf, 0x0e, 0xab, 0xe8, 0xfa, 0x87, 0xa1, 0x8f, 0xf5, 0xe0, 0x00, 0x6e, 0x0c, 0xe0, 0x56, 0x5c,
	0x02, 0xbb, 0x7a, 0x76, 0x03, 0x67, 0x49, 0xc8, 0x50, 0xc8, 0x36, 0xfd, 0xe3, 0xd0, 0xc7, 0xcc,
	0xca, 0xfd, 0x9f, 0x49, 0x21, 0x31, 0x59, 0x9f, 0x03, 0x4c, 0xb1, 0xc2, 0xe1, 0x9f, 0x4a, 0x2c,
	0xfc, 0x47, 0x94, 0xfc, 0x4e, 0xf2, 0xe6, 0xcf, 0x43, 0x1f, 0x5b, 0x76, 0x35, 0x6c, 0x65, 0xf4,
	0xfd, 0x65, 0xe8, 0x63, 0xe3, 0x77, 0x0c, 0x54, 0x36, 0xb2, 0x3a, 0x5e, 0xb1, 0x59, 0x79, 0xc6,
	0x3d, 0xd0, 0x3a, 0x95, 0x74, 0x7f, 0xe8, 0xe3, 0x85, 0x95, 0x38, 0x06, 0xba, 0x2a, 0xc2, 0xf3,
	0x05, 0x1d, 0x08, 0x96, 0x2d, 0x4e, 0xf8, 0x54, 0x03, 0xfd, 0xeb, 0xd0, 0xc7, 0xec, 0x71, 0xc4,
	0x27, 0x93, 0x58, 0x4e, 0x4f, 0x90, 0xbf, 0x0d, 0x7d, 0xf6, 0x3e, 0xf2, 0x58, 0xee, 0x08, 0x02,
	0xdb, 0x8a, 0x75, 0xd7, 0x06, 0x1a, 0xd0, 0x55, 0xac, 0x6d, 0xaa, 0x9c, 0x68, 0x19, 0xf9, 0xef,
	0x43, 0x9f, 0x3d, 0x44, 0x1e, 0x9c, 0x90, 0xdb, 0x60, 0x1c, 0x3f, 0x83, 0xff, 0x31, 0xf4, 0xf1,
	0xa6, 0x26, 0x70, 0xe6, 0x26, 0x9b, 0x7c, 0x19, 0xe5, 0x9f, 0x43, 0x1f, 0x93, 0xc3, 0x51, 0x66,
	0x73, 0xe0, 0x5f, 0x25, 0x14, 0xce, 0x62, 0x8f, 0xc1, 0x2b, 0xe3, 0xf9, 0x20, 0xf9, 0xf7, 0xd0,
	0xc7, 0x2a, 0xc9, 0x6e, 0x32, 0x4f, 0x50, 0xfc, 0x08, 0x75, 0xac, 0xe8, 0x7f, 0x86, 0x3e, 0x56,
	0x41, 0x3e, 0x26, 0xc7, 0x62, 0x4c, 0x74, 0xff, 0xcc, 0x9e, 0x8f, 0x75, 0x9f, 0x13, 0x12, 0x90,
	0xa1, 0xd3, 0x88, 0x7e, 0x76, 0xcf, 0xa9, 0x3d, 0xbd, 0xb0, 0x78, 0x94, 0xb8, 0x29, 0xf7, 0xb9,
	0x3d, 0x9f, 0x1d, 0x21, 0xf7, 0xe7, 0x9c, 0x7c, 0xc2, 0x65, 0x07, 0xfa, 0xfc, 0xde, 0xf8, 0xb2,
	0x52, 0x35, 0x19, 0x7e, 0x93, 0x51, 0x23, 0x42, 0xfa, 0xfc, 0xa8, 0x8e, 0xad, 0x25, 0xe7, 0xc8,
	0x78, 0x1c, 0x85, 0xbe, 0x30, 0xaa, 0x17, 0x07, 0xce, 0x90, 0xac, 0xcf, 0xa6, 0x52, 0x9c, 0x49,
	0x81, 0xbe, 0x38, 0xaa, 0x17, 0x77, 0x97, 0xaa, 0xdc, 0x68, 0x7b, 0x3c, 0x4a, 0x5d, 0x69, 0x18,
	0xfa, 0xd2, 0xa8, 0x5e, 0xe8, 0x9d, 0xaa, 0xd2, 0x13, 0x02, 0x6b, 0x31, 0x13, 0x97, 0x5e, 0x1a,
	0xd5, 0x0b, 0xcd, 0x52, 0x65, 0x83, 0x0e, 0x9e, 0x2a, 0x2f, 0x2d, 0x43, 0x5f, 0x9e, 0x05, 0x15,
	0x37, 0x9d, 0x0c, 0xfc, 0xd2, 0xa8, 0x5e, 0xd4, 0x54, 0x01, 0x8a, 0xa2, 0x9f, 0x7f, 0x79, 0x54,
	0x47, 0xb1, 0x67, 0x16, 0xe6, 0x6a, 0x1b, 0xfa, 0x95, 0x51, 0x1d, 0xbb, 0x60, 0x4e, 0xc8, 0xb2,
	0x1b, 0x42, 0xfa, 0xd5, 0x51, 0xbd, 0xc8, 0x1f, 0x14, 0xcb, 0xbd, 0x2d, 0x31, 0x7f, 0xb8, 0x41,
	0xc7, 0xf4, 0x6b, 0x15, 0x35, 0xdc, 0x0b, 0xb3, 0x84, 0x0e, 0x46, 0x75, 0x7c, 0xdb, 0x55, 0xd5,
	0x48, 0x3a, 0x71, 0x1a, 0x95, 0xe6, 0xef, 0xd7, 0x47, 0x75, 0xbc, 0xe5, 0xb1, 0xa0, 0x38, 0xb9,
	0xdb, 0x42, 0xd2, 0x6f, 0x54, 0xae, 0x80, 0x47, 0x1a, 0x78, 0xd8, 0xb7, 0x20, 0x43, 0xfa, 0xcd,
	0x51, 0xbd, 0xe8, 0x0f, 0xa9, 0xb2, 0xa5, 0x64, 0xff, 0xd6, 0xa8, 0xce, 0xee, 0x27, 0x07, 0x5d,
	0x7e, 0x8f, 0x4f, 0xfe, 0xca, 0x17, 0x1b, 0x38, 0x0b, 0xda, 0xa8, 0xe1, 0x24, 0xb7, 0xae, 0xec,
	0x54, 0xad, 0xae, 0xc3, 0xd2, 0xab, 0x3b, 0x0d, 0x46, 0x09, 0x71, 0x56, 0x2c, 0xf3, 0x90, 0x5e,
	0xdb, 0x69, 0x60, 0x1e, 0x39, 0x4b, 0x9e, 0x2a, 0x45, 0xf3, 0xb8, 0xbe, 0xd3, 0xc0, 0x68, 0x0e,
	0x6a, 0x09, 0x29, 0x92, 0x0e, 0xbe, 0x10, 0x4a, 0x46, 0x19, 0x5b, 0xa5, 0xc5, 0x39, 0xa0, 0x37,
	0x2a, 0xc1, 0xec, 0x8a, 0x90, 0x12, 0x34, 0xbd, 0x59, 0x0a, 0x96, 0x85, 0xdf, 0xda, 0x69, 0xe0,
	0xc1, 0xb2, 0x60, 0xb8, 0xd2, 0xb6, 0x44, 0x14, 0x41, 0x48, 0x6f, 0x55, 0xbc, 0x1a, 0xfb, 0x64,
	0x2c, 0x24, 0xbd, 0xbd, 0xd3, 0x40, 0x81, 0x9c, 0xb1, 0x0b, 0x49, 0xc2, 0xdb, 0x60, 0x45, 0xb2,
	0xc4, 0x43, 0xfa, 0x8b, 0x9d, 0x06, 0x5e, 0x5a, 0x05, 0x71, 0xe5, 0x93, 0xb5, 0xfb, 0x5f, 0xee,
	0x34, 0xb2, 0x39, 0x58, 0x6d, 0x73, 0xaf, 0x5d, 0x6e, 0xa2, 0xbf, 0xcc, 0x5c, 0xe8, 0xed, 0x1e,
	0xbe, 0xaf, 0x5f, 0x6e, 0xa2, 0xbf, 0x0c, 0x11, 0xb2, 0x17, 0x8b, 0xa0, 0xac, 0xe5, 0xaf, 0x2e,
	0x37, 0x31, 0x09, 0x62, 0x05, 0x12, 0xa7, 0x4b, 0xd6, 0x5f, 0x8a, 0xc7, 0x1f, 0x7d, 0x63, 0xbf,
	0x89, 0x7d, 0x6f, 0x16, 0xd5, 0x10, 0x80, 0xe8, 0x41, 0xf1, 0x8e, 0xa1, 0x6f, 0xee, 0x37, 0xf1,
	0x35, 0x39, 0x4b, 0xec, 0x0a, 0x29, 0x66, 0xd8, 0x6f, 0xed, 0x37, 0xd9, 0x07, 0xc8, 0xe9, 0x59,
	0x76, 0xec, 0x5e, 0xfc, 0x3c, 0x9a, 0x59, 0xb1, 0xbd, 0xdf, 0xc4, 0x87, 0xde, 0xec, 0x8a, 0xce,
	0x87, 0x67, 0xb8, 0x77, 0xf6, 0x9b, 0x4b, 0x07, 0xcf, 0xcd, 0x5d, 0x78, 0xea, 0xf6, 0x5c, 0x23,
	0xfb, 0xfd, 0xfa, 0x54, 0xc3, 0xfd, 0x80, 0xfd, 0xd0, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x5d,
	0xe6, 0x2c, 0x8d, 0xd0, 0x0e, 0x00, 0x00,
}
