// Code generated by protoc-gen-go. DO NOT EDIT.
// source: GameGateway.proto

package redenvelopegame

import (
	context "context"
	fmt "fmt"
	tars "github.com/TarsCloud/TarsGo/tars"
	model "github.com/TarsCloud/TarsGo/tars/model"
	requestf "github.com/TarsCloud/TarsGo/tars/protocol/res/requestf"
	current "github.com/TarsCloud/TarsGo/tars/util/current"
	tools "github.com/TarsCloud/TarsGo/tars/util/tools"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PushToUserReq struct {
	CmdId                int32    `protobuf:"varint,1,opt,name=CmdId,proto3" json:"CmdId,omitempty"`
	ActivityId           int64    `protobuf:"varint,2,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	GameId               int64    `protobuf:"varint,3,opt,name=GameId,proto3" json:"GameId,omitempty"`
	UserIdentifier       string   `protobuf:"bytes,4,opt,name=UserIdentifier,proto3" json:"UserIdentifier,omitempty"`
	UserId               int64    `protobuf:"varint,5,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Data                 []byte   `protobuf:"bytes,6,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushToUserReq) Reset()         { *m = PushToUserReq{} }
func (m *PushToUserReq) String() string { return proto.CompactTextString(m) }
func (*PushToUserReq) ProtoMessage()    {}
func (*PushToUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa2db28edbde351c, []int{0}
}

func (m *PushToUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushToUserReq.Unmarshal(m, b)
}
func (m *PushToUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushToUserReq.Marshal(b, m, deterministic)
}
func (m *PushToUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushToUserReq.Merge(m, src)
}
func (m *PushToUserReq) XXX_Size() int {
	return xxx_messageInfo_PushToUserReq.Size(m)
}
func (m *PushToUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PushToUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_PushToUserReq proto.InternalMessageInfo

func (m *PushToUserReq) GetCmdId() int32 {
	if m != nil {
		return m.CmdId
	}
	return 0
}

func (m *PushToUserReq) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *PushToUserReq) GetGameId() int64 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *PushToUserReq) GetUserIdentifier() string {
	if m != nil {
		return m.UserIdentifier
	}
	return ""
}

func (m *PushToUserReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PushToUserReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PushToActivityReq struct {
	CmdId                int32    `protobuf:"varint,1,opt,name=CmdId,proto3" json:"CmdId,omitempty"`
	ActivityId           int64    `protobuf:"varint,2,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	GameId               int64    `protobuf:"varint,3,opt,name=GameId,proto3" json:"GameId,omitempty"`
	RandomCode           string   `protobuf:"bytes,4,opt,name=RandomCode,proto3" json:"RandomCode,omitempty"`
	Data                 []byte   `protobuf:"bytes,5,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushToActivityReq) Reset()         { *m = PushToActivityReq{} }
func (m *PushToActivityReq) String() string { return proto.CompactTextString(m) }
func (*PushToActivityReq) ProtoMessage()    {}
func (*PushToActivityReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa2db28edbde351c, []int{1}
}

func (m *PushToActivityReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushToActivityReq.Unmarshal(m, b)
}
func (m *PushToActivityReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushToActivityReq.Marshal(b, m, deterministic)
}
func (m *PushToActivityReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushToActivityReq.Merge(m, src)
}
func (m *PushToActivityReq) XXX_Size() int {
	return xxx_messageInfo_PushToActivityReq.Size(m)
}
func (m *PushToActivityReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PushToActivityReq.DiscardUnknown(m)
}

var xxx_messageInfo_PushToActivityReq proto.InternalMessageInfo

func (m *PushToActivityReq) GetCmdId() int32 {
	if m != nil {
		return m.CmdId
	}
	return 0
}

func (m *PushToActivityReq) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *PushToActivityReq) GetGameId() int64 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *PushToActivityReq) GetRandomCode() string {
	if m != nil {
		return m.RandomCode
	}
	return ""
}

func (m *PushToActivityReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PushToLiveReq struct {
	CmdId                int32    `protobuf:"varint,1,opt,name=CmdId,proto3" json:"CmdId,omitempty"`
	ActivityId           int64    `protobuf:"varint,2,opt,name=ActivityId,proto3" json:"ActivityId,omitempty"`
	GameId               int64    `protobuf:"varint,3,opt,name=GameId,proto3" json:"GameId,omitempty"`
	RandomCode           string   `protobuf:"bytes,4,opt,name=RandomCode,proto3" json:"RandomCode,omitempty"`
	Data                 []byte   `protobuf:"bytes,5,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushToLiveReq) Reset()         { *m = PushToLiveReq{} }
func (m *PushToLiveReq) String() string { return proto.CompactTextString(m) }
func (*PushToLiveReq) ProtoMessage()    {}
func (*PushToLiveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa2db28edbde351c, []int{2}
}

func (m *PushToLiveReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushToLiveReq.Unmarshal(m, b)
}
func (m *PushToLiveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushToLiveReq.Marshal(b, m, deterministic)
}
func (m *PushToLiveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushToLiveReq.Merge(m, src)
}
func (m *PushToLiveReq) XXX_Size() int {
	return xxx_messageInfo_PushToLiveReq.Size(m)
}
func (m *PushToLiveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PushToLiveReq.DiscardUnknown(m)
}

var xxx_messageInfo_PushToLiveReq proto.InternalMessageInfo

func (m *PushToLiveReq) GetCmdId() int32 {
	if m != nil {
		return m.CmdId
	}
	return 0
}

func (m *PushToLiveReq) GetActivityId() int64 {
	if m != nil {
		return m.ActivityId
	}
	return 0
}

func (m *PushToLiveReq) GetGameId() int64 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *PushToLiveReq) GetRandomCode() string {
	if m != nil {
		return m.RandomCode
	}
	return ""
}

func (m *PushToLiveReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PushRsp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRsp) Reset()         { *m = PushRsp{} }
func (m *PushRsp) String() string { return proto.CompactTextString(m) }
func (*PushRsp) ProtoMessage()    {}
func (*PushRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa2db28edbde351c, []int{3}
}

func (m *PushRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRsp.Unmarshal(m, b)
}
func (m *PushRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRsp.Marshal(b, m, deterministic)
}
func (m *PushRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRsp.Merge(m, src)
}
func (m *PushRsp) XXX_Size() int {
	return xxx_messageInfo_PushRsp.Size(m)
}
func (m *PushRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRsp.DiscardUnknown(m)
}

var xxx_messageInfo_PushRsp proto.InternalMessageInfo

func (m *PushRsp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*PushToUserReq)(nil), "PushToUserReq")
	proto.RegisterType((*PushToActivityReq)(nil), "PushToActivityReq")
	proto.RegisterType((*PushToLiveReq)(nil), "PushToLiveReq")
	proto.RegisterType((*PushRsp)(nil), "PushRsp")
}

func init() { proto.RegisterFile("GameGateway.proto", fileDescriptor_fa2db28edbde351c) }

var fileDescriptor_fa2db28edbde351c = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x92, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x59, 0xdb, 0x44, 0x1d, 0x34, 0xd0, 0x41, 0x64, 0x11, 0x2c, 0xa1, 0x87, 0x92, 0x53,
	0x0e, 0xfa, 0x04, 0x52, 0xa1, 0x04, 0x3c, 0xc8, 0xaa, 0x0f, 0xb0, 0x76, 0x47, 0xdc, 0x43, 0x9a,
	0x9a, 0xac, 0x91, 0x3e, 0x86, 0xa0, 0x0f, 0xe2, 0x1b, 0xca, 0xee, 0xa6, 0xe9, 0x56, 0xaf, 0x1e,
	0xbc, 0xed, 0xfc, 0x3b, 0xf3, 0xf3, 0x31, 0xf3, 0xc3, 0x68, 0x2e, 0x4b, 0x9a, 0x4b, 0x43, 0x6f,
	0x72, 0x9d, 0xaf, 0xea, 0xca, 0x54, 0x93, 0x2f, 0x06, 0xc7, 0xb7, 0xaf, 0xcd, 0xf3, 0x7d, 0xf5,
	0xd0, 0x50, 0x2d, 0xe8, 0x05, 0x4f, 0x20, 0x9a, 0x95, 0xaa, 0x50, 0x9c, 0xa5, 0x2c, 0x8b, 0x84,
	0x2f, 0x70, 0x0c, 0x70, 0xb5, 0x30, 0xba, 0xd5, 0x66, 0x5d, 0x28, 0xbe, 0x97, 0xb2, 0x6c, 0x20,
	0x02, 0x05, 0x4f, 0x21, 0xb6, 0xe6, 0x85, 0xe2, 0x03, 0xf7, 0xd7, 0x55, 0x38, 0x85, 0xc4, 0x1a,
	0x17, 0x8a, 0x96, 0x46, 0x3f, 0x69, 0xaa, 0xf9, 0x30, 0x65, 0xd9, 0xa1, 0xf8, 0xa1, 0xda, 0x79,
	0xaf, 0xf0, 0xc8, 0xcf, 0xfb, 0x0a, 0x11, 0x86, 0xd7, 0xd2, 0x48, 0x1e, 0xa7, 0x2c, 0x3b, 0x12,
	0xee, 0x3d, 0xf9, 0x64, 0x30, 0xf2, 0xcc, 0x1b, 0x80, 0xbf, 0xe7, 0x1e, 0x03, 0x08, 0xb9, 0x54,
	0x55, 0x39, 0xab, 0x14, 0x75, 0xcc, 0x81, 0xd2, 0x73, 0x45, 0x01, 0xd7, 0x7b, 0xbf, 0xcb, 0x1b,
	0xdd, 0xd2, 0xff, 0x60, 0x3a, 0x87, 0x7d, 0x8b, 0x24, 0x9a, 0x95, 0xfd, 0x76, 0x83, 0x9e, 0xc5,
	0xbd, 0x2f, 0x3e, 0x18, 0x60, 0x10, 0x8a, 0x3b, 0xaa, 0x5b, 0xbd, 0x20, 0x9c, 0x02, 0x6c, 0x43,
	0x81, 0x49, 0xbe, 0x93, 0x90, 0xb3, 0x83, 0x7c, 0x63, 0x99, 0x43, 0xb2, 0x7b, 0x08, 0xc4, 0xfc,
	0xd7, 0x65, 0x82, 0xfe, 0xde, 0xd7, 0x2e, 0xa8, 0xf7, 0xed, 0xb6, 0xb5, 0xed, 0x7b, 0x8c, 0x5d,
	0x38, 0x2f, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x4a, 0xe9, 0x82, 0xb1, 0x02, 0x00, 0x00,
}

// This following code was generated by tarsrpc
// Gernerated from GameGateway.proto
type GameGatewayService struct {
	s model.Servant
}

//SetServant is required by the servant interface.
func (obj *GameGatewayService) SetServant(s model.Servant) {
	obj.s = s
}

//AddServant is required by the servant interface
func (obj *GameGatewayService) AddServant(imp impGameGatewayService, objStr string) {
	tars.AddServant(obj, imp, objStr)
}

////AddServant adds servant  for the service with context
func (obj *GameGatewayService) AddServantWithContext(imp impGameGatewayServiceWithContext, objStr string) {
	tars.AddServantWithContext(obj, imp, objStr)
}

//TarsSetTimeout is required by the servant interface. t is the timeout in ms.
func (obj *GameGatewayService) TarsSetTimeout(t int) {
	obj.s.TarsSetTimeout(t)
}

//TarsSetProtocol is required by the servant interface. t is the protocol.
func (obj *GameGatewayService) TarsSetProtocol(p model.Protocol) {
	obj.s.TarsSetProtocol(p)
}

type impGameGatewayService interface {
	PushToUser(input PushToUserReq) (output PushRsp, err error)
	PushToActivity(input PushToActivityReq) (output PushRsp, err error)
	PushToLive(input PushToLiveReq) (output PushRsp, err error)
}

type impGameGatewayServiceWithContext interface {
	PushToUser(ctx context.Context, input PushToUserReq) (output PushRsp, err error)
	PushToActivity(ctx context.Context, input PushToActivityReq) (output PushRsp, err error)
	PushToLive(ctx context.Context, input PushToLiveReq) (output PushRsp, err error)
}

//Dispatch is used to call the user implement of the defined method.
func (obj *GameGatewayService) Dispatch(ctx context.Context, val interface{}, req *requestf.RequestPacket, resp *requestf.ResponsePacket, withContext bool) (err error) {
	input := tools.Int8ToByte(req.SBuffer)
	var output []byte
	funcName := req.SFuncName
	switch funcName {

	case "PushToUser":
		inputDefine := PushToUserReq{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res PushRsp
		if withContext == false {
			imp := val.(impGameGatewayService)
			res, err = imp.PushToUser(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impGameGatewayServiceWithContext)
			res, err = imp.PushToUser(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "PushToActivity":
		inputDefine := PushToActivityReq{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res PushRsp
		if withContext == false {
			imp := val.(impGameGatewayService)
			res, err = imp.PushToActivity(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impGameGatewayServiceWithContext)
			res, err = imp.PushToActivity(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "PushToLive":
		inputDefine := PushToLiveReq{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res PushRsp
		if withContext == false {
			imp := val.(impGameGatewayService)
			res, err = imp.PushToLive(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impGameGatewayServiceWithContext)
			res, err = imp.PushToLive(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	default:
		return fmt.Errorf("func mismatch")
	}
	var _status map[string]string
	s, ok := current.GetResponseStatus(ctx)
	if ok && s != nil {
		_status = s
	}
	var _context map[string]string
	c, ok := current.GetResponseContext(ctx)
	if ok && c != nil {
		_context = c
	}
	*resp = requestf.ResponsePacket{
		IVersion:     1,
		CPacketType:  0,
		IRequestId:   req.IRequestId,
		IMessageType: 0,
		IRet:         0,
		SBuffer:      tools.ByteToInt8(output),
		Status:       _status,
		SResultDesc:  "",
		Context:      _context,
	}
	return nil
}

// PushToUser is client rpc method as defined
func (obj *GameGatewayService) PushToUser(input PushToUserReq, _opt ...map[string]string) (output PushRsp, err error) {
	ctx := context.Background()
	return obj.PushToUserWithContext(ctx, input, _opt...)
}

// PushToUserWithContext is client rpc method as defined
func (obj *GameGatewayService) PushToUserWithContext(ctx context.Context, input PushToUserReq, _opt ...map[string]string) (output PushRsp, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "PushToUser", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// PushToActivity is client rpc method as defined
func (obj *GameGatewayService) PushToActivity(input PushToActivityReq, _opt ...map[string]string) (output PushRsp, err error) {
	ctx := context.Background()
	return obj.PushToActivityWithContext(ctx, input, _opt...)
}

// PushToActivityWithContext is client rpc method as defined
func (obj *GameGatewayService) PushToActivityWithContext(ctx context.Context, input PushToActivityReq, _opt ...map[string]string) (output PushRsp, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "PushToActivity", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// PushToLive is client rpc method as defined
func (obj *GameGatewayService) PushToLive(input PushToLiveReq, _opt ...map[string]string) (output PushRsp, err error) {
	ctx := context.Background()
	return obj.PushToLiveWithContext(ctx, input, _opt...)
}

// PushToLiveWithContext is client rpc method as defined
func (obj *GameGatewayService) PushToLiveWithContext(ctx context.Context, input PushToLiveReq, _opt ...map[string]string) (output PushRsp, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "PushToLive", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}
