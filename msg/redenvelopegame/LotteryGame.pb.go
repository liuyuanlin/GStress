// Code generated by protoc-gen-go. DO NOT EDIT.
// source: LotteryGame.proto

package redenvelopegame

import (
	context "context"
	fmt "fmt"
	tars "github.com/TarsCloud/TarsGo/tars"
	model "github.com/TarsCloud/TarsGo/tars/model"
	requestf "github.com/TarsCloud/TarsGo/tars/protocol/res/requestf"
	current "github.com/TarsCloud/TarsGo/tars/util/current"
	tools "github.com/TarsCloud/TarsGo/tars/util/tools"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LotteryCMD int32

const (
	LotteryCMD_Lottery_LOGIN            LotteryCMD = 0
	LotteryCMD_Lottery_LOGOUT           LotteryCMD = 1
	LotteryCMD_Lottery_LIVE_SELECTBATCH LotteryCMD = 2
	LotteryCMD_Lottery_CLIENT_SIGN      LotteryCMD = 3
	LotteryCMD_Lottery_LIVE_START       LotteryCMD = 4
	LotteryCMD_Lottery_LIVE_OVER        LotteryCMD = 5
	LotteryCMD_Lottery_CLIENT_QUERY     LotteryCMD = 6
	LotteryCMD_Lottery_LIVE_ACTION      LotteryCMD = 8
	LotteryCMD_Lottery_LIVE_MUSIC       LotteryCMD = 9
)

var LotteryCMD_name = map[int32]string{
	0: "Lottery_LOGIN",
	1: "Lottery_LOGOUT",
	2: "Lottery_LIVE_SELECTBATCH",
	3: "Lottery_CLIENT_SIGN",
	4: "Lottery_LIVE_START",
	5: "Lottery_LIVE_OVER",
	6: "Lottery_CLIENT_QUERY",
	8: "Lottery_LIVE_ACTION",
	9: "Lottery_LIVE_MUSIC",
}

var LotteryCMD_value = map[string]int32{
	"Lottery_LOGIN":            0,
	"Lottery_LOGOUT":           1,
	"Lottery_LIVE_SELECTBATCH": 2,
	"Lottery_CLIENT_SIGN":      3,
	"Lottery_LIVE_START":       4,
	"Lottery_LIVE_OVER":        5,
	"Lottery_CLIENT_QUERY":     6,
	"Lottery_LIVE_ACTION":      8,
	"Lottery_LIVE_MUSIC":       9,
}

func (x LotteryCMD) String() string {
	return proto.EnumName(LotteryCMD_name, int32(x))
}

func (LotteryCMD) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{0}
}

type LotteryUserInfo struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserAvatar           string   `protobuf:"bytes,3,opt,name=UserAvatar,proto3" json:"UserAvatar,omitempty"`
	UserWXName           string   `protobuf:"bytes,4,opt,name=UserWXName,proto3" json:"UserWXName,omitempty"`
	UserPhone            string   `protobuf:"bytes,5,opt,name=UserPhone,proto3" json:"UserPhone,omitempty"`
	UserTicketNo         string   `protobuf:"bytes,6,opt,name=UserTicketNo,proto3" json:"UserTicketNo,omitempty"`
	CustomerStr          string   `protobuf:"bytes,7,opt,name=CustomerStr,proto3" json:"CustomerStr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LotteryUserInfo) Reset()         { *m = LotteryUserInfo{} }
func (m *LotteryUserInfo) String() string { return proto.CompactTextString(m) }
func (*LotteryUserInfo) ProtoMessage()    {}
func (*LotteryUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{0}
}

func (m *LotteryUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LotteryUserInfo.Unmarshal(m, b)
}
func (m *LotteryUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LotteryUserInfo.Marshal(b, m, deterministic)
}
func (m *LotteryUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LotteryUserInfo.Merge(m, src)
}
func (m *LotteryUserInfo) XXX_Size() int {
	return xxx_messageInfo_LotteryUserInfo.Size(m)
}
func (m *LotteryUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LotteryUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LotteryUserInfo proto.InternalMessageInfo

func (m *LotteryUserInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LotteryUserInfo) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *LotteryUserInfo) GetUserAvatar() string {
	if m != nil {
		return m.UserAvatar
	}
	return ""
}

func (m *LotteryUserInfo) GetUserWXName() string {
	if m != nil {
		return m.UserWXName
	}
	return ""
}

func (m *LotteryUserInfo) GetUserPhone() string {
	if m != nil {
		return m.UserPhone
	}
	return ""
}

func (m *LotteryUserInfo) GetUserTicketNo() string {
	if m != nil {
		return m.UserTicketNo
	}
	return ""
}

func (m *LotteryUserInfo) GetCustomerStr() string {
	if m != nil {
		return m.CustomerStr
	}
	return ""
}

type LotteryBatch struct {
	Id                   int64               `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	BatchName            string              `protobuf:"bytes,2,opt,name=BatchName,proto3" json:"BatchName,omitempty"`
	Category             LotteryCategory     `protobuf:"varint,3,opt,name=Category,proto3,enum=redenvelopegame.LotteryCategory" json:"Category,omitempty"`
	SystemType           LotterySystemType   `protobuf:"varint,4,opt,name=SystemType,proto3,enum=redenvelopegame.LotterySystemType" json:"SystemType,omitempty"`
	ShowAvatar           bool                `protobuf:"varint,5,opt,name=ShowAvatar,proto3" json:"ShowAvatar,omitempty"`
	PrizeBatchId         int64               `protobuf:"varint,6,opt,name=PrizeBatchId,proto3" json:"PrizeBatchId,omitempty"`
	Status               LotteryStatus       `protobuf:"varint,7,opt,name=Status,proto3,enum=redenvelopegame.LotteryStatus" json:"Status,omitempty"`
	PrizeInfo            *PBRedEnvelopeBatch `protobuf:"bytes,8,opt,name=PrizeInfo,proto3" json:"PrizeInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *LotteryBatch) Reset()         { *m = LotteryBatch{} }
func (m *LotteryBatch) String() string { return proto.CompactTextString(m) }
func (*LotteryBatch) ProtoMessage()    {}
func (*LotteryBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{1}
}

func (m *LotteryBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LotteryBatch.Unmarshal(m, b)
}
func (m *LotteryBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LotteryBatch.Marshal(b, m, deterministic)
}
func (m *LotteryBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LotteryBatch.Merge(m, src)
}
func (m *LotteryBatch) XXX_Size() int {
	return xxx_messageInfo_LotteryBatch.Size(m)
}
func (m *LotteryBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_LotteryBatch.DiscardUnknown(m)
}

var xxx_messageInfo_LotteryBatch proto.InternalMessageInfo

func (m *LotteryBatch) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LotteryBatch) GetBatchName() string {
	if m != nil {
		return m.BatchName
	}
	return ""
}

func (m *LotteryBatch) GetCategory() LotteryCategory {
	if m != nil {
		return m.Category
	}
	return LotteryCategory_LOTTERY_SYSTEM
}

func (m *LotteryBatch) GetSystemType() LotterySystemType {
	if m != nil {
		return m.SystemType
	}
	return LotterySystemType_LOTTERY_SYSTEM_NAME
}

func (m *LotteryBatch) GetShowAvatar() bool {
	if m != nil {
		return m.ShowAvatar
	}
	return false
}

func (m *LotteryBatch) GetPrizeBatchId() int64 {
	if m != nil {
		return m.PrizeBatchId
	}
	return 0
}

func (m *LotteryBatch) GetStatus() LotteryStatus {
	if m != nil {
		return m.Status
	}
	return LotteryStatus_LOTTERY_STATUS_ALL
}

func (m *LotteryBatch) GetPrizeInfo() *PBRedEnvelopeBatch {
	if m != nil {
		return m.PrizeInfo
	}
	return nil
}

//大屏当前游戏状态
type LiveLotteryGameInfo struct {
	BatchId              int64                    `protobuf:"varint,1,opt,name=BatchId,proto3" json:"BatchId,omitempty"`
	State                LotteryStatus            `protobuf:"varint,2,opt,name=State,proto3,enum=redenvelopegame.LotteryStatus" json:"State,omitempty"`
	JoinUserCount        int64                    `protobuf:"varint,3,opt,name=JoinUserCount,proto3" json:"JoinUserCount,omitempty"`
	JoinUserList         []*LotteryUserInfo       `protobuf:"bytes,4,rep,name=JoinUserList,proto3" json:"JoinUserList,omitempty"`
	WinnerList           []*PBLotteryWinnerRecord `protobuf:"bytes,5,rep,name=WinnerList,proto3" json:"WinnerList,omitempty"`
	PrizeList            []*PBRedEnvelopeItem     `protobuf:"bytes,6,rep,name=PrizeList,proto3" json:"PrizeList,omitempty"`
	UsableCount          int32                    `protobuf:"varint,7,opt,name=UsableCount,proto3" json:"UsableCount,omitempty"`
	PreWinnerList        []*LotteryUserInfo       `protobuf:"bytes,8,rep,name=PreWinnerList,proto3" json:"PreWinnerList,omitempty"`
	RandomCode           string                   `protobuf:"bytes,9,opt,name=RandomCode,proto3" json:"RandomCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *LiveLotteryGameInfo) Reset()         { *m = LiveLotteryGameInfo{} }
func (m *LiveLotteryGameInfo) String() string { return proto.CompactTextString(m) }
func (*LiveLotteryGameInfo) ProtoMessage()    {}
func (*LiveLotteryGameInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{2}
}

func (m *LiveLotteryGameInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveLotteryGameInfo.Unmarshal(m, b)
}
func (m *LiveLotteryGameInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveLotteryGameInfo.Marshal(b, m, deterministic)
}
func (m *LiveLotteryGameInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveLotteryGameInfo.Merge(m, src)
}
func (m *LiveLotteryGameInfo) XXX_Size() int {
	return xxx_messageInfo_LiveLotteryGameInfo.Size(m)
}
func (m *LiveLotteryGameInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveLotteryGameInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LiveLotteryGameInfo proto.InternalMessageInfo

func (m *LiveLotteryGameInfo) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

func (m *LiveLotteryGameInfo) GetState() LotteryStatus {
	if m != nil {
		return m.State
	}
	return LotteryStatus_LOTTERY_STATUS_ALL
}

func (m *LiveLotteryGameInfo) GetJoinUserCount() int64 {
	if m != nil {
		return m.JoinUserCount
	}
	return 0
}

func (m *LiveLotteryGameInfo) GetJoinUserList() []*LotteryUserInfo {
	if m != nil {
		return m.JoinUserList
	}
	return nil
}

func (m *LiveLotteryGameInfo) GetWinnerList() []*PBLotteryWinnerRecord {
	if m != nil {
		return m.WinnerList
	}
	return nil
}

func (m *LiveLotteryGameInfo) GetPrizeList() []*PBRedEnvelopeItem {
	if m != nil {
		return m.PrizeList
	}
	return nil
}

func (m *LiveLotteryGameInfo) GetUsableCount() int32 {
	if m != nil {
		return m.UsableCount
	}
	return 0
}

func (m *LiveLotteryGameInfo) GetPreWinnerList() []*LotteryUserInfo {
	if m != nil {
		return m.PreWinnerList
	}
	return nil
}

func (m *LiveLotteryGameInfo) GetRandomCode() string {
	if m != nil {
		return m.RandomCode
	}
	return ""
}

//手机端当前游戏状态
type ClientLotteryGameInfo struct {
	BatchId              int64                    `protobuf:"varint,1,opt,name=BatchId,proto3" json:"BatchId,omitempty"`
	State                LotteryStatus            `protobuf:"varint,2,opt,name=State,proto3,enum=redenvelopegame.LotteryStatus" json:"State,omitempty"`
	WinnerList           []*PBLotteryWinnerRecord `protobuf:"bytes,3,rep,name=WinnerList,proto3" json:"WinnerList,omitempty"`
	BatchInfo            *LotteryBatch            `protobuf:"bytes,4,opt,name=BatchInfo,proto3" json:"BatchInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ClientLotteryGameInfo) Reset()         { *m = ClientLotteryGameInfo{} }
func (m *ClientLotteryGameInfo) String() string { return proto.CompactTextString(m) }
func (*ClientLotteryGameInfo) ProtoMessage()    {}
func (*ClientLotteryGameInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{3}
}

func (m *ClientLotteryGameInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientLotteryGameInfo.Unmarshal(m, b)
}
func (m *ClientLotteryGameInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientLotteryGameInfo.Marshal(b, m, deterministic)
}
func (m *ClientLotteryGameInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientLotteryGameInfo.Merge(m, src)
}
func (m *ClientLotteryGameInfo) XXX_Size() int {
	return xxx_messageInfo_ClientLotteryGameInfo.Size(m)
}
func (m *ClientLotteryGameInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientLotteryGameInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClientLotteryGameInfo proto.InternalMessageInfo

func (m *ClientLotteryGameInfo) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

func (m *ClientLotteryGameInfo) GetState() LotteryStatus {
	if m != nil {
		return m.State
	}
	return LotteryStatus_LOTTERY_STATUS_ALL
}

func (m *ClientLotteryGameInfo) GetWinnerList() []*PBLotteryWinnerRecord {
	if m != nil {
		return m.WinnerList
	}
	return nil
}

func (m *ClientLotteryGameInfo) GetBatchInfo() *LotteryBatch {
	if m != nil {
		return m.BatchInfo
	}
	return nil
}

//cmdid=0时大屏端获取游戏配置和当前游戏状态
type LiveLotteryLoginRsp struct {
	Code                 Code                 `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	ClientUrl            string               `protobuf:"bytes,2,opt,name=ClientUrl,proto3" json:"ClientUrl,omitempty"`
	MusicState           bool                 `protobuf:"varint,3,opt,name=MusicState,proto3" json:"MusicState,omitempty"`
	CurrentGameInfo      *LiveLotteryGameInfo `protobuf:"bytes,4,opt,name=CurrentGameInfo,proto3" json:"CurrentGameInfo,omitempty"`
	ConfigList           []*PBGameConfig      `protobuf:"bytes,5,rep,name=ConfigList,proto3" json:"ConfigList,omitempty"`
	BatchList            []*LotteryBatch      `protobuf:"bytes,6,rep,name=BatchList,proto3" json:"BatchList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LiveLotteryLoginRsp) Reset()         { *m = LiveLotteryLoginRsp{} }
func (m *LiveLotteryLoginRsp) String() string { return proto.CompactTextString(m) }
func (*LiveLotteryLoginRsp) ProtoMessage()    {}
func (*LiveLotteryLoginRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{4}
}

func (m *LiveLotteryLoginRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveLotteryLoginRsp.Unmarshal(m, b)
}
func (m *LiveLotteryLoginRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveLotteryLoginRsp.Marshal(b, m, deterministic)
}
func (m *LiveLotteryLoginRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveLotteryLoginRsp.Merge(m, src)
}
func (m *LiveLotteryLoginRsp) XXX_Size() int {
	return xxx_messageInfo_LiveLotteryLoginRsp.Size(m)
}
func (m *LiveLotteryLoginRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveLotteryLoginRsp.DiscardUnknown(m)
}

var xxx_messageInfo_LiveLotteryLoginRsp proto.InternalMessageInfo

func (m *LiveLotteryLoginRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *LiveLotteryLoginRsp) GetClientUrl() string {
	if m != nil {
		return m.ClientUrl
	}
	return ""
}

func (m *LiveLotteryLoginRsp) GetMusicState() bool {
	if m != nil {
		return m.MusicState
	}
	return false
}

func (m *LiveLotteryLoginRsp) GetCurrentGameInfo() *LiveLotteryGameInfo {
	if m != nil {
		return m.CurrentGameInfo
	}
	return nil
}

func (m *LiveLotteryLoginRsp) GetConfigList() []*PBGameConfig {
	if m != nil {
		return m.ConfigList
	}
	return nil
}

func (m *LiveLotteryLoginRsp) GetBatchList() []*LotteryBatch {
	if m != nil {
		return m.BatchList
	}
	return nil
}

//cmdid=0时手机端获取游戏配置和当前游戏状态
type ClientLotteryLoginRsp struct {
	Code                 Code                   `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	CurrentGameInfo      *ClientLotteryGameInfo `protobuf:"bytes,2,opt,name=CurrentGameInfo,proto3" json:"CurrentGameInfo,omitempty"`
	ConfigList           []*PBGameConfig        `protobuf:"bytes,3,rep,name=ConfigList,proto3" json:"ConfigList,omitempty"`
	UserId               int64                  `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ClientLotteryLoginRsp) Reset()         { *m = ClientLotteryLoginRsp{} }
func (m *ClientLotteryLoginRsp) String() string { return proto.CompactTextString(m) }
func (*ClientLotteryLoginRsp) ProtoMessage()    {}
func (*ClientLotteryLoginRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{5}
}

func (m *ClientLotteryLoginRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientLotteryLoginRsp.Unmarshal(m, b)
}
func (m *ClientLotteryLoginRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientLotteryLoginRsp.Marshal(b, m, deterministic)
}
func (m *ClientLotteryLoginRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientLotteryLoginRsp.Merge(m, src)
}
func (m *ClientLotteryLoginRsp) XXX_Size() int {
	return xxx_messageInfo_ClientLotteryLoginRsp.Size(m)
}
func (m *ClientLotteryLoginRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientLotteryLoginRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ClientLotteryLoginRsp proto.InternalMessageInfo

func (m *ClientLotteryLoginRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *ClientLotteryLoginRsp) GetCurrentGameInfo() *ClientLotteryGameInfo {
	if m != nil {
		return m.CurrentGameInfo
	}
	return nil
}

func (m *ClientLotteryLoginRsp) GetConfigList() []*PBGameConfig {
	if m != nil {
		return m.ConfigList
	}
	return nil
}

func (m *ClientLotteryLoginRsp) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

//cmdid = 2 大屏批次选择请求
type LiveLotterySelectBatchReq struct {
	BatchId              int64    `protobuf:"varint,1,opt,name=BatchId,proto3" json:"BatchId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiveLotterySelectBatchReq) Reset()         { *m = LiveLotterySelectBatchReq{} }
func (m *LiveLotterySelectBatchReq) String() string { return proto.CompactTextString(m) }
func (*LiveLotterySelectBatchReq) ProtoMessage()    {}
func (*LiveLotterySelectBatchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{6}
}

func (m *LiveLotterySelectBatchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveLotterySelectBatchReq.Unmarshal(m, b)
}
func (m *LiveLotterySelectBatchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveLotterySelectBatchReq.Marshal(b, m, deterministic)
}
func (m *LiveLotterySelectBatchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveLotterySelectBatchReq.Merge(m, src)
}
func (m *LiveLotterySelectBatchReq) XXX_Size() int {
	return xxx_messageInfo_LiveLotterySelectBatchReq.Size(m)
}
func (m *LiveLotterySelectBatchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveLotterySelectBatchReq.DiscardUnknown(m)
}

var xxx_messageInfo_LiveLotterySelectBatchReq proto.InternalMessageInfo

func (m *LiveLotterySelectBatchReq) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

//cmdid = 2 大屏批次选择请求
type LiveLotterySelectBatchRsp struct {
	Code                 Code                 `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	GameInfo             *LiveLotteryGameInfo `protobuf:"bytes,2,opt,name=GameInfo,proto3" json:"GameInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LiveLotterySelectBatchRsp) Reset()         { *m = LiveLotterySelectBatchRsp{} }
func (m *LiveLotterySelectBatchRsp) String() string { return proto.CompactTextString(m) }
func (*LiveLotterySelectBatchRsp) ProtoMessage()    {}
func (*LiveLotterySelectBatchRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{7}
}

func (m *LiveLotterySelectBatchRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveLotterySelectBatchRsp.Unmarshal(m, b)
}
func (m *LiveLotterySelectBatchRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveLotterySelectBatchRsp.Marshal(b, m, deterministic)
}
func (m *LiveLotterySelectBatchRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveLotterySelectBatchRsp.Merge(m, src)
}
func (m *LiveLotterySelectBatchRsp) XXX_Size() int {
	return xxx_messageInfo_LiveLotterySelectBatchRsp.Size(m)
}
func (m *LiveLotterySelectBatchRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveLotterySelectBatchRsp.DiscardUnknown(m)
}

var xxx_messageInfo_LiveLotterySelectBatchRsp proto.InternalMessageInfo

func (m *LiveLotterySelectBatchRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *LiveLotterySelectBatchRsp) GetGameInfo() *LiveLotteryGameInfo {
	if m != nil {
		return m.GameInfo
	}
	return nil
}

//cmdid=2时手机端获取大屏选择批次的信息
type ClientLotterySelectBatchRsp struct {
	Code                 Code                   `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	CurrentGameInfo      *ClientLotteryGameInfo `protobuf:"bytes,2,opt,name=CurrentGameInfo,proto3" json:"CurrentGameInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ClientLotterySelectBatchRsp) Reset()         { *m = ClientLotterySelectBatchRsp{} }
func (m *ClientLotterySelectBatchRsp) String() string { return proto.CompactTextString(m) }
func (*ClientLotterySelectBatchRsp) ProtoMessage()    {}
func (*ClientLotterySelectBatchRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{8}
}

func (m *ClientLotterySelectBatchRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientLotterySelectBatchRsp.Unmarshal(m, b)
}
func (m *ClientLotterySelectBatchRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientLotterySelectBatchRsp.Marshal(b, m, deterministic)
}
func (m *ClientLotterySelectBatchRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientLotterySelectBatchRsp.Merge(m, src)
}
func (m *ClientLotterySelectBatchRsp) XXX_Size() int {
	return xxx_messageInfo_ClientLotterySelectBatchRsp.Size(m)
}
func (m *ClientLotterySelectBatchRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientLotterySelectBatchRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ClientLotterySelectBatchRsp proto.InternalMessageInfo

func (m *ClientLotterySelectBatchRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *ClientLotterySelectBatchRsp) GetCurrentGameInfo() *ClientLotteryGameInfo {
	if m != nil {
		return m.CurrentGameInfo
	}
	return nil
}

//cmdid = 3 大屏端获取参与人数
type LiveLotterySignRsp struct {
	Code                 Code     `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	JoinCount            int64    `protobuf:"varint,2,opt,name=JoinCount,proto3" json:"JoinCount,omitempty"`
	UserId               int64    `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName             string   `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	Avatar               string   `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiveLotterySignRsp) Reset()         { *m = LiveLotterySignRsp{} }
func (m *LiveLotterySignRsp) String() string { return proto.CompactTextString(m) }
func (*LiveLotterySignRsp) ProtoMessage()    {}
func (*LiveLotterySignRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{9}
}

func (m *LiveLotterySignRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveLotterySignRsp.Unmarshal(m, b)
}
func (m *LiveLotterySignRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveLotterySignRsp.Marshal(b, m, deterministic)
}
func (m *LiveLotterySignRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveLotterySignRsp.Merge(m, src)
}
func (m *LiveLotterySignRsp) XXX_Size() int {
	return xxx_messageInfo_LiveLotterySignRsp.Size(m)
}
func (m *LiveLotterySignRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveLotterySignRsp.DiscardUnknown(m)
}

var xxx_messageInfo_LiveLotterySignRsp proto.InternalMessageInfo

func (m *LiveLotterySignRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *LiveLotterySignRsp) GetJoinCount() int64 {
	if m != nil {
		return m.JoinCount
	}
	return 0
}

func (m *LiveLotterySignRsp) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *LiveLotterySignRsp) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *LiveLotterySignRsp) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

//cmdid = 3 手机端参与人数更新
type ClientLotterySignRsp struct {
	Code                 Code     `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	JoinCount            int64    `protobuf:"varint,2,opt,name=JoinCount,proto3" json:"JoinCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientLotterySignRsp) Reset()         { *m = ClientLotterySignRsp{} }
func (m *ClientLotterySignRsp) String() string { return proto.CompactTextString(m) }
func (*ClientLotterySignRsp) ProtoMessage()    {}
func (*ClientLotterySignRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{10}
}

func (m *ClientLotterySignRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientLotterySignRsp.Unmarshal(m, b)
}
func (m *ClientLotterySignRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientLotterySignRsp.Marshal(b, m, deterministic)
}
func (m *ClientLotterySignRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientLotterySignRsp.Merge(m, src)
}
func (m *ClientLotterySignRsp) XXX_Size() int {
	return xxx_messageInfo_ClientLotterySignRsp.Size(m)
}
func (m *ClientLotterySignRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientLotterySignRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ClientLotterySignRsp proto.InternalMessageInfo

func (m *ClientLotterySignRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *ClientLotterySignRsp) GetJoinCount() int64 {
	if m != nil {
		return m.JoinCount
	}
	return 0
}

//cmdid =4 大屏开始游戏
type LiveLotteryStartReq struct {
	BatchId              int64    `protobuf:"varint,1,opt,name=BatchId,proto3" json:"BatchId,omitempty"`
	ItemId               int64    `protobuf:"varint,2,opt,name=ItemId,proto3" json:"ItemId,omitempty"`
	Count                int32    `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiveLotteryStartReq) Reset()         { *m = LiveLotteryStartReq{} }
func (m *LiveLotteryStartReq) String() string { return proto.CompactTextString(m) }
func (*LiveLotteryStartReq) ProtoMessage()    {}
func (*LiveLotteryStartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{11}
}

func (m *LiveLotteryStartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveLotteryStartReq.Unmarshal(m, b)
}
func (m *LiveLotteryStartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveLotteryStartReq.Marshal(b, m, deterministic)
}
func (m *LiveLotteryStartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveLotteryStartReq.Merge(m, src)
}
func (m *LiveLotteryStartReq) XXX_Size() int {
	return xxx_messageInfo_LiveLotteryStartReq.Size(m)
}
func (m *LiveLotteryStartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveLotteryStartReq.DiscardUnknown(m)
}

var xxx_messageInfo_LiveLotteryStartReq proto.InternalMessageInfo

func (m *LiveLotteryStartReq) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

func (m *LiveLotteryStartReq) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *LiveLotteryStartReq) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

//cmdid = 4时游戏开始的通知
type LotteryStartRsp struct {
	Code                 Code               `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	BatchId              int64              `protobuf:"varint,2,opt,name=BatchId,proto3" json:"BatchId,omitempty"`
	State                LotteryStatus      `protobuf:"varint,3,opt,name=State,proto3,enum=redenvelopegame.LotteryStatus" json:"State,omitempty"`
	UserList             []*LotteryUserInfo `protobuf:"bytes,4,rep,name=UserList,proto3" json:"UserList,omitempty"`
	RandomCode           string             `protobuf:"bytes,5,opt,name=RandomCode,proto3" json:"RandomCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LotteryStartRsp) Reset()         { *m = LotteryStartRsp{} }
func (m *LotteryStartRsp) String() string { return proto.CompactTextString(m) }
func (*LotteryStartRsp) ProtoMessage()    {}
func (*LotteryStartRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{12}
}

func (m *LotteryStartRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LotteryStartRsp.Unmarshal(m, b)
}
func (m *LotteryStartRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LotteryStartRsp.Marshal(b, m, deterministic)
}
func (m *LotteryStartRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LotteryStartRsp.Merge(m, src)
}
func (m *LotteryStartRsp) XXX_Size() int {
	return xxx_messageInfo_LotteryStartRsp.Size(m)
}
func (m *LotteryStartRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_LotteryStartRsp.DiscardUnknown(m)
}

var xxx_messageInfo_LotteryStartRsp proto.InternalMessageInfo

func (m *LotteryStartRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *LotteryStartRsp) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

func (m *LotteryStartRsp) GetState() LotteryStatus {
	if m != nil {
		return m.State
	}
	return LotteryStatus_LOTTERY_STATUS_ALL
}

func (m *LotteryStartRsp) GetUserList() []*LotteryUserInfo {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *LotteryStartRsp) GetRandomCode() string {
	if m != nil {
		return m.RandomCode
	}
	return ""
}

//cmdid = 5大屏确认抽奖结果
type LiveLotteryOverReq struct {
	BatchId              int64              `protobuf:"varint,1,opt,name=BatchId,proto3" json:"BatchId,omitempty"`
	ItemId               int64              `protobuf:"varint,2,opt,name=ItemId,proto3" json:"ItemId,omitempty"`
	UserList             []*LotteryUserInfo `protobuf:"bytes,3,rep,name=UserList,proto3" json:"UserList,omitempty"`
	RandomCode           string             `protobuf:"bytes,4,opt,name=RandomCode,proto3" json:"RandomCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LiveLotteryOverReq) Reset()         { *m = LiveLotteryOverReq{} }
func (m *LiveLotteryOverReq) String() string { return proto.CompactTextString(m) }
func (*LiveLotteryOverReq) ProtoMessage()    {}
func (*LiveLotteryOverReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{13}
}

func (m *LiveLotteryOverReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveLotteryOverReq.Unmarshal(m, b)
}
func (m *LiveLotteryOverReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveLotteryOverReq.Marshal(b, m, deterministic)
}
func (m *LiveLotteryOverReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveLotteryOverReq.Merge(m, src)
}
func (m *LiveLotteryOverReq) XXX_Size() int {
	return xxx_messageInfo_LiveLotteryOverReq.Size(m)
}
func (m *LiveLotteryOverReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveLotteryOverReq.DiscardUnknown(m)
}

var xxx_messageInfo_LiveLotteryOverReq proto.InternalMessageInfo

func (m *LiveLotteryOverReq) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

func (m *LiveLotteryOverReq) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *LiveLotteryOverReq) GetUserList() []*LotteryUserInfo {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *LiveLotteryOverReq) GetRandomCode() string {
	if m != nil {
		return m.RandomCode
	}
	return ""
}

//cmdid = 5大屏抽奖结果
type LotteryOverRsp struct {
	Code                 Code                 `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	GameInfo             *LiveLotteryGameInfo `protobuf:"bytes,2,opt,name=GameInfo,proto3" json:"GameInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LotteryOverRsp) Reset()         { *m = LotteryOverRsp{} }
func (m *LotteryOverRsp) String() string { return proto.CompactTextString(m) }
func (*LotteryOverRsp) ProtoMessage()    {}
func (*LotteryOverRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{14}
}

func (m *LotteryOverRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LotteryOverRsp.Unmarshal(m, b)
}
func (m *LotteryOverRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LotteryOverRsp.Marshal(b, m, deterministic)
}
func (m *LotteryOverRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LotteryOverRsp.Merge(m, src)
}
func (m *LotteryOverRsp) XXX_Size() int {
	return xxx_messageInfo_LotteryOverRsp.Size(m)
}
func (m *LotteryOverRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_LotteryOverRsp.DiscardUnknown(m)
}

var xxx_messageInfo_LotteryOverRsp proto.InternalMessageInfo

func (m *LotteryOverRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *LotteryOverRsp) GetGameInfo() *LiveLotteryGameInfo {
	if m != nil {
		return m.GameInfo
	}
	return nil
}

//cmdid = 5手机通知抽奖结果
type ClientLotteryOverRsp struct {
	BatchId              int64                    `protobuf:"varint,1,opt,name=BatchId,proto3" json:"BatchId,omitempty"`
	ItemId               int64                    `protobuf:"varint,2,opt,name=ItemId,proto3" json:"ItemId,omitempty"`
	UserList             []*PBLotteryWinnerRecord `protobuf:"bytes,3,rep,name=UserList,proto3" json:"UserList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ClientLotteryOverRsp) Reset()         { *m = ClientLotteryOverRsp{} }
func (m *ClientLotteryOverRsp) String() string { return proto.CompactTextString(m) }
func (*ClientLotteryOverRsp) ProtoMessage()    {}
func (*ClientLotteryOverRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{15}
}

func (m *ClientLotteryOverRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientLotteryOverRsp.Unmarshal(m, b)
}
func (m *ClientLotteryOverRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientLotteryOverRsp.Marshal(b, m, deterministic)
}
func (m *ClientLotteryOverRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientLotteryOverRsp.Merge(m, src)
}
func (m *ClientLotteryOverRsp) XXX_Size() int {
	return xxx_messageInfo_ClientLotteryOverRsp.Size(m)
}
func (m *ClientLotteryOverRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientLotteryOverRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ClientLotteryOverRsp proto.InternalMessageInfo

func (m *ClientLotteryOverRsp) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

func (m *ClientLotteryOverRsp) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *ClientLotteryOverRsp) GetUserList() []*PBLotteryWinnerRecord {
	if m != nil {
		return m.UserList
	}
	return nil
}

//cmdid = 6手机查询号码中奖记录
type ClientWinnerQueryReq struct {
	QueryStr             string   `protobuf:"bytes,1,opt,name=QueryStr,proto3" json:"QueryStr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientWinnerQueryReq) Reset()         { *m = ClientWinnerQueryReq{} }
func (m *ClientWinnerQueryReq) String() string { return proto.CompactTextString(m) }
func (*ClientWinnerQueryReq) ProtoMessage()    {}
func (*ClientWinnerQueryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{16}
}

func (m *ClientWinnerQueryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientWinnerQueryReq.Unmarshal(m, b)
}
func (m *ClientWinnerQueryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientWinnerQueryReq.Marshal(b, m, deterministic)
}
func (m *ClientWinnerQueryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientWinnerQueryReq.Merge(m, src)
}
func (m *ClientWinnerQueryReq) XXX_Size() int {
	return xxx_messageInfo_ClientWinnerQueryReq.Size(m)
}
func (m *ClientWinnerQueryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientWinnerQueryReq.DiscardUnknown(m)
}

var xxx_messageInfo_ClientWinnerQueryReq proto.InternalMessageInfo

func (m *ClientWinnerQueryReq) GetQueryStr() string {
	if m != nil {
		return m.QueryStr
	}
	return ""
}

//cmdid = 6手机查询号码中奖结果返回
type ClientWinnerQueryRsp struct {
	Code                 Code                     `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	List                 []*PBLotteryWinnerRecord `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ClientWinnerQueryRsp) Reset()         { *m = ClientWinnerQueryRsp{} }
func (m *ClientWinnerQueryRsp) String() string { return proto.CompactTextString(m) }
func (*ClientWinnerQueryRsp) ProtoMessage()    {}
func (*ClientWinnerQueryRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{17}
}

func (m *ClientWinnerQueryRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientWinnerQueryRsp.Unmarshal(m, b)
}
func (m *ClientWinnerQueryRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientWinnerQueryRsp.Marshal(b, m, deterministic)
}
func (m *ClientWinnerQueryRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientWinnerQueryRsp.Merge(m, src)
}
func (m *ClientWinnerQueryRsp) XXX_Size() int {
	return xxx_messageInfo_ClientWinnerQueryRsp.Size(m)
}
func (m *ClientWinnerQueryRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientWinnerQueryRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ClientWinnerQueryRsp proto.InternalMessageInfo

func (m *ClientWinnerQueryRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *ClientWinnerQueryRsp) GetList() []*PBLotteryWinnerRecord {
	if m != nil {
		return m.List
	}
	return nil
}

//cmdid = 8 大屏端操作命令
type LiveLotteryActionReq struct {
	ActionData           string   `protobuf:"bytes,1,opt,name=ActionData,proto3" json:"ActionData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiveLotteryActionReq) Reset()         { *m = LiveLotteryActionReq{} }
func (m *LiveLotteryActionReq) String() string { return proto.CompactTextString(m) }
func (*LiveLotteryActionReq) ProtoMessage()    {}
func (*LiveLotteryActionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{18}
}

func (m *LiveLotteryActionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveLotteryActionReq.Unmarshal(m, b)
}
func (m *LiveLotteryActionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveLotteryActionReq.Marshal(b, m, deterministic)
}
func (m *LiveLotteryActionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveLotteryActionReq.Merge(m, src)
}
func (m *LiveLotteryActionReq) XXX_Size() int {
	return xxx_messageInfo_LiveLotteryActionReq.Size(m)
}
func (m *LiveLotteryActionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveLotteryActionReq.DiscardUnknown(m)
}

var xxx_messageInfo_LiveLotteryActionReq proto.InternalMessageInfo

func (m *LiveLotteryActionReq) GetActionData() string {
	if m != nil {
		return m.ActionData
	}
	return ""
}

//cmdid = 8 大屏端返回命令
type LiveLotteryActionRsp struct {
	Code                 Code     `protobuf:"varint,1,opt,name=Code,proto3,enum=Code" json:"Code,omitempty"`
	ActionData           string   `protobuf:"bytes,2,opt,name=ActionData,proto3" json:"ActionData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiveLotteryActionRsp) Reset()         { *m = LiveLotteryActionRsp{} }
func (m *LiveLotteryActionRsp) String() string { return proto.CompactTextString(m) }
func (*LiveLotteryActionRsp) ProtoMessage()    {}
func (*LiveLotteryActionRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02a02f1a1d59051f, []int{19}
}

func (m *LiveLotteryActionRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveLotteryActionRsp.Unmarshal(m, b)
}
func (m *LiveLotteryActionRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveLotteryActionRsp.Marshal(b, m, deterministic)
}
func (m *LiveLotteryActionRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveLotteryActionRsp.Merge(m, src)
}
func (m *LiveLotteryActionRsp) XXX_Size() int {
	return xxx_messageInfo_LiveLotteryActionRsp.Size(m)
}
func (m *LiveLotteryActionRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveLotteryActionRsp.DiscardUnknown(m)
}

var xxx_messageInfo_LiveLotteryActionRsp proto.InternalMessageInfo

func (m *LiveLotteryActionRsp) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_NOT_USE
}

func (m *LiveLotteryActionRsp) GetActionData() string {
	if m != nil {
		return m.ActionData
	}
	return ""
}

func init() {
	proto.RegisterEnum("redenvelopegame.LotteryCMD", LotteryCMD_name, LotteryCMD_value)
	proto.RegisterType((*LotteryUserInfo)(nil), "redenvelopegame.LotteryUserInfo")
	proto.RegisterType((*LotteryBatch)(nil), "redenvelopegame.LotteryBatch")
	proto.RegisterType((*LiveLotteryGameInfo)(nil), "redenvelopegame.LiveLotteryGameInfo")
	proto.RegisterType((*ClientLotteryGameInfo)(nil), "redenvelopegame.ClientLotteryGameInfo")
	proto.RegisterType((*LiveLotteryLoginRsp)(nil), "redenvelopegame.LiveLotteryLoginRsp")
	proto.RegisterType((*ClientLotteryLoginRsp)(nil), "redenvelopegame.ClientLotteryLoginRsp")
	proto.RegisterType((*LiveLotterySelectBatchReq)(nil), "redenvelopegame.LiveLotterySelectBatchReq")
	proto.RegisterType((*LiveLotterySelectBatchRsp)(nil), "redenvelopegame.LiveLotterySelectBatchRsp")
	proto.RegisterType((*ClientLotterySelectBatchRsp)(nil), "redenvelopegame.ClientLotterySelectBatchRsp")
	proto.RegisterType((*LiveLotterySignRsp)(nil), "redenvelopegame.LiveLotterySignRsp")
	proto.RegisterType((*ClientLotterySignRsp)(nil), "redenvelopegame.ClientLotterySignRsp")
	proto.RegisterType((*LiveLotteryStartReq)(nil), "redenvelopegame.LiveLotteryStartReq")
	proto.RegisterType((*LotteryStartRsp)(nil), "redenvelopegame.LotteryStartRsp")
	proto.RegisterType((*LiveLotteryOverReq)(nil), "redenvelopegame.LiveLotteryOverReq")
	proto.RegisterType((*LotteryOverRsp)(nil), "redenvelopegame.LotteryOverRsp")
	proto.RegisterType((*ClientLotteryOverRsp)(nil), "redenvelopegame.ClientLotteryOverRsp")
	proto.RegisterType((*ClientWinnerQueryReq)(nil), "redenvelopegame.ClientWinnerQueryReq")
	proto.RegisterType((*ClientWinnerQueryRsp)(nil), "redenvelopegame.ClientWinnerQueryRsp")
	proto.RegisterType((*LiveLotteryActionReq)(nil), "redenvelopegame.LiveLotteryActionReq")
	proto.RegisterType((*LiveLotteryActionRsp)(nil), "redenvelopegame.LiveLotteryActionRsp")
}

func init() { proto.RegisterFile("LotteryGame.proto", fileDescriptor_02a02f1a1d59051f) }

var fileDescriptor_02a02f1a1d59051f = []byte{
	// 1190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xcf, 0x6f, 0x1b, 0xc5,
	0x17, 0xff, 0xae, 0xd7, 0x76, 0xed, 0x97, 0xc4, 0x71, 0x26, 0x69, 0xba, 0xf5, 0x37, 0x44, 0xd6,
	0xaa, 0x42, 0x11, 0x12, 0x16, 0xb8, 0xd0, 0x03, 0xed, 0x81, 0x78, 0xe3, 0x86, 0x45, 0x8e, 0xed,
	0x8c, 0xed, 0x16, 0x90, 0x50, 0xb4, 0xb5, 0xa7, 0xc9, 0x8a, 0x78, 0x37, 0x5d, 0x8f, 0x0d, 0xe1,
	0x0f, 0xe0, 0x80, 0xf8, 0x07, 0xb8, 0x73, 0xe2, 0x5f, 0xe1, 0xcc, 0x85, 0x1b, 0x12, 0x47, 0xf8,
	0x1f, 0xd0, 0xfc, 0xd8, 0xdd, 0xd9, 0x75, 0x9c, 0x38, 0x2d, 0xbd, 0xed, 0xfb, 0xbc, 0x1f, 0xf3,
	0xde, 0xe7, 0xbd, 0x99, 0xd9, 0x81, 0x8d, 0x96, 0x4f, 0x29, 0x09, 0x2e, 0x0f, 0x9d, 0x31, 0xa9,
	0x5d, 0x04, 0x3e, 0xf5, 0xd1, 0x7a, 0x40, 0x46, 0xc4, 0x9b, 0x91, 0x73, 0xff, 0x82, 0x9c, 0x3a,
	0x63, 0x52, 0x29, 0x33, 0xa5, 0xe5, 0x7b, 0x2f, 0xdd, 0x53, 0x61, 0x52, 0x29, 0x31, 0xe4, 0xc0,
	0xa1, 0x8e, 0x94, 0xb7, 0x31, 0x19, 0x35, 0xa5, 0x4b, 0x37, 0x70, 0xbf, 0x97, 0xa1, 0x2a, 0x61,
	0x74, 0xc5, 0x74, 0xd5, 0xf2, 0xc7, 0x63, 0xdf, 0x13, 0x92, 0xf9, 0xa7, 0x06, 0xeb, 0xd2, 0x66,
	0x30, 0x21, 0x81, 0xed, 0xbd, 0xf4, 0x51, 0x09, 0x32, 0xf6, 0xc8, 0xd0, 0xaa, 0xda, 0x9e, 0x8e,
	0x33, 0xf6, 0x08, 0x55, 0xa0, 0xc0, 0x74, 0x6d, 0x67, 0x4c, 0x8c, 0x4c, 0x55, 0xdb, 0x2b, 0xe2,
	0x48, 0x46, 0xbb, 0x00, 0xec, 0x7b, 0x7f, 0xe6, 0x50, 0x27, 0x30, 0x74, 0xae, 0x55, 0x90, 0x50,
	0xff, 0xfc, 0x0b, 0xee, 0x9d, 0x8d, 0xf5, 0x02, 0x41, 0x3b, 0x50, 0x64, 0x52, 0xf7, 0xcc, 0xf7,
	0x88, 0x91, 0xe3, 0xea, 0x18, 0x40, 0x26, 0xac, 0x32, 0xa1, 0xef, 0x0e, 0xbf, 0x21, 0xb4, 0xed,
	0x1b, 0x79, 0x6e, 0x90, 0xc0, 0x50, 0x15, 0x56, 0xac, 0xe9, 0x84, 0xfa, 0x63, 0x12, 0xf4, 0x68,
	0x60, 0xdc, 0xe1, 0x26, 0x2a, 0x64, 0xfe, 0x93, 0x81, 0x55, 0x59, 0x63, 0xc3, 0xa1, 0xc3, 0xb3,
	0xb9, 0x02, 0x77, 0xa0, 0xc8, 0x15, 0x4a, 0x85, 0x31, 0x80, 0x9e, 0x40, 0xc1, 0x72, 0x28, 0x39,
	0xf5, 0x83, 0x4b, 0x5e, 0x60, 0xa9, 0x5e, 0xad, 0xa5, 0x3a, 0x54, 0x93, 0xe1, 0x43, 0x3b, 0x1c,
	0x79, 0xa0, 0x06, 0x40, 0xef, 0x72, 0x42, 0xc9, 0xb8, 0x7f, 0x79, 0x21, 0x08, 0x28, 0xd5, 0xcd,
	0x45, 0xfe, 0xb1, 0x25, 0x56, 0xbc, 0x18, 0x89, 0xbd, 0x33, 0xff, 0x5b, 0x49, 0x32, 0x63, 0xa9,
	0x80, 0x15, 0x84, 0xd1, 0xc4, 0x9b, 0xce, 0x73, 0xb6, 0x47, 0x9c, 0x26, 0x1d, 0x27, 0x30, 0xf4,
	0x08, 0xf2, 0x3d, 0xea, 0xd0, 0xe9, 0x84, 0x33, 0x54, 0xaa, 0xef, 0x2e, 0xcc, 0x81, 0x5b, 0x61,
	0x69, 0x8d, 0x3e, 0x84, 0x22, 0x8f, 0xc3, 0x26, 0xc3, 0x28, 0x54, 0xb5, 0xbd, 0x95, 0xfa, 0x66,
	0xad, 0xdb, 0x50, 0xe6, 0x8d, 0xaf, 0x80, 0x63, 0x2b, 0xf3, 0x77, 0x1d, 0x36, 0x5b, 0xee, 0x8c,
	0x28, 0x93, 0xcd, 0xe7, 0xca, 0x80, 0x3b, 0x61, 0x86, 0x82, 0xfb, 0x50, 0x44, 0x1f, 0x41, 0x8e,
	0x2d, 0x27, 0xc8, 0xbf, 0x39, 0x37, 0x61, 0x8c, 0x1e, 0xc0, 0xda, 0xe7, 0xbe, 0xeb, 0xb1, 0x69,
	0xb0, 0xfc, 0xa9, 0x47, 0x79, 0x77, 0x74, 0x9c, 0x04, 0xd1, 0x01, 0xac, 0x86, 0x40, 0xcb, 0x9d,
	0x50, 0x23, 0x5b, 0xd5, 0xf7, 0x56, 0x16, 0xb7, 0x30, 0xdc, 0x05, 0x38, 0xe1, 0x85, 0x9e, 0x02,
	0x3c, 0x77, 0x3d, 0x4f, 0xc6, 0xc8, 0xf1, 0x18, 0xef, 0xce, 0xc5, 0xe8, 0x36, 0x64, 0x14, 0x61,
	0x8b, 0xc9, 0xd0, 0x0f, 0x46, 0x58, 0xf1, 0x44, 0x1f, 0x48, 0x3a, 0x79, 0x98, 0x3c, 0x0f, 0x83,
	0x92, 0x74, 0xda, 0x94, 0x8c, 0x71, 0x6c, 0xc4, 0xe6, 0x7b, 0x30, 0x71, 0x5e, 0x9c, 0x13, 0x51,
	0x23, 0xeb, 0x5e, 0x0e, 0xab, 0x10, 0x7a, 0x0a, 0x6b, 0xdd, 0x80, 0x28, 0xe9, 0x15, 0x96, 0x2c,
	0x31, 0xe9, 0xc6, 0xc6, 0x0c, 0x3b, 0xde, 0xc8, 0x1f, 0x5b, 0xfe, 0x88, 0x18, 0x45, 0xb1, 0x57,
	0x63, 0xc4, 0xfc, 0x5b, 0x83, 0xbb, 0xd6, 0xb9, 0x4b, 0x3c, 0xfa, 0xb6, 0x3b, 0x9b, 0x64, 0x5b,
	0x7f, 0x6d, 0xb6, 0x1f, 0xcb, 0x8d, 0xcd, 0x87, 0x37, 0xcb, 0x87, 0xf7, 0x9d, 0x45, 0x19, 0xc8,
	0x31, 0x8e, 0xec, 0xcd, 0x5f, 0x33, 0x89, 0x31, 0x6e, 0xf9, 0xa7, 0xae, 0x87, 0x27, 0x17, 0xe8,
	0x3e, 0x64, 0x39, 0x41, 0x1a, 0xaf, 0x28, 0x57, 0x63, 0x02, 0xe6, 0x10, 0x3b, 0x48, 0x04, 0x41,
	0x83, 0xe0, 0x3c, 0x3c, 0x48, 0x22, 0x80, 0xf1, 0x7b, 0x34, 0x9d, 0xb8, 0x43, 0x41, 0x88, 0x2e,
	0xb6, 0x71, 0x8c, 0xa0, 0x36, 0xac, 0x5b, 0xd3, 0x20, 0x20, 0x1e, 0x0d, 0x89, 0x95, 0x39, 0x3f,
	0x98, 0xcf, 0x79, 0x7e, 0x7b, 0xe1, 0xb4, 0x33, 0x7a, 0x1f, 0x40, 0x5c, 0x1a, 0xca, 0xcc, 0xae,
	0xd5, 0xba, 0x8d, 0xf8, 0x36, 0xc1, 0x8a, 0x41, 0x44, 0x96, 0x32, 0x9a, 0x4b, 0x91, 0xc5, 0xec,
	0xcd, 0xdf, 0xd2, 0xb3, 0xb1, 0x0c, 0x5d, 0xdd, 0xf9, 0x82, 0x33, 0xbc, 0xe0, 0xf9, 0x5e, 0x5f,
	0x39, 0x77, 0x37, 0x95, 0xac, 0xdf, 0x54, 0xf2, 0x36, 0xe4, 0xf9, 0x66, 0x18, 0x71, 0xa2, 0x75,
	0x2c, 0x25, 0xf3, 0x63, 0xb8, 0xaf, 0x30, 0xdc, 0x23, 0xe7, 0x64, 0x48, 0x45, 0xc9, 0xe4, 0xd5,
	0xe2, 0x61, 0x37, 0xbf, 0x5b, 0xe8, 0x76, 0x3d, 0x0f, 0x9f, 0x42, 0x21, 0x45, 0xc0, 0x72, 0x1d,
	0x8f, 0xbc, 0xcc, 0x1f, 0x35, 0xf8, 0x7f, 0x82, 0xa2, 0xe5, 0x17, 0xff, 0xcf, 0x9b, 0x60, 0xfe,
	0xac, 0x01, 0x52, 0x79, 0x70, 0x4f, 0x97, 0xd8, 0x37, 0xec, 0xb4, 0x15, 0x27, 0x5c, 0x86, 0x93,
	0x1a, 0x03, 0xac, 0x4b, 0x53, 0xd1, 0x25, 0x71, 0xc0, 0x4b, 0x89, 0xfd, 0x97, 0x4c, 0xc3, 0xff,
	0x12, 0xf1, 0x67, 0x11, 0xc9, 0xcc, 0xc7, 0x89, 0xaf, 0xcb, 0x22, 0x96, 0x92, 0xd9, 0x81, 0xad,
	0x24, 0x4f, 0x6f, 0x98, 0x9c, 0xf9, 0x75, 0xe2, 0x90, 0xe8, 0x51, 0x27, 0xa0, 0xd7, 0x0e, 0x09,
	0xcb, 0x8c, 0x1d, 0xf1, 0xf6, 0x48, 0xc6, 0x92, 0x12, 0xda, 0x82, 0x5c, 0x7c, 0x8b, 0xe5, 0xb0,
	0x10, 0xcc, 0x3f, 0xe2, 0xff, 0x33, 0x11, 0xfb, 0xfa, 0x5c, 0x95, 0x65, 0x33, 0x0b, 0x0e, 0x62,
	0xfd, 0x36, 0x07, 0xf1, 0x13, 0xf1, 0xeb, 0x77, 0xab, 0x8b, 0x33, 0xf2, 0x48, 0x5d, 0x28, 0xb9,
	0xb9, 0x0b, 0xe5, 0x97, 0xe4, 0xa0, 0x74, 0x66, 0xec, 0x10, 0x7f, 0x1d, 0xee, 0xd4, 0x34, 0xf5,
	0x37, 0x4c, 0x33, 0x3b, 0x97, 0xe6, 0x18, 0x4a, 0x6a, 0x86, 0x6f, 0x7b, 0x2f, 0xff, 0xa4, 0xa5,
	0x66, 0x34, 0x5c, 0xf5, 0xf6, 0xbc, 0x34, 0xe6, 0x78, 0x59, 0xf6, 0x16, 0x8d, 0xfc, 0xcc, 0x7a,
	0x98, 0x8d, 0xd0, 0x1f, 0x4f, 0x49, 0x70, 0xc9, 0xba, 0x54, 0x81, 0x02, 0xff, 0x66, 0x3f, 0xdd,
	0x9a, 0xd8, 0x7d, 0xa1, 0x6c, 0x8e, 0xaf, 0xf2, 0xb9, 0x9e, 0xb7, 0x4f, 0x20, 0xcb, 0xd3, 0xcc,
	0xdc, 0x2a, 0x4d, 0xee, 0x63, 0x3e, 0x82, 0x2d, 0x85, 0xd2, 0xfd, 0x21, 0x75, 0x7d, 0x8f, 0xa5,
	0xb8, 0x0b, 0x20, 0x04, 0xf6, 0xfc, 0x91, 0x49, 0x2a, 0x88, 0x79, 0x7c, 0x95, 0xdf, 0xf5, 0x69,
	0x26, 0x43, 0x66, 0xd2, 0x21, 0xdf, 0xfb, 0x4b, 0x03, 0x08, 0x1f, 0x03, 0x47, 0x07, 0x68, 0x03,
	0xd6, 0xa4, 0x74, 0xd2, 0xea, 0x1c, 0xda, 0xed, 0xf2, 0xff, 0x10, 0x8a, 0xa6, 0x89, 0x41, 0x9d,
	0x41, 0xbf, 0xac, 0xa1, 0x1d, 0x30, 0x22, 0xcc, 0x7e, 0xd6, 0x3c, 0xe9, 0x35, 0x5b, 0x4d, 0xab,
	0xdf, 0xd8, 0xef, 0x5b, 0x9f, 0x95, 0x33, 0xe8, 0x1e, 0x6c, 0x86, 0x5a, 0xab, 0x65, 0x37, 0xdb,
	0xfd, 0x93, 0x9e, 0x7d, 0xd8, 0x2e, 0xeb, 0x68, 0x1b, 0x50, 0xd2, 0xad, 0xbf, 0x8f, 0xfb, 0xe5,
	0x2c, 0xba, 0x1b, 0xbd, 0x2a, 0x05, 0xde, 0x79, 0xd6, 0xc4, 0xe5, 0x1c, 0x32, 0x60, 0x2b, 0x15,
	0xe7, 0x78, 0xd0, 0xc4, 0x5f, 0x96, 0xf3, 0xea, 0x0a, 0xdc, 0x61, 0xdf, 0xea, 0xdb, 0x9d, 0x76,
	0xb9, 0x30, 0xb7, 0xc2, 0xd1, 0xa0, 0x67, 0x5b, 0xe5, 0x62, 0xfd, 0x07, 0x2d, 0x52, 0xb0, 0xb9,
	0xed, 0x91, 0x60, 0xe6, 0x0e, 0x09, 0x7a, 0x0c, 0x9b, 0x98, 0x0c, 0x89, 0x3b, 0x23, 0x6c, 0x7c,
	0xc2, 0x37, 0x2a, 0xba, 0x57, 0xbb, 0x02, 0xc5, 0xe4, 0x55, 0x65, 0x25, 0x54, 0x30, 0xd6, 0x1f,
	0xc2, 0xba, 0x94, 0x58, 0x53, 0xb8, 0xe3, 0x66, 0x2d, 0x85, 0xa4, 0x9d, 0x1a, 0x1b, 0x5f, 0xa5,
	0x5f, 0xcb, 0x2f, 0xf2, 0xfc, 0x65, 0xfb, 0xf0, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7e, 0x90,
	0x1b, 0xaf, 0x5a, 0x0f, 0x00, 0x00,
}

// This following code was generated by tarsrpc
// Gernerated from LotteryGame.proto
type LotteryGameService struct {
	s model.Servant
}

//SetServant is required by the servant interface.
func (obj *LotteryGameService) SetServant(s model.Servant) {
	obj.s = s
}

//AddServant is required by the servant interface
func (obj *LotteryGameService) AddServant(imp impLotteryGameService, objStr string) {
	tars.AddServant(obj, imp, objStr)
}

////AddServant adds servant  for the service with context
func (obj *LotteryGameService) AddServantWithContext(imp impLotteryGameServiceWithContext, objStr string) {
	tars.AddServantWithContext(obj, imp, objStr)
}

//TarsSetTimeout is required by the servant interface. t is the timeout in ms.
func (obj *LotteryGameService) TarsSetTimeout(t int) {
	obj.s.TarsSetTimeout(t)
}

//TarsSetProtocol is required by the servant interface. t is the protocol.
func (obj *LotteryGameService) TarsSetProtocol(p model.Protocol) {
	obj.s.TarsSetProtocol(p)
}

type impLotteryGameService interface {
	ReceiveUserGameData(input ReceiveUserGameDataReq) (output ReceiveRsp, err error)
	ReceiveLiveData(input ReceiveLiveDataReq) (output ReceiveRsp, err error)
}

type impLotteryGameServiceWithContext interface {
	ReceiveUserGameData(ctx context.Context, input ReceiveUserGameDataReq) (output ReceiveRsp, err error)
	ReceiveLiveData(ctx context.Context, input ReceiveLiveDataReq) (output ReceiveRsp, err error)
}

//Dispatch is used to call the user implement of the defined method.
func (obj *LotteryGameService) Dispatch(ctx context.Context, val interface{}, req *requestf.RequestPacket, resp *requestf.ResponsePacket, withContext bool) (err error) {
	input := tools.Int8ToByte(req.SBuffer)
	var output []byte
	funcName := req.SFuncName
	switch funcName {

	case "ReceiveUserGameData":
		inputDefine := ReceiveUserGameDataReq{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ReceiveRsp
		if withContext == false {
			imp := val.(impLotteryGameService)
			res, err = imp.ReceiveUserGameData(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impLotteryGameServiceWithContext)
			res, err = imp.ReceiveUserGameData(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "ReceiveLiveData":
		inputDefine := ReceiveLiveDataReq{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ReceiveRsp
		if withContext == false {
			imp := val.(impLotteryGameService)
			res, err = imp.ReceiveLiveData(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impLotteryGameServiceWithContext)
			res, err = imp.ReceiveLiveData(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	default:
		return fmt.Errorf("func mismatch")
	}
	var _status map[string]string
	s, ok := current.GetResponseStatus(ctx)
	if ok && s != nil {
		_status = s
	}
	var _context map[string]string
	c, ok := current.GetResponseContext(ctx)
	if ok && c != nil {
		_context = c
	}
	*resp = requestf.ResponsePacket{
		IVersion:     1,
		CPacketType:  0,
		IRequestId:   req.IRequestId,
		IMessageType: 0,
		IRet:         0,
		SBuffer:      tools.ByteToInt8(output),
		Status:       _status,
		SResultDesc:  "",
		Context:      _context,
	}
	return nil
}

// ReceiveUserGameData is client rpc method as defined
func (obj *LotteryGameService) ReceiveUserGameData(input ReceiveUserGameDataReq, _opt ...map[string]string) (output ReceiveRsp, err error) {
	ctx := context.Background()
	return obj.ReceiveUserGameDataWithContext(ctx, input, _opt...)
}

// ReceiveUserGameDataWithContext is client rpc method as defined
func (obj *LotteryGameService) ReceiveUserGameDataWithContext(ctx context.Context, input ReceiveUserGameDataReq, _opt ...map[string]string) (output ReceiveRsp, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "ReceiveUserGameData", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// ReceiveLiveData is client rpc method as defined
func (obj *LotteryGameService) ReceiveLiveData(input ReceiveLiveDataReq, _opt ...map[string]string) (output ReceiveRsp, err error) {
	ctx := context.Background()
	return obj.ReceiveLiveDataWithContext(ctx, input, _opt...)
}

// ReceiveLiveDataWithContext is client rpc method as defined
func (obj *LotteryGameService) ReceiveLiveDataWithContext(ctx context.Context, input ReceiveLiveDataReq, _opt ...map[string]string) (output ReceiveRsp, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "ReceiveLiveData", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}
