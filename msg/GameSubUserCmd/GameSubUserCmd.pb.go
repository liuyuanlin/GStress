// Code generated by protoc-gen-go. DO NOT EDIT.
// source: GameSubUserCmd.proto

package GameSubUserCmd

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//进入房间协议在lobby中，桌子上的功能交给SO做。
// 子命令码表
type EnSubCmdID int32

const (
	EnSubCmdID_GAME_SUB_CS_USER_LEAVE_ROOM_RQST     EnSubCmdID = 1
	EnSubCmdID_GAME_SUB_SC_USER_LEAVE_ROOM_RSP      EnSubCmdID = 2
	EnSubCmdID_GAME_SUB_CS_USER_SIT_DOWN_RQST       EnSubCmdID = 3
	EnSubCmdID_GAME_SUB_SC_USER_SIT_DOWN_RSP        EnSubCmdID = 4
	EnSubCmdID_GAME_SUB_CS_USER_SIT_UP_RQST         EnSubCmdID = 5
	EnSubCmdID_GAME_SUB_SC_USER_SIT_UP_RSP          EnSubCmdID = 6
	EnSubCmdID_GAME_SUB_CS_USER_CHANGE_TABLE_RQST   EnSubCmdID = 7
	EnSubCmdID_GAME_SUB_SC_USER_CHANGE_TABLE_RSP    EnSubCmdID = 8
	EnSubCmdID_GAME_SUB_SC_USER_ROOM_INFO_NOTIFY    EnSubCmdID = 9
	EnSubCmdID_GAME_SUB_SC_USER_ROOM_CFG_NOTIFY     EnSubCmdID = 10
	EnSubCmdID_GAME_SUB_SC_USER_FRAME_ENTER         EnSubCmdID = 11
	EnSubCmdID_GAME_SUB_SC_USER_LEAVE_ROOM_NOTIFY   EnSubCmdID = 12
	EnSubCmdID_GAME_SUB_USER_CHG_COORDINATE_CS      EnSubCmdID = 13
	EnSubCmdID_GAME_SUB_USER_CS_START_GAME          EnSubCmdID = 14
	EnSubCmdID_GAME_SUB_USER_SC_START_GAME          EnSubCmdID = 15
	EnSubCmdID_GAME_SUB_USER_SC_MATCH_RESULT_NOTIFY EnSubCmdID = 16
	EnSubCmdID_GAME_SUB_CS_STEP_OUT_ROOM_RQST       EnSubCmdID = 17
	EnSubCmdID_GAME_SUB_SC_STEP_OUT_ROOM_RSP        EnSubCmdID = 18
	EnSubCmdID_GAME_SUB_USER_SC_MATCH_RANK_NOTIFY   EnSubCmdID = 19
)

var EnSubCmdID_name = map[int32]string{
	1:  "GAME_SUB_CS_USER_LEAVE_ROOM_RQST",
	2:  "GAME_SUB_SC_USER_LEAVE_ROOM_RSP",
	3:  "GAME_SUB_CS_USER_SIT_DOWN_RQST",
	4:  "GAME_SUB_SC_USER_SIT_DOWN_RSP",
	5:  "GAME_SUB_CS_USER_SIT_UP_RQST",
	6:  "GAME_SUB_SC_USER_SIT_UP_RSP",
	7:  "GAME_SUB_CS_USER_CHANGE_TABLE_RQST",
	8:  "GAME_SUB_SC_USER_CHANGE_TABLE_RSP",
	9:  "GAME_SUB_SC_USER_ROOM_INFO_NOTIFY",
	10: "GAME_SUB_SC_USER_ROOM_CFG_NOTIFY",
	11: "GAME_SUB_SC_USER_FRAME_ENTER",
	12: "GAME_SUB_SC_USER_LEAVE_ROOM_NOTIFY",
	13: "GAME_SUB_USER_CHG_COORDINATE_CS",
	14: "GAME_SUB_USER_CS_START_GAME",
	15: "GAME_SUB_USER_SC_START_GAME",
	16: "GAME_SUB_USER_SC_MATCH_RESULT_NOTIFY",
	17: "GAME_SUB_CS_STEP_OUT_ROOM_RQST",
	18: "GAME_SUB_SC_STEP_OUT_ROOM_RSP",
	19: "GAME_SUB_USER_SC_MATCH_RANK_NOTIFY",
}

var EnSubCmdID_value = map[string]int32{
	"GAME_SUB_CS_USER_LEAVE_ROOM_RQST":     1,
	"GAME_SUB_SC_USER_LEAVE_ROOM_RSP":      2,
	"GAME_SUB_CS_USER_SIT_DOWN_RQST":       3,
	"GAME_SUB_SC_USER_SIT_DOWN_RSP":        4,
	"GAME_SUB_CS_USER_SIT_UP_RQST":         5,
	"GAME_SUB_SC_USER_SIT_UP_RSP":          6,
	"GAME_SUB_CS_USER_CHANGE_TABLE_RQST":   7,
	"GAME_SUB_SC_USER_CHANGE_TABLE_RSP":    8,
	"GAME_SUB_SC_USER_ROOM_INFO_NOTIFY":    9,
	"GAME_SUB_SC_USER_ROOM_CFG_NOTIFY":     10,
	"GAME_SUB_SC_USER_FRAME_ENTER":         11,
	"GAME_SUB_SC_USER_LEAVE_ROOM_NOTIFY":   12,
	"GAME_SUB_USER_CHG_COORDINATE_CS":      13,
	"GAME_SUB_USER_CS_START_GAME":          14,
	"GAME_SUB_USER_SC_START_GAME":          15,
	"GAME_SUB_USER_SC_MATCH_RESULT_NOTIFY": 16,
	"GAME_SUB_CS_STEP_OUT_ROOM_RQST":       17,
	"GAME_SUB_SC_STEP_OUT_ROOM_RSP":        18,
	"GAME_SUB_USER_SC_MATCH_RANK_NOTIFY":   19,
}

func (x EnSubCmdID) Enum() *EnSubCmdID {
	p := new(EnSubCmdID)
	*p = x
	return p
}

func (x EnSubCmdID) String() string {
	return proto.EnumName(EnSubCmdID_name, int32(x))
}

func (x *EnSubCmdID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnSubCmdID_value, data, "EnSubCmdID")
	if err != nil {
		return err
	}
	*x = EnSubCmdID(value)
	return nil
}

func (EnSubCmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{0}
}

type EnRoomUserState int32

const (
	EnRoomUserState_RoomUserState_None        EnRoomUserState = 0
	EnRoomUserState_RoomUserState_Waiting     EnRoomUserState = 1
	EnRoomUserState_RoomUserState_Matching    EnRoomUserState = 2
	EnRoomUserState_RoomUserState_Gaming      EnRoomUserState = 3
	EnRoomUserState_RoomUserState_GoldLess    EnRoomUserState = 4
	EnRoomUserState_RoomUserState_Wait_Gaming EnRoomUserState = 5
)

var EnRoomUserState_name = map[int32]string{
	0: "RoomUserState_None",
	1: "RoomUserState_Waiting",
	2: "RoomUserState_Matching",
	3: "RoomUserState_Gaming",
	4: "RoomUserState_GoldLess",
	5: "RoomUserState_Wait_Gaming",
}

var EnRoomUserState_value = map[string]int32{
	"RoomUserState_None":        0,
	"RoomUserState_Waiting":     1,
	"RoomUserState_Matching":    2,
	"RoomUserState_Gaming":      3,
	"RoomUserState_GoldLess":    4,
	"RoomUserState_Wait_Gaming": 5,
}

func (x EnRoomUserState) Enum() *EnRoomUserState {
	p := new(EnRoomUserState)
	*p = x
	return p
}

func (x EnRoomUserState) String() string {
	return proto.EnumName(EnRoomUserState_name, int32(x))
}

func (x *EnRoomUserState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnRoomUserState_value, data, "EnRoomUserState")
	if err != nil {
		return err
	}
	*x = EnRoomUserState(value)
	return nil
}

func (EnRoomUserState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{1}
}

type EnMatchUserState int32

const (
	EnMatchUserState_MatchUserState_None   EnMatchUserState = 0
	EnMatchUserState_MatchUserState_Wait   EnMatchUserState = 1
	EnMatchUserState_MatchUserState_Gaming EnMatchUserState = 2
	EnMatchUserState_MatchUserState_End    EnMatchUserState = 3
)

var EnMatchUserState_name = map[int32]string{
	0: "MatchUserState_None",
	1: "MatchUserState_Wait",
	2: "MatchUserState_Gaming",
	3: "MatchUserState_End",
}

var EnMatchUserState_value = map[string]int32{
	"MatchUserState_None":   0,
	"MatchUserState_Wait":   1,
	"MatchUserState_Gaming": 2,
	"MatchUserState_End":    3,
}

func (x EnMatchUserState) Enum() *EnMatchUserState {
	p := new(EnMatchUserState)
	*p = x
	return p
}

func (x EnMatchUserState) String() string {
	return proto.EnumName(EnMatchUserState_name, int32(x))
}

func (x *EnMatchUserState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnMatchUserState_value, data, "EnMatchUserState")
	if err != nil {
		return err
	}
	*x = EnMatchUserState(value)
	return nil
}

func (EnMatchUserState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{2}
}

//GAME_SUB_CS_STEP_OUT_ROOM_RQST				= 17;	//玩家请求暂离房间
type GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG struct {
	RoomId               *int32   `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG) Reset()         { *m = GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG{} }
func (m *GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG) ProtoMessage()    {}
func (*GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{0}
}

func (m *GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG.Merge(m, src)
}
func (m *GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG.Size(m)
}
func (m *GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG proto.InternalMessageInfo

func (m *GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

//GAME_SUB_SC_USER_LEAVE_ROOM_RSP			= 18;	//玩家请求暂离房间返回
type GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG struct {
	ResultCode           *int32   `protobuf:"varint,1,req,name=ResultCode" json:"ResultCode,omitempty"`
	RoomId               *int32   `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG) Reset()         { *m = GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG{} }
func (m *GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG) ProtoMessage()    {}
func (*GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{1}
}

func (m *GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG.Merge(m, src)
}
func (m *GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG.Size(m)
}
func (m *GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG proto.InternalMessageInfo

func (m *GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

//GAME_SUB_CS_USER_LEAVE_ROOM_RQST				= 1;	//离开房间请求
type CSUserLeaveRoomRqst struct {
	RoomId               *int32   `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSUserLeaveRoomRqst) Reset()         { *m = CSUserLeaveRoomRqst{} }
func (m *CSUserLeaveRoomRqst) String() string { return proto.CompactTextString(m) }
func (*CSUserLeaveRoomRqst) ProtoMessage()    {}
func (*CSUserLeaveRoomRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{2}
}

func (m *CSUserLeaveRoomRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSUserLeaveRoomRqst.Unmarshal(m, b)
}
func (m *CSUserLeaveRoomRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSUserLeaveRoomRqst.Marshal(b, m, deterministic)
}
func (m *CSUserLeaveRoomRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSUserLeaveRoomRqst.Merge(m, src)
}
func (m *CSUserLeaveRoomRqst) XXX_Size() int {
	return xxx_messageInfo_CSUserLeaveRoomRqst.Size(m)
}
func (m *CSUserLeaveRoomRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_CSUserLeaveRoomRqst.DiscardUnknown(m)
}

var xxx_messageInfo_CSUserLeaveRoomRqst proto.InternalMessageInfo

func (m *CSUserLeaveRoomRqst) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

//GAME_SUB_SC_USER_LEAVE_ROOM_RSP			= 2;	//离开房间响应
type SCUserLeaveRoomRsp struct {
	ResultCode           *int32   `protobuf:"varint,1,req,name=ResultCode" json:"ResultCode,omitempty"`
	RoomId               *int32   `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SCUserLeaveRoomRsp) Reset()         { *m = SCUserLeaveRoomRsp{} }
func (m *SCUserLeaveRoomRsp) String() string { return proto.CompactTextString(m) }
func (*SCUserLeaveRoomRsp) ProtoMessage()    {}
func (*SCUserLeaveRoomRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{3}
}

func (m *SCUserLeaveRoomRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SCUserLeaveRoomRsp.Unmarshal(m, b)
}
func (m *SCUserLeaveRoomRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SCUserLeaveRoomRsp.Marshal(b, m, deterministic)
}
func (m *SCUserLeaveRoomRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SCUserLeaveRoomRsp.Merge(m, src)
}
func (m *SCUserLeaveRoomRsp) XXX_Size() int {
	return xxx_messageInfo_SCUserLeaveRoomRsp.Size(m)
}
func (m *SCUserLeaveRoomRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_SCUserLeaveRoomRsp.DiscardUnknown(m)
}

var xxx_messageInfo_SCUserLeaveRoomRsp proto.InternalMessageInfo

func (m *SCUserLeaveRoomRsp) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *SCUserLeaveRoomRsp) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

//GAME_SUB_CS_USER_SIT_DOWN_RQST			= 3;	//请求坐下请求
type CSUserSitDownRqst struct {
	RoomId               *int32   `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	TableId              *int32   `protobuf:"varint,2,req,name=TableId" json:"TableId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSUserSitDownRqst) Reset()         { *m = CSUserSitDownRqst{} }
func (m *CSUserSitDownRqst) String() string { return proto.CompactTextString(m) }
func (*CSUserSitDownRqst) ProtoMessage()    {}
func (*CSUserSitDownRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{4}
}

func (m *CSUserSitDownRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSUserSitDownRqst.Unmarshal(m, b)
}
func (m *CSUserSitDownRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSUserSitDownRqst.Marshal(b, m, deterministic)
}
func (m *CSUserSitDownRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSUserSitDownRqst.Merge(m, src)
}
func (m *CSUserSitDownRqst) XXX_Size() int {
	return xxx_messageInfo_CSUserSitDownRqst.Size(m)
}
func (m *CSUserSitDownRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_CSUserSitDownRqst.DiscardUnknown(m)
}

var xxx_messageInfo_CSUserSitDownRqst proto.InternalMessageInfo

func (m *CSUserSitDownRqst) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserSitDownRqst) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

//GAME_SUB_SC_USER_SIT_DOWN_RSP			= 4;	//请求坐下响应
type CSUserSitDownRsp struct {
	ResultCode           *int32   `protobuf:"varint,1,req,name=ResultCode" json:"ResultCode,omitempty"`
	RoomId               *int32   `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	KindId               *int32   `protobuf:"varint,3,req,name=KindId" json:"KindId,omitempty"`
	TalbeId              *int32   `protobuf:"varint,4,opt,name=TalbeId" json:"TalbeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSUserSitDownRsp) Reset()         { *m = CSUserSitDownRsp{} }
func (m *CSUserSitDownRsp) String() string { return proto.CompactTextString(m) }
func (*CSUserSitDownRsp) ProtoMessage()    {}
func (*CSUserSitDownRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{5}
}

func (m *CSUserSitDownRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSUserSitDownRsp.Unmarshal(m, b)
}
func (m *CSUserSitDownRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSUserSitDownRsp.Marshal(b, m, deterministic)
}
func (m *CSUserSitDownRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSUserSitDownRsp.Merge(m, src)
}
func (m *CSUserSitDownRsp) XXX_Size() int {
	return xxx_messageInfo_CSUserSitDownRsp.Size(m)
}
func (m *CSUserSitDownRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CSUserSitDownRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CSUserSitDownRsp proto.InternalMessageInfo

func (m *CSUserSitDownRsp) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *CSUserSitDownRsp) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserSitDownRsp) GetKindId() int32 {
	if m != nil && m.KindId != nil {
		return *m.KindId
	}
	return 0
}

func (m *CSUserSitDownRsp) GetTalbeId() int32 {
	if m != nil && m.TalbeId != nil {
		return *m.TalbeId
	}
	return 0
}

//GAME_SUB_CS_USER_SIT_UP_RQST			= 5;	//请求起立请求
type CSUserSitUpRqst struct {
	RoomId               *int32   `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	TableId              *int32   `protobuf:"varint,2,req,name=TableId" json:"TableId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSUserSitUpRqst) Reset()         { *m = CSUserSitUpRqst{} }
func (m *CSUserSitUpRqst) String() string { return proto.CompactTextString(m) }
func (*CSUserSitUpRqst) ProtoMessage()    {}
func (*CSUserSitUpRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{6}
}

func (m *CSUserSitUpRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSUserSitUpRqst.Unmarshal(m, b)
}
func (m *CSUserSitUpRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSUserSitUpRqst.Marshal(b, m, deterministic)
}
func (m *CSUserSitUpRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSUserSitUpRqst.Merge(m, src)
}
func (m *CSUserSitUpRqst) XXX_Size() int {
	return xxx_messageInfo_CSUserSitUpRqst.Size(m)
}
func (m *CSUserSitUpRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_CSUserSitUpRqst.DiscardUnknown(m)
}

var xxx_messageInfo_CSUserSitUpRqst proto.InternalMessageInfo

func (m *CSUserSitUpRqst) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserSitUpRqst) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

//GAME_SUB_SC_USER_SIT_UP_RSP				= 6;	//请求起立响应
type CSUserSitUpRsp struct {
	ResultCode           *int32   `protobuf:"varint,1,req,name=ResultCode" json:"ResultCode,omitempty"`
	RoomId               *int32   `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	TalbeId              *int32   `protobuf:"varint,3,opt,name=TalbeId" json:"TalbeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSUserSitUpRsp) Reset()         { *m = CSUserSitUpRsp{} }
func (m *CSUserSitUpRsp) String() string { return proto.CompactTextString(m) }
func (*CSUserSitUpRsp) ProtoMessage()    {}
func (*CSUserSitUpRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{7}
}

func (m *CSUserSitUpRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSUserSitUpRsp.Unmarshal(m, b)
}
func (m *CSUserSitUpRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSUserSitUpRsp.Marshal(b, m, deterministic)
}
func (m *CSUserSitUpRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSUserSitUpRsp.Merge(m, src)
}
func (m *CSUserSitUpRsp) XXX_Size() int {
	return xxx_messageInfo_CSUserSitUpRsp.Size(m)
}
func (m *CSUserSitUpRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CSUserSitUpRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CSUserSitUpRsp proto.InternalMessageInfo

func (m *CSUserSitUpRsp) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *CSUserSitUpRsp) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserSitUpRsp) GetTalbeId() int32 {
	if m != nil && m.TalbeId != nil {
		return *m.TalbeId
	}
	return 0
}

//GAME_SUB_CS_USER_CHANGE_TABLE_RQST			= 7;	//用户换桌请求
type CSUserChangeTableRqst struct {
	RoomId               *int32   `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSUserChangeTableRqst) Reset()         { *m = CSUserChangeTableRqst{} }
func (m *CSUserChangeTableRqst) String() string { return proto.CompactTextString(m) }
func (*CSUserChangeTableRqst) ProtoMessage()    {}
func (*CSUserChangeTableRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{8}
}

func (m *CSUserChangeTableRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSUserChangeTableRqst.Unmarshal(m, b)
}
func (m *CSUserChangeTableRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSUserChangeTableRqst.Marshal(b, m, deterministic)
}
func (m *CSUserChangeTableRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSUserChangeTableRqst.Merge(m, src)
}
func (m *CSUserChangeTableRqst) XXX_Size() int {
	return xxx_messageInfo_CSUserChangeTableRqst.Size(m)
}
func (m *CSUserChangeTableRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_CSUserChangeTableRqst.DiscardUnknown(m)
}

var xxx_messageInfo_CSUserChangeTableRqst proto.InternalMessageInfo

func (m *CSUserChangeTableRqst) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

//GAME_SUB_SC_USER_CHANGE_TABLE_RSP		= 8;	//用户换桌响应
type CSUserChangeTableRsp struct {
	ResultCode           *int32   `protobuf:"varint,1,req,name=ResultCode" json:"ResultCode,omitempty"`
	RoomId               *int32   `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSUserChangeTableRsp) Reset()         { *m = CSUserChangeTableRsp{} }
func (m *CSUserChangeTableRsp) String() string { return proto.CompactTextString(m) }
func (*CSUserChangeTableRsp) ProtoMessage()    {}
func (*CSUserChangeTableRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{9}
}

func (m *CSUserChangeTableRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSUserChangeTableRsp.Unmarshal(m, b)
}
func (m *CSUserChangeTableRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSUserChangeTableRsp.Marshal(b, m, deterministic)
}
func (m *CSUserChangeTableRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSUserChangeTableRsp.Merge(m, src)
}
func (m *CSUserChangeTableRsp) XXX_Size() int {
	return xxx_messageInfo_CSUserChangeTableRsp.Size(m)
}
func (m *CSUserChangeTableRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CSUserChangeTableRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CSUserChangeTableRsp proto.InternalMessageInfo

func (m *CSUserChangeTableRsp) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *CSUserChangeTableRsp) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

//比赛信息
type MMatchInfo struct {
	MMatchTypeId         *int32            `protobuf:"varint,1,req,name=mMatchTypeId" json:"mMatchTypeId,omitempty"`
	MMatchGameId         *int32            `protobuf:"varint,2,req,name=mMatchGameId" json:"mMatchGameId,omitempty"`
	MUserMatchState      *EnMatchUserState `protobuf:"varint,3,req,name=mUserMatchState,enum=GameSubUserCmd.EnMatchUserState" json:"mUserMatchState,omitempty"`
	MCurRoundCount       *int32            `protobuf:"varint,4,req,name=mCurRoundCount" json:"mCurRoundCount,omitempty"`
	MWaitMatchTime       *int32            `protobuf:"varint,5,req,name=mWaitMatchTime" json:"mWaitMatchTime,omitempty"`
	MAllRoundCount       *uint32           `protobuf:"varint,6,req,name=mAllRoundCount" json:"mAllRoundCount,omitempty"`
	MAllGameCount        *uint32           `protobuf:"varint,7,req,name=mAllGameCount" json:"mAllGameCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MMatchInfo) Reset()         { *m = MMatchInfo{} }
func (m *MMatchInfo) String() string { return proto.CompactTextString(m) }
func (*MMatchInfo) ProtoMessage()    {}
func (*MMatchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{10}
}

func (m *MMatchInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MMatchInfo.Unmarshal(m, b)
}
func (m *MMatchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MMatchInfo.Marshal(b, m, deterministic)
}
func (m *MMatchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MMatchInfo.Merge(m, src)
}
func (m *MMatchInfo) XXX_Size() int {
	return xxx_messageInfo_MMatchInfo.Size(m)
}
func (m *MMatchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MMatchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MMatchInfo proto.InternalMessageInfo

func (m *MMatchInfo) GetMMatchTypeId() int32 {
	if m != nil && m.MMatchTypeId != nil {
		return *m.MMatchTypeId
	}
	return 0
}

func (m *MMatchInfo) GetMMatchGameId() int32 {
	if m != nil && m.MMatchGameId != nil {
		return *m.MMatchGameId
	}
	return 0
}

func (m *MMatchInfo) GetMUserMatchState() EnMatchUserState {
	if m != nil && m.MUserMatchState != nil {
		return *m.MUserMatchState
	}
	return EnMatchUserState_MatchUserState_None
}

func (m *MMatchInfo) GetMCurRoundCount() int32 {
	if m != nil && m.MCurRoundCount != nil {
		return *m.MCurRoundCount
	}
	return 0
}

func (m *MMatchInfo) GetMWaitMatchTime() int32 {
	if m != nil && m.MWaitMatchTime != nil {
		return *m.MWaitMatchTime
	}
	return 0
}

func (m *MMatchInfo) GetMAllRoundCount() uint32 {
	if m != nil && m.MAllRoundCount != nil {
		return *m.MAllRoundCount
	}
	return 0
}

func (m *MMatchInfo) GetMAllGameCount() uint32 {
	if m != nil && m.MAllGameCount != nil {
		return *m.MAllGameCount
	}
	return 0
}

//GAME_SUB_SC_USER_ROOM_INFO_NOTIFY		= 9;	//房间信息通知
type CSUserRoomInfoNotify struct {
	RoomId               *int32           `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	KindId               *int32           `protobuf:"varint,2,req,name=KindId" json:"KindId,omitempty"`
	TalbeId              *int32           `protobuf:"varint,3,opt,name=TalbeId" json:"TalbeId,omitempty"`
	ChairCount           *int32           `protobuf:"varint,4,opt,name=ChairCount" json:"ChairCount,omitempty"`
	RemiandMatchTime     *int32           `protobuf:"varint,5,opt,name=RemiandMatchTime" json:"RemiandMatchTime,omitempty"`
	UserState            *EnRoomUserState `protobuf:"varint,6,opt,name=UserState,enum=GameSubUserCmd.EnRoomUserState" json:"UserState,omitempty"`
	MUserMatchInfo       *MMatchInfo      `protobuf:"bytes,7,opt,name=mUserMatchInfo" json:"mUserMatchInfo,omitempty"`
	RoomType             *int32           `protobuf:"varint,8,req,name=RoomType" json:"RoomType,omitempty"`
	IBaseScore           *int32           `protobuf:"varint,9,req,name=iBaseScore" json:"iBaseScore,omitempty"`
	IMaxScore            *int32           `protobuf:"varint,10,req,name=iMaxScore" json:"iMaxScore,omitempty"`
	IServerRate          *int32           `protobuf:"varint,11,req,name=iServerRate" json:"iServerRate,omitempty"`
	IBackGold            *int64           `protobuf:"varint,12,opt,name=iBackGold" json:"iBackGold,omitempty"`
	IBackExpire          *int32           `protobuf:"varint,13,opt,name=iBackExpire" json:"iBackExpire,omitempty"`
	IGold                *uint64          `protobuf:"varint,14,opt,name=iGold" json:"iGold,omitempty"`
	IJPQTm               *int64           `protobuf:"varint,15,opt,name=iJPQTm" json:"iJPQTm,omitempty"`
	IJPQCount            *int32           `protobuf:"varint,16,opt,name=iJPQCount" json:"iJPQCount,omitempty"`
	ISuperCard           *int32           `protobuf:"varint,17,opt,name=iSuperCard" json:"iSuperCard,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CSUserRoomInfoNotify) Reset()         { *m = CSUserRoomInfoNotify{} }
func (m *CSUserRoomInfoNotify) String() string { return proto.CompactTextString(m) }
func (*CSUserRoomInfoNotify) ProtoMessage()    {}
func (*CSUserRoomInfoNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{11}
}

func (m *CSUserRoomInfoNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSUserRoomInfoNotify.Unmarshal(m, b)
}
func (m *CSUserRoomInfoNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSUserRoomInfoNotify.Marshal(b, m, deterministic)
}
func (m *CSUserRoomInfoNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSUserRoomInfoNotify.Merge(m, src)
}
func (m *CSUserRoomInfoNotify) XXX_Size() int {
	return xxx_messageInfo_CSUserRoomInfoNotify.Size(m)
}
func (m *CSUserRoomInfoNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_CSUserRoomInfoNotify.DiscardUnknown(m)
}

var xxx_messageInfo_CSUserRoomInfoNotify proto.InternalMessageInfo

func (m *CSUserRoomInfoNotify) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetKindId() int32 {
	if m != nil && m.KindId != nil {
		return *m.KindId
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetTalbeId() int32 {
	if m != nil && m.TalbeId != nil {
		return *m.TalbeId
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetChairCount() int32 {
	if m != nil && m.ChairCount != nil {
		return *m.ChairCount
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetRemiandMatchTime() int32 {
	if m != nil && m.RemiandMatchTime != nil {
		return *m.RemiandMatchTime
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetUserState() EnRoomUserState {
	if m != nil && m.UserState != nil {
		return *m.UserState
	}
	return EnRoomUserState_RoomUserState_None
}

func (m *CSUserRoomInfoNotify) GetMUserMatchInfo() *MMatchInfo {
	if m != nil {
		return m.MUserMatchInfo
	}
	return nil
}

func (m *CSUserRoomInfoNotify) GetRoomType() int32 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetIBaseScore() int32 {
	if m != nil && m.IBaseScore != nil {
		return *m.IBaseScore
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetIMaxScore() int32 {
	if m != nil && m.IMaxScore != nil {
		return *m.IMaxScore
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetIServerRate() int32 {
	if m != nil && m.IServerRate != nil {
		return *m.IServerRate
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetIBackGold() int64 {
	if m != nil && m.IBackGold != nil {
		return *m.IBackGold
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetIBackExpire() int32 {
	if m != nil && m.IBackExpire != nil {
		return *m.IBackExpire
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetIGold() uint64 {
	if m != nil && m.IGold != nil {
		return *m.IGold
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetIJPQTm() int64 {
	if m != nil && m.IJPQTm != nil {
		return *m.IJPQTm
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetIJPQCount() int32 {
	if m != nil && m.IJPQCount != nil {
		return *m.IJPQCount
	}
	return 0
}

func (m *CSUserRoomInfoNotify) GetISuperCard() int32 {
	if m != nil && m.ISuperCard != nil {
		return *m.ISuperCard
	}
	return 0
}

//GAME_SUB_SC_USER_ROOM_CFG_NOTIFY		= 10;	//房间配置通知
type CSUserRoomCfgNotify struct {
	RoomId               *int32   `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSUserRoomCfgNotify) Reset()         { *m = CSUserRoomCfgNotify{} }
func (m *CSUserRoomCfgNotify) String() string { return proto.CompactTextString(m) }
func (*CSUserRoomCfgNotify) ProtoMessage()    {}
func (*CSUserRoomCfgNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{12}
}

func (m *CSUserRoomCfgNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSUserRoomCfgNotify.Unmarshal(m, b)
}
func (m *CSUserRoomCfgNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSUserRoomCfgNotify.Marshal(b, m, deterministic)
}
func (m *CSUserRoomCfgNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSUserRoomCfgNotify.Merge(m, src)
}
func (m *CSUserRoomCfgNotify) XXX_Size() int {
	return xxx_messageInfo_CSUserRoomCfgNotify.Size(m)
}
func (m *CSUserRoomCfgNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_CSUserRoomCfgNotify.DiscardUnknown(m)
}

var xxx_messageInfo_CSUserRoomCfgNotify proto.InternalMessageInfo

func (m *CSUserRoomCfgNotify) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

//GAME_SUB_SC_USER_FRAME_ENTER		= 11;	//客户端资源加载完成，通知客户端桌子上下文信息。
type CSUserFrameEnter struct {
	RoomId               *int32   `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSUserFrameEnter) Reset()         { *m = CSUserFrameEnter{} }
func (m *CSUserFrameEnter) String() string { return proto.CompactTextString(m) }
func (*CSUserFrameEnter) ProtoMessage()    {}
func (*CSUserFrameEnter) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{13}
}

func (m *CSUserFrameEnter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSUserFrameEnter.Unmarshal(m, b)
}
func (m *CSUserFrameEnter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSUserFrameEnter.Marshal(b, m, deterministic)
}
func (m *CSUserFrameEnter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSUserFrameEnter.Merge(m, src)
}
func (m *CSUserFrameEnter) XXX_Size() int {
	return xxx_messageInfo_CSUserFrameEnter.Size(m)
}
func (m *CSUserFrameEnter) XXX_DiscardUnknown() {
	xxx_messageInfo_CSUserFrameEnter.DiscardUnknown(m)
}

var xxx_messageInfo_CSUserFrameEnter proto.InternalMessageInfo

func (m *CSUserFrameEnter) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

//GAME_SUB_SC_USER_LEAVE_ROOM_NOTIFY			= 12;	//离开房间通知
type SCUserLeaveRoomNotify struct {
	RoomId               *int32   `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	TableId              *int32   `protobuf:"varint,2,req,name=TableId" json:"TableId,omitempty"`
	IsKick               *bool    `protobuf:"varint,3,req,name=IsKick" json:"IsKick,omitempty"`
	KickReason           *string  `protobuf:"bytes,4,opt,name=KickReason" json:"KickReason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SCUserLeaveRoomNotify) Reset()         { *m = SCUserLeaveRoomNotify{} }
func (m *SCUserLeaveRoomNotify) String() string { return proto.CompactTextString(m) }
func (*SCUserLeaveRoomNotify) ProtoMessage()    {}
func (*SCUserLeaveRoomNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{14}
}

func (m *SCUserLeaveRoomNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SCUserLeaveRoomNotify.Unmarshal(m, b)
}
func (m *SCUserLeaveRoomNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SCUserLeaveRoomNotify.Marshal(b, m, deterministic)
}
func (m *SCUserLeaveRoomNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SCUserLeaveRoomNotify.Merge(m, src)
}
func (m *SCUserLeaveRoomNotify) XXX_Size() int {
	return xxx_messageInfo_SCUserLeaveRoomNotify.Size(m)
}
func (m *SCUserLeaveRoomNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SCUserLeaveRoomNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SCUserLeaveRoomNotify proto.InternalMessageInfo

func (m *SCUserLeaveRoomNotify) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *SCUserLeaveRoomNotify) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *SCUserLeaveRoomNotify) GetIsKick() bool {
	if m != nil && m.IsKick != nil {
		return *m.IsKick
	}
	return false
}

func (m *SCUserLeaveRoomNotify) GetKickReason() string {
	if m != nil && m.KickReason != nil {
		return *m.KickReason
	}
	return ""
}

type DDZ_TotalRecord struct {
	IMaxMutipler         *int32   `protobuf:"varint,1,req,name=iMaxMutipler" json:"iMaxMutipler,omitempty"`
	IBoomCnt             *int32   `protobuf:"varint,2,req,name=iBoomCnt" json:"iBoomCnt,omitempty"`
	IWinTimes            *int32   `protobuf:"varint,3,req,name=iWinTimes" json:"iWinTimes,omitempty"`
	ISpringTimes         *int32   `protobuf:"varint,4,req,name=iSpringTimes" json:"iSpringTimes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DDZ_TotalRecord) Reset()         { *m = DDZ_TotalRecord{} }
func (m *DDZ_TotalRecord) String() string { return proto.CompactTextString(m) }
func (*DDZ_TotalRecord) ProtoMessage()    {}
func (*DDZ_TotalRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{15}
}

func (m *DDZ_TotalRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DDZ_TotalRecord.Unmarshal(m, b)
}
func (m *DDZ_TotalRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DDZ_TotalRecord.Marshal(b, m, deterministic)
}
func (m *DDZ_TotalRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DDZ_TotalRecord.Merge(m, src)
}
func (m *DDZ_TotalRecord) XXX_Size() int {
	return xxx_messageInfo_DDZ_TotalRecord.Size(m)
}
func (m *DDZ_TotalRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_DDZ_TotalRecord.DiscardUnknown(m)
}

var xxx_messageInfo_DDZ_TotalRecord proto.InternalMessageInfo

func (m *DDZ_TotalRecord) GetIMaxMutipler() int32 {
	if m != nil && m.IMaxMutipler != nil {
		return *m.IMaxMutipler
	}
	return 0
}

func (m *DDZ_TotalRecord) GetIBoomCnt() int32 {
	if m != nil && m.IBoomCnt != nil {
		return *m.IBoomCnt
	}
	return 0
}

func (m *DDZ_TotalRecord) GetIWinTimes() int32 {
	if m != nil && m.IWinTimes != nil {
		return *m.IWinTimes
	}
	return 0
}

func (m *DDZ_TotalRecord) GetISpringTimes() int32 {
	if m != nil && m.ISpringTimes != nil {
		return *m.ISpringTimes
	}
	return 0
}

type XZMMjUserOperateDetail struct {
	MSeatId              *uint32  `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MUserId              *uint32  `protobuf:"varint,2,req,name=mUserId" json:"mUserId,omitempty"`
	MZiMoCount           *uint32  `protobuf:"varint,3,opt,name=mZiMoCount" json:"mZiMoCount,omitempty"`
	MJiePaoCount         *uint32  `protobuf:"varint,4,opt,name=mJiePaoCount" json:"mJiePaoCount,omitempty"`
	MDianPaoCount        *uint32  `protobuf:"varint,5,opt,name=mDianPaoCount" json:"mDianPaoCount,omitempty"`
	MAnGangCount         *uint32  `protobuf:"varint,6,opt,name=mAnGangCount" json:"mAnGangCount,omitempty"`
	MMingAndBuGangCount  *uint32  `protobuf:"varint,7,opt,name=mMingAndBuGangCount" json:"mMingAndBuGangCount,omitempty"`
	MChaJiaoCount        *uint32  `protobuf:"varint,8,opt,name=mChaJiaoCount" json:"mChaJiaoCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XZMMjUserOperateDetail) Reset()         { *m = XZMMjUserOperateDetail{} }
func (m *XZMMjUserOperateDetail) String() string { return proto.CompactTextString(m) }
func (*XZMMjUserOperateDetail) ProtoMessage()    {}
func (*XZMMjUserOperateDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{16}
}

func (m *XZMMjUserOperateDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XZMMjUserOperateDetail.Unmarshal(m, b)
}
func (m *XZMMjUserOperateDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XZMMjUserOperateDetail.Marshal(b, m, deterministic)
}
func (m *XZMMjUserOperateDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XZMMjUserOperateDetail.Merge(m, src)
}
func (m *XZMMjUserOperateDetail) XXX_Size() int {
	return xxx_messageInfo_XZMMjUserOperateDetail.Size(m)
}
func (m *XZMMjUserOperateDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_XZMMjUserOperateDetail.DiscardUnknown(m)
}

var xxx_messageInfo_XZMMjUserOperateDetail proto.InternalMessageInfo

func (m *XZMMjUserOperateDetail) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *XZMMjUserOperateDetail) GetMUserId() uint32 {
	if m != nil && m.MUserId != nil {
		return *m.MUserId
	}
	return 0
}

func (m *XZMMjUserOperateDetail) GetMZiMoCount() uint32 {
	if m != nil && m.MZiMoCount != nil {
		return *m.MZiMoCount
	}
	return 0
}

func (m *XZMMjUserOperateDetail) GetMJiePaoCount() uint32 {
	if m != nil && m.MJiePaoCount != nil {
		return *m.MJiePaoCount
	}
	return 0
}

func (m *XZMMjUserOperateDetail) GetMDianPaoCount() uint32 {
	if m != nil && m.MDianPaoCount != nil {
		return *m.MDianPaoCount
	}
	return 0
}

func (m *XZMMjUserOperateDetail) GetMAnGangCount() uint32 {
	if m != nil && m.MAnGangCount != nil {
		return *m.MAnGangCount
	}
	return 0
}

func (m *XZMMjUserOperateDetail) GetMMingAndBuGangCount() uint32 {
	if m != nil && m.MMingAndBuGangCount != nil {
		return *m.MMingAndBuGangCount
	}
	return 0
}

func (m *XZMMjUserOperateDetail) GetMChaJiaoCount() uint32 {
	if m != nil && m.MChaJiaoCount != nil {
		return *m.MChaJiaoCount
	}
	return 0
}

type YB_MMjUserOperateDetail struct {
	MSeatId              *uint32  `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MUserId              *uint32  `protobuf:"varint,2,req,name=mUserId" json:"mUserId,omitempty"`
	MZiMoCount           *uint32  `protobuf:"varint,3,opt,name=mZiMoCount" json:"mZiMoCount,omitempty"`
	MJiePaoCount         *uint32  `protobuf:"varint,4,opt,name=mJiePaoCount" json:"mJiePaoCount,omitempty"`
	MDianPaoCount        *uint32  `protobuf:"varint,5,opt,name=mDianPaoCount" json:"mDianPaoCount,omitempty"`
	MGangCount           *uint32  `protobuf:"varint,6,opt,name=mGangCount" json:"mGangCount,omitempty"`
	MPiaoCount           *uint32  `protobuf:"varint,7,opt,name=mPiaoCount" json:"mPiaoCount,omitempty"`
	MChaJiaoCount        *uint32  `protobuf:"varint,8,opt,name=mChaJiaoCount" json:"mChaJiaoCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YB_MMjUserOperateDetail) Reset()         { *m = YB_MMjUserOperateDetail{} }
func (m *YB_MMjUserOperateDetail) String() string { return proto.CompactTextString(m) }
func (*YB_MMjUserOperateDetail) ProtoMessage()    {}
func (*YB_MMjUserOperateDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{17}
}

func (m *YB_MMjUserOperateDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YB_MMjUserOperateDetail.Unmarshal(m, b)
}
func (m *YB_MMjUserOperateDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YB_MMjUserOperateDetail.Marshal(b, m, deterministic)
}
func (m *YB_MMjUserOperateDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YB_MMjUserOperateDetail.Merge(m, src)
}
func (m *YB_MMjUserOperateDetail) XXX_Size() int {
	return xxx_messageInfo_YB_MMjUserOperateDetail.Size(m)
}
func (m *YB_MMjUserOperateDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_YB_MMjUserOperateDetail.DiscardUnknown(m)
}

var xxx_messageInfo_YB_MMjUserOperateDetail proto.InternalMessageInfo

func (m *YB_MMjUserOperateDetail) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *YB_MMjUserOperateDetail) GetMUserId() uint32 {
	if m != nil && m.MUserId != nil {
		return *m.MUserId
	}
	return 0
}

func (m *YB_MMjUserOperateDetail) GetMZiMoCount() uint32 {
	if m != nil && m.MZiMoCount != nil {
		return *m.MZiMoCount
	}
	return 0
}

func (m *YB_MMjUserOperateDetail) GetMJiePaoCount() uint32 {
	if m != nil && m.MJiePaoCount != nil {
		return *m.MJiePaoCount
	}
	return 0
}

func (m *YB_MMjUserOperateDetail) GetMDianPaoCount() uint32 {
	if m != nil && m.MDianPaoCount != nil {
		return *m.MDianPaoCount
	}
	return 0
}

func (m *YB_MMjUserOperateDetail) GetMGangCount() uint32 {
	if m != nil && m.MGangCount != nil {
		return *m.MGangCount
	}
	return 0
}

func (m *YB_MMjUserOperateDetail) GetMPiaoCount() uint32 {
	if m != nil && m.MPiaoCount != nil {
		return *m.MPiaoCount
	}
	return 0
}

func (m *YB_MMjUserOperateDetail) GetMChaJiaoCount() uint32 {
	if m != nil && m.MChaJiaoCount != nil {
		return *m.MChaJiaoCount
	}
	return 0
}

//客户端不希望在战绩界面加载游戏的协议所以这里要拷贝一份游戏的detail过来
//note:要改消息名字
type XCPDK_MCardUserOperateDetail struct {
	MSeatId              *uint32  `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MUserId              *uint32  `protobuf:"varint,2,req,name=mUserId" json:"mUserId,omitempty"`
	MWinCount            *uint32  `protobuf:"varint,3,opt,name=mWinCount" json:"mWinCount,omitempty"`
	MBanYaCount          *uint32  `protobuf:"varint,4,opt,name=mBanYaCount" json:"mBanYaCount,omitempty"`
	MBaoDanCount         *uint32  `protobuf:"varint,5,opt,name=mBaoDanCount" json:"mBaoDanCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XCPDK_MCardUserOperateDetail) Reset()         { *m = XCPDK_MCardUserOperateDetail{} }
func (m *XCPDK_MCardUserOperateDetail) String() string { return proto.CompactTextString(m) }
func (*XCPDK_MCardUserOperateDetail) ProtoMessage()    {}
func (*XCPDK_MCardUserOperateDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{18}
}

func (m *XCPDK_MCardUserOperateDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XCPDK_MCardUserOperateDetail.Unmarshal(m, b)
}
func (m *XCPDK_MCardUserOperateDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XCPDK_MCardUserOperateDetail.Marshal(b, m, deterministic)
}
func (m *XCPDK_MCardUserOperateDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XCPDK_MCardUserOperateDetail.Merge(m, src)
}
func (m *XCPDK_MCardUserOperateDetail) XXX_Size() int {
	return xxx_messageInfo_XCPDK_MCardUserOperateDetail.Size(m)
}
func (m *XCPDK_MCardUserOperateDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_XCPDK_MCardUserOperateDetail.DiscardUnknown(m)
}

var xxx_messageInfo_XCPDK_MCardUserOperateDetail proto.InternalMessageInfo

func (m *XCPDK_MCardUserOperateDetail) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *XCPDK_MCardUserOperateDetail) GetMUserId() uint32 {
	if m != nil && m.MUserId != nil {
		return *m.MUserId
	}
	return 0
}

func (m *XCPDK_MCardUserOperateDetail) GetMWinCount() uint32 {
	if m != nil && m.MWinCount != nil {
		return *m.MWinCount
	}
	return 0
}

func (m *XCPDK_MCardUserOperateDetail) GetMBanYaCount() uint32 {
	if m != nil && m.MBanYaCount != nil {
		return *m.MBanYaCount
	}
	return 0
}

func (m *XCPDK_MCardUserOperateDetail) GetMBaoDanCount() uint32 {
	if m != nil && m.MBaoDanCount != nil {
		return *m.MBaoDanCount
	}
	return 0
}

type MPlayerInfo struct {
	MUserID              *int32   `protobuf:"varint,1,req,name=mUserID" json:"mUserID,omitempty"`
	MAccid               *int32   `protobuf:"varint,2,req,name=mAccid" json:"mAccid,omitempty"`
	MNickName            *string  `protobuf:"bytes,3,req,name=mNickName" json:"mNickName,omitempty"`
	MFaceID              *string  `protobuf:"bytes,4,req,name=mFaceID" json:"mFaceID,omitempty"`
	MVipType             *int32   `protobuf:"varint,5,opt,name=mVipType" json:"mVipType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MPlayerInfo) Reset()         { *m = MPlayerInfo{} }
func (m *MPlayerInfo) String() string { return proto.CompactTextString(m) }
func (*MPlayerInfo) ProtoMessage()    {}
func (*MPlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{19}
}

func (m *MPlayerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MPlayerInfo.Unmarshal(m, b)
}
func (m *MPlayerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MPlayerInfo.Marshal(b, m, deterministic)
}
func (m *MPlayerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MPlayerInfo.Merge(m, src)
}
func (m *MPlayerInfo) XXX_Size() int {
	return xxx_messageInfo_MPlayerInfo.Size(m)
}
func (m *MPlayerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MPlayerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MPlayerInfo proto.InternalMessageInfo

func (m *MPlayerInfo) GetMUserID() int32 {
	if m != nil && m.MUserID != nil {
		return *m.MUserID
	}
	return 0
}

func (m *MPlayerInfo) GetMAccid() int32 {
	if m != nil && m.MAccid != nil {
		return *m.MAccid
	}
	return 0
}

func (m *MPlayerInfo) GetMNickName() string {
	if m != nil && m.MNickName != nil {
		return *m.MNickName
	}
	return ""
}

func (m *MPlayerInfo) GetMFaceID() string {
	if m != nil && m.MFaceID != nil {
		return *m.MFaceID
	}
	return ""
}

func (m *MPlayerInfo) GetMVipType() int32 {
	if m != nil && m.MVipType != nil {
		return *m.MVipType
	}
	return 0
}

type MWinInfo struct {
	MUserID              *int32   `protobuf:"varint,1,req,name=mUserID" json:"mUserID,omitempty"`
	MWinScore            *int64   `protobuf:"varint,2,req,name=mWinScore" json:"mWinScore,omitempty"`
	MGameDataDetail      []byte   `protobuf:"bytes,3,opt,name=mGameDataDetail" json:"mGameDataDetail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MWinInfo) Reset()         { *m = MWinInfo{} }
func (m *MWinInfo) String() string { return proto.CompactTextString(m) }
func (*MWinInfo) ProtoMessage()    {}
func (*MWinInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{20}
}

func (m *MWinInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MWinInfo.Unmarshal(m, b)
}
func (m *MWinInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MWinInfo.Marshal(b, m, deterministic)
}
func (m *MWinInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MWinInfo.Merge(m, src)
}
func (m *MWinInfo) XXX_Size() int {
	return xxx_messageInfo_MWinInfo.Size(m)
}
func (m *MWinInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MWinInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MWinInfo proto.InternalMessageInfo

func (m *MWinInfo) GetMUserID() int32 {
	if m != nil && m.MUserID != nil {
		return *m.MUserID
	}
	return 0
}

func (m *MWinInfo) GetMWinScore() int64 {
	if m != nil && m.MWinScore != nil {
		return *m.MWinScore
	}
	return 0
}

func (m *MWinInfo) GetMGameDataDetail() []byte {
	if m != nil {
		return m.MGameDataDetail
	}
	return nil
}

type MGameInfo struct {
	MWinInfos            []*MWinInfo `protobuf:"bytes,1,rep,name=mWinInfos" json:"mWinInfos,omitempty"`
	MGameVideotapeKey    *string     `protobuf:"bytes,2,opt,name=mGameVideotapeKey" json:"mGameVideotapeKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MGameInfo) Reset()         { *m = MGameInfo{} }
func (m *MGameInfo) String() string { return proto.CompactTextString(m) }
func (*MGameInfo) ProtoMessage()    {}
func (*MGameInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{21}
}

func (m *MGameInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MGameInfo.Unmarshal(m, b)
}
func (m *MGameInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MGameInfo.Marshal(b, m, deterministic)
}
func (m *MGameInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MGameInfo.Merge(m, src)
}
func (m *MGameInfo) XXX_Size() int {
	return xxx_messageInfo_MGameInfo.Size(m)
}
func (m *MGameInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MGameInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MGameInfo proto.InternalMessageInfo

func (m *MGameInfo) GetMWinInfos() []*MWinInfo {
	if m != nil {
		return m.MWinInfos
	}
	return nil
}

func (m *MGameInfo) GetMGameVideotapeKey() string {
	if m != nil && m.MGameVideotapeKey != nil {
		return *m.MGameVideotapeKey
	}
	return ""
}

// 游戏记录
type MUserGameRecord struct {
	MRoomId              *int32         `protobuf:"varint,1,req,name=mRoomId" json:"mRoomId,omitempty"`
	MTableId             *int32         `protobuf:"varint,2,req,name=mTableId" json:"mTableId,omitempty"`
	MKindId              *int32         `protobuf:"varint,3,req,name=mKindId" json:"mKindId,omitempty"`
	MClubId              *int32         `protobuf:"varint,4,req,name=mClubId" json:"mClubId,omitempty"`
	MGameCurrencyType    *int32         `protobuf:"varint,5,req,name=mGameCurrencyType" json:"mGameCurrencyType,omitempty"`
	MTableType           *int64         `protobuf:"varint,6,req,name=mTableType" json:"mTableType,omitempty"`
	MUsers               []*MPlayerInfo `protobuf:"bytes,7,rep,name=mUsers" json:"mUsers,omitempty"`
	MGameInfos           []*MGameInfo   `protobuf:"bytes,8,rep,name=mGameInfos" json:"mGameInfos,omitempty"`
	MTotalWinInfos       []*MWinInfo    `protobuf:"bytes,9,rep,name=mTotalWinInfos" json:"mTotalWinInfos,omitempty"`
	MRecordTime          *int64         `protobuf:"varint,10,req,name=mRecordTime" json:"mRecordTime,omitempty"`
	MCreaterInfo         *MPlayerInfo   `protobuf:"bytes,11,opt,name=mCreaterInfo" json:"mCreaterInfo,omitempty"`
	MPayRoomRateType     *int32         `protobuf:"varint,12,opt,name=mPayRoomRateType" json:"mPayRoomRateType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MUserGameRecord) Reset()         { *m = MUserGameRecord{} }
func (m *MUserGameRecord) String() string { return proto.CompactTextString(m) }
func (*MUserGameRecord) ProtoMessage()    {}
func (*MUserGameRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{22}
}

func (m *MUserGameRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MUserGameRecord.Unmarshal(m, b)
}
func (m *MUserGameRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MUserGameRecord.Marshal(b, m, deterministic)
}
func (m *MUserGameRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MUserGameRecord.Merge(m, src)
}
func (m *MUserGameRecord) XXX_Size() int {
	return xxx_messageInfo_MUserGameRecord.Size(m)
}
func (m *MUserGameRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MUserGameRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MUserGameRecord proto.InternalMessageInfo

func (m *MUserGameRecord) GetMRoomId() int32 {
	if m != nil && m.MRoomId != nil {
		return *m.MRoomId
	}
	return 0
}

func (m *MUserGameRecord) GetMTableId() int32 {
	if m != nil && m.MTableId != nil {
		return *m.MTableId
	}
	return 0
}

func (m *MUserGameRecord) GetMKindId() int32 {
	if m != nil && m.MKindId != nil {
		return *m.MKindId
	}
	return 0
}

func (m *MUserGameRecord) GetMClubId() int32 {
	if m != nil && m.MClubId != nil {
		return *m.MClubId
	}
	return 0
}

func (m *MUserGameRecord) GetMGameCurrencyType() int32 {
	if m != nil && m.MGameCurrencyType != nil {
		return *m.MGameCurrencyType
	}
	return 0
}

func (m *MUserGameRecord) GetMTableType() int64 {
	if m != nil && m.MTableType != nil {
		return *m.MTableType
	}
	return 0
}

func (m *MUserGameRecord) GetMUsers() []*MPlayerInfo {
	if m != nil {
		return m.MUsers
	}
	return nil
}

func (m *MUserGameRecord) GetMGameInfos() []*MGameInfo {
	if m != nil {
		return m.MGameInfos
	}
	return nil
}

func (m *MUserGameRecord) GetMTotalWinInfos() []*MWinInfo {
	if m != nil {
		return m.MTotalWinInfos
	}
	return nil
}

func (m *MUserGameRecord) GetMRecordTime() int64 {
	if m != nil && m.MRecordTime != nil {
		return *m.MRecordTime
	}
	return 0
}

func (m *MUserGameRecord) GetMCreaterInfo() *MPlayerInfo {
	if m != nil {
		return m.MCreaterInfo
	}
	return nil
}

func (m *MUserGameRecord) GetMPayRoomRateType() int32 {
	if m != nil && m.MPayRoomRateType != nil {
		return *m.MPayRoomRateType
	}
	return 0
}

type GAME_SUB_USER_CHG_COORDINATE_CS_BODY struct {
	Lng                  *int64   `protobuf:"varint,1,req,name=Lng" json:"Lng,omitempty"`
	Lat                  *int64   `protobuf:"varint,2,req,name=Lat" json:"Lat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAME_SUB_USER_CHG_COORDINATE_CS_BODY) Reset()         { *m = GAME_SUB_USER_CHG_COORDINATE_CS_BODY{} }
func (m *GAME_SUB_USER_CHG_COORDINATE_CS_BODY) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_USER_CHG_COORDINATE_CS_BODY) ProtoMessage()    {}
func (*GAME_SUB_USER_CHG_COORDINATE_CS_BODY) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{23}
}

func (m *GAME_SUB_USER_CHG_COORDINATE_CS_BODY) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_USER_CHG_COORDINATE_CS_BODY.Unmarshal(m, b)
}
func (m *GAME_SUB_USER_CHG_COORDINATE_CS_BODY) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_USER_CHG_COORDINATE_CS_BODY.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_USER_CHG_COORDINATE_CS_BODY) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_USER_CHG_COORDINATE_CS_BODY.Merge(m, src)
}
func (m *GAME_SUB_USER_CHG_COORDINATE_CS_BODY) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_USER_CHG_COORDINATE_CS_BODY.Size(m)
}
func (m *GAME_SUB_USER_CHG_COORDINATE_CS_BODY) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_USER_CHG_COORDINATE_CS_BODY.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_USER_CHG_COORDINATE_CS_BODY proto.InternalMessageInfo

func (m *GAME_SUB_USER_CHG_COORDINATE_CS_BODY) GetLng() int64 {
	if m != nil && m.Lng != nil {
		return *m.Lng
	}
	return 0
}

func (m *GAME_SUB_USER_CHG_COORDINATE_CS_BODY) GetLat() int64 {
	if m != nil && m.Lat != nil {
		return *m.Lat
	}
	return 0
}

//GAME_SUB_USER_CS_START_GAME  = 14;//玩家请求开始游戏（开始后开始匹配上桌）
type CSUserStartGame struct {
	RoomId               *int32   `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSUserStartGame) Reset()         { *m = CSUserStartGame{} }
func (m *CSUserStartGame) String() string { return proto.CompactTextString(m) }
func (*CSUserStartGame) ProtoMessage()    {}
func (*CSUserStartGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{24}
}

func (m *CSUserStartGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSUserStartGame.Unmarshal(m, b)
}
func (m *CSUserStartGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSUserStartGame.Marshal(b, m, deterministic)
}
func (m *CSUserStartGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSUserStartGame.Merge(m, src)
}
func (m *CSUserStartGame) XXX_Size() int {
	return xxx_messageInfo_CSUserStartGame.Size(m)
}
func (m *CSUserStartGame) XXX_DiscardUnknown() {
	xxx_messageInfo_CSUserStartGame.DiscardUnknown(m)
}

var xxx_messageInfo_CSUserStartGame proto.InternalMessageInfo

func (m *CSUserStartGame) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

//GAME_SUB_USER_SC_START_GAME		= 15;//用户请求开始游戏响应
type SCUserStartGame struct {
	ResultCode           *int32   `protobuf:"varint,1,req,name=ResultCode" json:"ResultCode,omitempty"`
	RoomId               *int32   `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SCUserStartGame) Reset()         { *m = SCUserStartGame{} }
func (m *SCUserStartGame) String() string { return proto.CompactTextString(m) }
func (*SCUserStartGame) ProtoMessage()    {}
func (*SCUserStartGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{25}
}

func (m *SCUserStartGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SCUserStartGame.Unmarshal(m, b)
}
func (m *SCUserStartGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SCUserStartGame.Marshal(b, m, deterministic)
}
func (m *SCUserStartGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SCUserStartGame.Merge(m, src)
}
func (m *SCUserStartGame) XXX_Size() int {
	return xxx_messageInfo_SCUserStartGame.Size(m)
}
func (m *SCUserStartGame) XXX_DiscardUnknown() {
	xxx_messageInfo_SCUserStartGame.DiscardUnknown(m)
}

var xxx_messageInfo_SCUserStartGame proto.InternalMessageInfo

func (m *SCUserStartGame) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *SCUserStartGame) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

//GAME_SUB_USER_SC_MATCH_RESULT_NOTIFY		= 16;	//比赛结果通知
type SCUserMatchResultNotify struct {
	MMatchRank           *int32   `protobuf:"varint,1,req,name=mMatchRank" json:"mMatchRank,omitempty"`
	MMatchAwardId        *int32   `protobuf:"varint,2,req,name=mMatchAwardId" json:"mMatchAwardId,omitempty"`
	MMatchTypeId         *int32   `protobuf:"varint,3,req,name=mMatchTypeId" json:"mMatchTypeId,omitempty"`
	MParam               []byte   `protobuf:"bytes,4,opt,name=mParam" json:"mParam,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SCUserMatchResultNotify) Reset()         { *m = SCUserMatchResultNotify{} }
func (m *SCUserMatchResultNotify) String() string { return proto.CompactTextString(m) }
func (*SCUserMatchResultNotify) ProtoMessage()    {}
func (*SCUserMatchResultNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{26}
}

func (m *SCUserMatchResultNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SCUserMatchResultNotify.Unmarshal(m, b)
}
func (m *SCUserMatchResultNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SCUserMatchResultNotify.Marshal(b, m, deterministic)
}
func (m *SCUserMatchResultNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SCUserMatchResultNotify.Merge(m, src)
}
func (m *SCUserMatchResultNotify) XXX_Size() int {
	return xxx_messageInfo_SCUserMatchResultNotify.Size(m)
}
func (m *SCUserMatchResultNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SCUserMatchResultNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SCUserMatchResultNotify proto.InternalMessageInfo

func (m *SCUserMatchResultNotify) GetMMatchRank() int32 {
	if m != nil && m.MMatchRank != nil {
		return *m.MMatchRank
	}
	return 0
}

func (m *SCUserMatchResultNotify) GetMMatchAwardId() int32 {
	if m != nil && m.MMatchAwardId != nil {
		return *m.MMatchAwardId
	}
	return 0
}

func (m *SCUserMatchResultNotify) GetMMatchTypeId() int32 {
	if m != nil && m.MMatchTypeId != nil {
		return *m.MMatchTypeId
	}
	return 0
}

func (m *SCUserMatchResultNotify) GetMParam() []byte {
	if m != nil {
		return m.MParam
	}
	return nil
}

//生存赛特殊参数
type SMatchParamMsg struct {
	BWin                 *bool    `protobuf:"varint,1,req,name=bWin" json:"bWin,omitempty"`
	ILifeNum             *int32   `protobuf:"varint,2,req,name=iLifeNum" json:"iLifeNum,omitempty"`
	IWinNum              *int32   `protobuf:"varint,3,req,name=iWinNum" json:"iWinNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMatchParamMsg) Reset()         { *m = SMatchParamMsg{} }
func (m *SMatchParamMsg) String() string { return proto.CompactTextString(m) }
func (*SMatchParamMsg) ProtoMessage()    {}
func (*SMatchParamMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{27}
}

func (m *SMatchParamMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMatchParamMsg.Unmarshal(m, b)
}
func (m *SMatchParamMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMatchParamMsg.Marshal(b, m, deterministic)
}
func (m *SMatchParamMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMatchParamMsg.Merge(m, src)
}
func (m *SMatchParamMsg) XXX_Size() int {
	return xxx_messageInfo_SMatchParamMsg.Size(m)
}
func (m *SMatchParamMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SMatchParamMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SMatchParamMsg proto.InternalMessageInfo

func (m *SMatchParamMsg) GetBWin() bool {
	if m != nil && m.BWin != nil {
		return *m.BWin
	}
	return false
}

func (m *SMatchParamMsg) GetILifeNum() int32 {
	if m != nil && m.ILifeNum != nil {
		return *m.ILifeNum
	}
	return 0
}

func (m *SMatchParamMsg) GetIWinNum() int32 {
	if m != nil && m.IWinNum != nil {
		return *m.IWinNum
	}
	return 0
}

//GAME_SUB_USER_SC_MATCH_RANK_NOTIFY = 19;//玩家比赛排名信息更新
type SCUserMatchRankNotify struct {
	MMatchRank           *int32   `protobuf:"varint,1,req,name=mMatchRank" json:"mMatchRank,omitempty"`
	MMatchTypeId         *int32   `protobuf:"varint,2,req,name=mMatchTypeId" json:"mMatchTypeId,omitempty"`
	MMatchType           *int32   `protobuf:"varint,3,req,name=mMatchType" json:"mMatchType,omitempty"`
	MRemainTable         *int32   `protobuf:"varint,4,opt,name=mRemainTable" json:"mRemainTable,omitempty"`
	MCurRound            *int32   `protobuf:"varint,5,opt,name=mCurRound" json:"mCurRound,omitempty"`
	MCurStatus           *int32   `protobuf:"varint,6,opt,name=mCurStatus" json:"mCurStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SCUserMatchRankNotify) Reset()         { *m = SCUserMatchRankNotify{} }
func (m *SCUserMatchRankNotify) String() string { return proto.CompactTextString(m) }
func (*SCUserMatchRankNotify) ProtoMessage()    {}
func (*SCUserMatchRankNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_b00f0e6447ac71a2, []int{28}
}

func (m *SCUserMatchRankNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SCUserMatchRankNotify.Unmarshal(m, b)
}
func (m *SCUserMatchRankNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SCUserMatchRankNotify.Marshal(b, m, deterministic)
}
func (m *SCUserMatchRankNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SCUserMatchRankNotify.Merge(m, src)
}
func (m *SCUserMatchRankNotify) XXX_Size() int {
	return xxx_messageInfo_SCUserMatchRankNotify.Size(m)
}
func (m *SCUserMatchRankNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SCUserMatchRankNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SCUserMatchRankNotify proto.InternalMessageInfo

func (m *SCUserMatchRankNotify) GetMMatchRank() int32 {
	if m != nil && m.MMatchRank != nil {
		return *m.MMatchRank
	}
	return 0
}

func (m *SCUserMatchRankNotify) GetMMatchTypeId() int32 {
	if m != nil && m.MMatchTypeId != nil {
		return *m.MMatchTypeId
	}
	return 0
}

func (m *SCUserMatchRankNotify) GetMMatchType() int32 {
	if m != nil && m.MMatchType != nil {
		return *m.MMatchType
	}
	return 0
}

func (m *SCUserMatchRankNotify) GetMRemainTable() int32 {
	if m != nil && m.MRemainTable != nil {
		return *m.MRemainTable
	}
	return 0
}

func (m *SCUserMatchRankNotify) GetMCurRound() int32 {
	if m != nil && m.MCurRound != nil {
		return *m.MCurRound
	}
	return 0
}

func (m *SCUserMatchRankNotify) GetMCurStatus() int32 {
	if m != nil && m.MCurStatus != nil {
		return *m.MCurStatus
	}
	return 0
}

func init() {
	proto.RegisterEnum("GameSubUserCmd.EnSubCmdID", EnSubCmdID_name, EnSubCmdID_value)
	proto.RegisterEnum("GameSubUserCmd.EnRoomUserState", EnRoomUserState_name, EnRoomUserState_value)
	proto.RegisterEnum("GameSubUserCmd.EnMatchUserState", EnMatchUserState_name, EnMatchUserState_value)
	proto.RegisterType((*GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG)(nil), "GameSubUserCmd.GAME_SUB_CS_STEP_OUT_ROOM_RQST_MSG")
	proto.RegisterType((*GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG)(nil), "GameSubUserCmd.GAME_SUB_SC_STEP_OUT_ROOM_RSP_MSG")
	proto.RegisterType((*CSUserLeaveRoomRqst)(nil), "GameSubUserCmd.CSUserLeaveRoomRqst")
	proto.RegisterType((*SCUserLeaveRoomRsp)(nil), "GameSubUserCmd.SCUserLeaveRoomRsp")
	proto.RegisterType((*CSUserSitDownRqst)(nil), "GameSubUserCmd.CSUserSitDownRqst")
	proto.RegisterType((*CSUserSitDownRsp)(nil), "GameSubUserCmd.CSUserSitDownRsp")
	proto.RegisterType((*CSUserSitUpRqst)(nil), "GameSubUserCmd.CSUserSitUpRqst")
	proto.RegisterType((*CSUserSitUpRsp)(nil), "GameSubUserCmd.CSUserSitUpRsp")
	proto.RegisterType((*CSUserChangeTableRqst)(nil), "GameSubUserCmd.CSUserChangeTableRqst")
	proto.RegisterType((*CSUserChangeTableRsp)(nil), "GameSubUserCmd.CSUserChangeTableRsp")
	proto.RegisterType((*MMatchInfo)(nil), "GameSubUserCmd.MMatchInfo")
	proto.RegisterType((*CSUserRoomInfoNotify)(nil), "GameSubUserCmd.CSUserRoomInfoNotify")
	proto.RegisterType((*CSUserRoomCfgNotify)(nil), "GameSubUserCmd.CSUserRoomCfgNotify")
	proto.RegisterType((*CSUserFrameEnter)(nil), "GameSubUserCmd.CSUserFrameEnter")
	proto.RegisterType((*SCUserLeaveRoomNotify)(nil), "GameSubUserCmd.SCUserLeaveRoomNotify")
	proto.RegisterType((*DDZ_TotalRecord)(nil), "GameSubUserCmd.DDZ_TotalRecord")
	proto.RegisterType((*XZMMjUserOperateDetail)(nil), "GameSubUserCmd.XZMMjUserOperateDetail")
	proto.RegisterType((*YB_MMjUserOperateDetail)(nil), "GameSubUserCmd.YB_MMjUserOperateDetail")
	proto.RegisterType((*XCPDK_MCardUserOperateDetail)(nil), "GameSubUserCmd.XCPDK_MCardUserOperateDetail")
	proto.RegisterType((*MPlayerInfo)(nil), "GameSubUserCmd.MPlayerInfo")
	proto.RegisterType((*MWinInfo)(nil), "GameSubUserCmd.MWinInfo")
	proto.RegisterType((*MGameInfo)(nil), "GameSubUserCmd.MGameInfo")
	proto.RegisterType((*MUserGameRecord)(nil), "GameSubUserCmd.MUserGameRecord")
	proto.RegisterType((*GAME_SUB_USER_CHG_COORDINATE_CS_BODY)(nil), "GameSubUserCmd.GAME_SUB_USER_CHG_COORDINATE_CS_BODY")
	proto.RegisterType((*CSUserStartGame)(nil), "GameSubUserCmd.CSUserStartGame")
	proto.RegisterType((*SCUserStartGame)(nil), "GameSubUserCmd.SCUserStartGame")
	proto.RegisterType((*SCUserMatchResultNotify)(nil), "GameSubUserCmd.SCUserMatchResultNotify")
	proto.RegisterType((*SMatchParamMsg)(nil), "GameSubUserCmd.SMatchParamMsg")
	proto.RegisterType((*SCUserMatchRankNotify)(nil), "GameSubUserCmd.SCUserMatchRankNotify")
}

func init() { proto.RegisterFile("GameSubUserCmd.proto", fileDescriptor_b00f0e6447ac71a2) }

var fileDescriptor_b00f0e6447ac71a2 = []byte{
	// 1850 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0xcd, 0x8f, 0x1b, 0x49,
	0x15, 0xc7, 0xf6, 0x7c, 0xb9, 0x66, 0xc6, 0xee, 0x54, 0xbe, 0x3a, 0xd9, 0xec, 0xc6, 0xdb, 0x84,
	0x95, 0x89, 0x60, 0x41, 0x41, 0x42, 0x42, 0x02, 0x81, 0xdd, 0xf6, 0x78, 0x3d, 0x33, 0x6d, 0x3b,
	0xd5, 0x9e, 0xcc, 0x26, 0x1c, 0x5a, 0x35, 0x76, 0xcd, 0xa4, 0x88, 0xbb, 0xdb, 0xdb, 0x6e, 0x6f,
	0x76, 0x24, 0x2e, 0x5c, 0xb9, 0x72, 0x44, 0xfc, 0x13, 0x48, 0x70, 0xe4, 0xca, 0x9f, 0xc0, 0x89,
	0xff, 0x05, 0xbd, 0x57, 0xfd, 0xdd, 0x9e, 0x64, 0x95, 0xe5, 0xb2, 0x27, 0xfb, 0xfd, 0xde, 0xab,
	0xf7, 0x55, 0xef, 0xbd, 0xaa, 0x6a, 0x72, 0x67, 0xc0, 0x5d, 0x61, 0xaf, 0x2f, 0xce, 0x56, 0x22,
	0x30, 0xdd, 0xf9, 0xe7, 0xcb, 0xc0, 0x0f, 0x7d, 0xda, 0xc8, 0xa3, 0xc6, 0xaf, 0x89, 0x31, 0xe8,
	0x58, 0x7d, 0xc7, 0x3e, 0xeb, 0x3a, 0xa6, 0xed, 0xd8, 0xd3, 0xfe, 0xc4, 0x19, 0x9f, 0x4d, 0x1d,
	0x36, 0x1e, 0x5b, 0x0e, 0x7b, 0x6e, 0x4f, 0x1d, 0xcb, 0x1e, 0xd0, 0x7b, 0x64, 0x87, 0xf9, 0xbe,
	0x3b, 0x9c, 0xeb, 0x95, 0x56, 0xb5, 0xbd, 0xcd, 0x22, 0xca, 0xf8, 0x3d, 0xf9, 0x34, 0x59, 0x6d,
	0x9b, 0xc5, 0xd5, 0xf6, 0x04, 0x17, 0x7f, 0x42, 0x08, 0x13, 0xab, 0xf5, 0x22, 0x34, 0xfd, 0xb9,
	0x88, 0x14, 0x64, 0x90, 0x8c, 0xf2, 0x6a, 0x4e, 0xf9, 0x4f, 0xc9, 0x6d, 0xd3, 0x06, 0x3f, 0x4f,
	0x05, 0xff, 0x5a, 0x00, 0xc8, 0xbe, 0x5a, 0x85, 0x37, 0xfa, 0x72, 0x4a, 0xa8, 0x6d, 0xe6, 0xc5,
	0x57, 0xcb, 0x0f, 0x36, 0xde, 0x27, 0xb7, 0x94, 0x71, 0x5b, 0x86, 0x3d, 0xff, 0xad, 0xf7, 0x2e,
	0xd3, 0x54, 0x27, 0xbb, 0x53, 0x7e, 0xb1, 0x10, 0x89, 0x96, 0x98, 0x34, 0xfe, 0x48, 0xb4, 0xbc,
	0x9a, 0x0f, 0x77, 0x09, 0xf0, 0x13, 0xe9, 0xcd, 0x87, 0x73, 0xbd, 0xa6, 0x70, 0x45, 0x29, 0xeb,
	0x8b, 0x0b, 0xb0, 0xbe, 0xd5, 0xaa, 0x28, 0xeb, 0x48, 0x1a, 0x26, 0x69, 0x26, 0xd6, 0xcf, 0x96,
	0x1f, 0x18, 0xc2, 0x05, 0x69, 0x64, 0x95, 0x7c, 0x87, 0x00, 0x32, 0x8e, 0xd6, 0xf2, 0x8e, 0xfe,
	0x8c, 0xdc, 0x55, 0x36, 0xcc, 0xd7, 0xdc, 0xbb, 0x12, 0x68, 0xfa, 0x9d, 0x9b, 0x3d, 0x22, 0x77,
	0xca, 0x0b, 0xbe, 0xc3, 0x76, 0xff, 0xab, 0x4a, 0x88, 0x65, 0xf1, 0x70, 0xf6, 0x7a, 0xe8, 0x5d,
	0xfa, 0xd4, 0x20, 0x07, 0x2e, 0x52, 0xd3, 0xeb, 0xa5, 0x48, 0x8c, 0xe7, 0xb0, 0x54, 0x06, 0x3a,
	0x2a, 0x51, 0x98, 0xc3, 0xe8, 0x31, 0x69, 0xba, 0xe0, 0x25, 0x62, 0x76, 0xc8, 0x43, 0x81, 0x7b,
	0xd7, 0x78, 0xd6, 0xfa, 0xbc, 0xd0, 0x9d, 0xc2, 0x43, 0x19, 0xcc, 0x33, 0xc8, 0xb1, 0xe2, 0x42,
	0xfa, 0x19, 0x69, 0xb8, 0xe6, 0x3a, 0x60, 0xfe, 0xda, 0x9b, 0x9b, 0xfe, 0xda, 0x0b, 0xf5, 0x2d,
	0xb4, 0x58, 0x40, 0x51, 0xee, 0x9c, 0xcb, 0x50, 0xf9, 0x2a, 0x5d, 0xa1, 0x6f, 0x47, 0x72, 0x39,
	0x14, 0xe5, 0x3a, 0x8b, 0x45, 0x46, 0xdf, 0x4e, 0xab, 0xda, 0x3e, 0x64, 0x05, 0x94, 0x3e, 0x21,
	0x87, 0x80, 0x80, 0xbf, 0x4a, 0x6c, 0x17, 0xc5, 0xf2, 0xa0, 0xf1, 0x9f, 0xad, 0x78, 0x47, 0x30,
	0xa3, 0xde, 0xa5, 0x3f, 0xf2, 0x43, 0x79, 0x79, 0x7d, 0x63, 0xc1, 0xa5, 0xd5, 0x5c, 0xbd, 0xa9,
	0x9a, 0xf3, 0x45, 0x02, 0x7b, 0x6b, 0xbe, 0xe6, 0x32, 0x88, 0x83, 0x07, 0x66, 0x06, 0xa1, 0x4f,
	0x89, 0xc6, 0x84, 0x2b, 0xb9, 0x37, 0xcf, 0x86, 0x0e, 0x52, 0x25, 0x9c, 0xfe, 0x86, 0xd4, 0x93,
	0x54, 0xeb, 0x3b, 0xad, 0x4a, 0xbb, 0xf1, 0xec, 0x71, 0x79, 0x4b, 0xc0, 0xd5, 0x74, 0x47, 0xd2,
	0x15, 0xb4, 0x4b, 0x1a, 0xe9, 0xf6, 0x40, 0xb0, 0xfa, 0x6e, 0xab, 0xd2, 0xde, 0x7f, 0xf6, 0xb0,
	0xa8, 0x23, 0xad, 0x29, 0x56, 0x58, 0x41, 0x1f, 0x92, 0x3d, 0xd0, 0x0f, 0xd5, 0xa4, 0xef, 0x61,
	0x0a, 0x12, 0x1a, 0x42, 0x95, 0x5d, 0xbe, 0x12, 0xf6, 0xcc, 0x0f, 0x84, 0x5e, 0x57, 0x65, 0x9c,
	0x22, 0xf4, 0x11, 0xa9, 0x4b, 0x8b, 0x7f, 0xa3, 0xd8, 0x04, 0xd9, 0x29, 0x40, 0x5b, 0x64, 0x5f,
	0xda, 0x22, 0xf8, 0x5a, 0x04, 0x0c, 0xc2, 0xdb, 0x47, 0x7e, 0x16, 0xc2, 0xf5, 0x5d, 0x3e, 0x7b,
	0x33, 0xf0, 0x17, 0x73, 0xfd, 0xa0, 0x55, 0x69, 0xd7, 0x58, 0x0a, 0xe0, 0x7a, 0x20, 0xfa, 0xdf,
	0x2c, 0x65, 0x20, 0xf4, 0x43, 0xcc, 0x61, 0x16, 0xa2, 0x77, 0xc8, 0xb6, 0xc4, 0xb5, 0x8d, 0x56,
	0xa5, 0xbd, 0xc5, 0x14, 0x01, 0x5b, 0x2a, 0x8f, 0x27, 0xcf, 0xa7, 0xae, 0xde, 0x44, 0x95, 0x11,
	0x85, 0xd6, 0x8e, 0x27, 0xcf, 0xd5, 0xbe, 0x69, 0xa8, 0x2d, 0x05, 0x30, 0x56, 0x7b, 0xbd, 0x14,
	0x81, 0xc9, 0x83, 0xb9, 0x7e, 0x4b, 0x6d, 0x6b, 0x8a, 0xa4, 0xc7, 0x00, 0x64, 0xc7, 0xbc, 0xbc,
	0x7a, 0x77, 0x5d, 0x19, 0x4f, 0xe3, 0x89, 0x7b, 0x14, 0x70, 0x57, 0xf4, 0xbd, 0x50, 0x04, 0x37,
	0xca, 0xfe, 0xa9, 0x42, 0xee, 0x16, 0xce, 0x8c, 0xf7, 0x54, 0xed, 0x8d, 0x63, 0x12, 0x56, 0x0c,
	0x57, 0x27, 0x72, 0xf6, 0x06, 0x3b, 0x7c, 0x8f, 0x45, 0x14, 0x84, 0x07, 0xbf, 0x4c, 0xf0, 0x95,
	0xef, 0x61, 0xd5, 0xd6, 0x59, 0x06, 0x31, 0xfe, 0x52, 0x21, 0xcd, 0x5e, 0xef, 0x95, 0x33, 0xf5,
	0x43, 0xbe, 0x60, 0x62, 0xe6, 0x07, 0x38, 0x5a, 0x60, 0x37, 0xad, 0x75, 0x28, 0x97, 0x0b, 0x11,
	0xc4, 0xe3, 0x27, 0x8b, 0x41, 0xf9, 0xc8, 0x2e, 0x64, 0xc4, 0x0b, 0x23, 0x57, 0x12, 0x1a, 0x13,
	0x7e, 0x2e, 0x3d, 0xa8, 0xf4, 0x55, 0x74, 0x58, 0xa4, 0x00, 0x6a, 0xb7, 0x97, 0x81, 0xf4, 0xae,
	0x94, 0xc0, 0x56, 0xa4, 0x3d, 0x83, 0x19, 0x7f, 0xaf, 0x92, 0x7b, 0x5f, 0xbe, 0xb2, 0xac, 0x3f,
	0x40, 0x72, 0xc6, 0x4b, 0x11, 0xf0, 0x50, 0xf4, 0x44, 0xc8, 0xe5, 0x02, 0x52, 0xe0, 0xda, 0x82,
	0x87, 0x51, 0x6e, 0x0e, 0x59, 0x4c, 0x22, 0x07, 0xe4, 0xa3, 0xe4, 0x00, 0x47, 0x91, 0x90, 0x04,
	0xf7, 0x95, 0xb4, 0x7c, 0x55, 0x02, 0xd0, 0xd7, 0x87, 0x2c, 0x83, 0xe0, 0x2c, 0x3d, 0x96, 0x62,
	0xc2, 0xfd, 0xb4, 0xb9, 0x0f, 0x59, 0x0e, 0xc3, 0x39, 0xd4, 0x93, 0xdc, 0x4b, 0x84, 0xb6, 0x51,
	0x28, 0x0f, 0xa2, 0xa6, 0x8e, 0x37, 0xe0, 0xde, 0x55, 0x3c, 0xd3, 0x94, 0xa6, 0x0c, 0x46, 0x7f,
	0x4e, 0x6e, 0xbb, 0x96, 0xf4, 0xae, 0x3a, 0xde, 0xbc, 0xbb, 0x4e, 0x45, 0x77, 0x51, 0x74, 0x13,
	0x0b, 0x6d, 0x9b, 0xaf, 0xf9, 0xb1, 0x8c, 0x6d, 0xef, 0x45, 0xb6, 0xb3, 0xa0, 0xf1, 0xb7, 0x2a,
	0xb9, 0xff, 0xb2, 0xeb, 0x7c, 0x0f, 0xb3, 0x06, 0x96, 0x8a, 0x39, 0xcb, 0x20, 0xc8, 0x9f, 0x24,
	0xc1, 0xef, 0x46, 0xfc, 0x04, 0xf9, 0x96, 0xf9, 0xf9, 0x67, 0x85, 0x3c, 0xfa, 0xd2, 0x9c, 0xf4,
	0x4e, 0x1c, 0x0b, 0x3a, 0xfb, 0xff, 0x93, 0xa4, 0x47, 0xa4, 0xee, 0x9e, 0x4b, 0x2f, 0x9b, 0xa3,
	0x14, 0x80, 0x51, 0xe6, 0x76, 0xb9, 0xf7, 0x92, 0x67, 0x33, 0x94, 0x85, 0x30, 0x89, 0x5d, 0xee,
	0xf7, 0xb8, 0x97, 0xcd, 0x4f, 0x0e, 0x83, 0x1e, 0xdd, 0xb7, 0x26, 0x0b, 0x7e, 0x2d, 0x02, 0x1c,
	0xdd, 0x89, 0x37, 0xbd, 0xa8, 0x35, 0x63, 0x12, 0xa6, 0x80, 0xdb, 0x99, 0xcd, 0x64, 0x72, 0xaa,
	0x29, 0x0a, 0xbd, 0x1c, 0xc9, 0xd9, 0x9b, 0x11, 0x77, 0xd5, 0x15, 0xa0, 0xce, 0x52, 0x00, 0xf5,
	0x1d, 0xf1, 0x99, 0x18, 0xf6, 0xb0, 0x19, 0xeb, 0x2c, 0x26, 0xa1, 0xcb, 0xdd, 0x17, 0x72, 0x89,
	0x87, 0x84, 0x3a, 0xcb, 0x12, 0xda, 0x58, 0x90, 0x3d, 0xeb, 0x5c, 0x7a, 0xef, 0xf1, 0x28, 0xca,
	0x8f, 0x3a, 0x2a, 0xc0, 0xa9, 0x1a, 0x4b, 0x01, 0xda, 0x26, 0x4d, 0x17, 0x8e, 0xac, 0x1e, 0x0f,
	0xb9, 0xda, 0x04, 0xcc, 0xe1, 0x01, 0x2b, 0xc2, 0xc6, 0x57, 0xa4, 0x6e, 0xe1, 0xad, 0x06, 0xcc,
	0xfd, 0x52, 0x29, 0x85, 0xff, 0x2b, 0xbd, 0xd2, 0xaa, 0xb5, 0xf7, 0x9f, 0xe9, 0xa5, 0xa3, 0x2f,
	0x12, 0x60, 0xa9, 0x28, 0xfd, 0x09, 0xb9, 0x85, 0x7a, 0x5f, 0xc8, 0xb9, 0xf0, 0x43, 0xbe, 0x14,
	0x27, 0xe2, 0x5a, 0xaf, 0xe2, 0x4c, 0x2c, 0x33, 0x8c, 0x3f, 0x6f, 0x91, 0xa6, 0x05, 0xea, 0x80,
	0x13, 0x8d, 0x46, 0x08, 0x34, 0x37, 0x99, 0x63, 0x12, 0x53, 0x95, 0x9f, 0xcd, 0x09, 0x8d, 0xab,
	0x72, 0x77, 0xe7, 0x98, 0x44, 0x8e, 0xb9, 0x58, 0x5f, 0xe0, 0xe5, 0x59, 0x71, 0x14, 0x99, 0xf8,
	0x6a, 0xae, 0x83, 0x40, 0x78, 0xb3, 0xeb, 0x68, 0x0f, 0x40, 0xa6, 0xcc, 0xc0, 0x0e, 0x41, 0x6b,
	0x28, 0xb6, 0x83, 0x79, 0xce, 0x20, 0xf4, 0x17, 0x64, 0x07, 0x77, 0x64, 0xa5, 0xef, 0x62, 0xba,
	0x3e, 0x2a, 0xa5, 0x2b, 0xad, 0x2f, 0x16, 0x89, 0xd2, 0x5f, 0x61, 0x5b, 0xaa, 0x9c, 0xaf, 0xf4,
	0x3d, 0x5c, 0xf8, 0xa0, 0xb4, 0x30, 0x96, 0x60, 0x19, 0x61, 0xfa, 0x3b, 0xd2, 0x70, 0xf1, 0x48,
	0x49, 0xb6, 0xa9, 0xfe, 0x9e, 0x6d, 0x2a, 0xc8, 0x63, 0xeb, 0xa8, 0xa4, 0xe3, 0x4d, 0x8a, 0x60,
	0x48, 0x59, 0x88, 0xfe, 0x96, 0x1c, 0xb8, 0x66, 0x20, 0x78, 0xa8, 0xdc, 0xd6, 0xf7, 0xf1, 0x0e,
	0xf4, 0xce, 0xc8, 0x72, 0x0b, 0xe0, 0xc6, 0xe6, 0x4e, 0xf8, 0x35, 0xbe, 0xd5, 0x78, 0xa8, 0x52,
	0x77, 0xa0, 0x6e, 0x6c, 0x45, 0xdc, 0x38, 0x26, 0x4f, 0x92, 0xa7, 0xe6, 0x99, 0xdd, 0x67, 0x8e,
	0xf9, 0xc5, 0xc0, 0x31, 0xc7, 0x63, 0xd6, 0x1b, 0x8e, 0x3a, 0xd3, 0x3e, 0x3c, 0x5e, 0xbb, 0xe3,
	0xde, 0x4b, 0xaa, 0x91, 0xda, 0xa9, 0x77, 0x85, 0xc5, 0x51, 0x63, 0xf0, 0x17, 0x11, 0x1e, 0x46,
	0xb5, 0x0f, 0x7f, 0x8d, 0x1f, 0x27, 0xef, 0xa2, 0x90, 0x07, 0x21, 0xb8, 0x7b, 0xe3, 0x15, 0x61,
	0x48, 0x9a, 0xea, 0x86, 0x90, 0x8a, 0x7e, 0xe8, 0x1b, 0xe3, 0xaf, 0x15, 0x72, 0x5f, 0xe9, 0xc2,
	0x4b, 0xa0, 0x5a, 0x11, 0xdd, 0x37, 0xa0, 0x7c, 0x14, 0xca, 0xbd, 0x37, 0xb1, 0xce, 0x14, 0xc1,
	0x01, 0x8b, 0x54, 0xe7, 0x2d, 0x0f, 0xd2, 0x4b, 0x73, 0x1e, 0x2c, 0x3d, 0x5b, 0x6a, 0x1b, 0x9e,
	0x2d, 0x30, 0xa1, 0x26, 0x3c, 0xe0, 0x2e, 0x0e, 0xc3, 0x03, 0x16, 0x51, 0xc6, 0x2b, 0xd2, 0xb0,
	0x51, 0x0e, 0x49, 0x6b, 0x75, 0x45, 0x29, 0xd9, 0xba, 0x38, 0x97, 0x1e, 0x7a, 0xb3, 0xc7, 0xf0,
	0x3f, 0xde, 0x3a, 0x4e, 0xe5, 0xa5, 0x18, 0xad, 0xdd, 0xe4, 0xd6, 0x11, 0xd1, 0xd0, 0x4a, 0x70,
	0xc9, 0x00, 0x56, 0xd4, 0x64, 0x11, 0x69, 0xfc, 0x37, 0xb9, 0x67, 0x25, 0x11, 0x7d, 0xcb, 0xb8,
	0x8b, 0x11, 0x55, 0x37, 0x44, 0x94, 0xe8, 0xc0, 0xfa, 0xa9, 0x65, 0x75, 0x60, 0xeb, 0x81, 0x0e,
	0x26, 0x5c, 0x2e, 0x3d, 0x6c, 0xc7, 0xe8, 0xe5, 0x90, 0xc3, 0x70, 0x4a, 0xc6, 0xcf, 0xa8, 0x68,
	0xd0, 0xa6, 0x00, 0x5a, 0x30, 0xd7, 0x78, 0xf7, 0x5f, 0xaf, 0xf0, 0x78, 0x04, 0x0b, 0x09, 0xf2,
	0xf4, 0xdf, 0xdb, 0x84, 0x08, 0xcf, 0x5e, 0x5f, 0x98, 0xee, 0x7c, 0xd8, 0xa3, 0x4f, 0x48, 0x2b,
	0xfb, 0x4d, 0x05, 0xab, 0xf5, 0xb4, 0xdf, 0x79, 0xd1, 0x4f, 0xbf, 0xaa, 0x68, 0x15, 0xfa, 0x43,
	0xf2, 0x38, 0xfb, 0xed, 0xa4, 0x24, 0x65, 0x4f, 0xb4, 0x2a, 0x35, 0xc8, 0x27, 0x25, 0x55, 0xf6,
	0x70, 0xea, 0xf4, 0xc6, 0xe7, 0x23, 0xa5, 0xa8, 0x46, 0x3f, 0x25, 0x1f, 0x97, 0x14, 0xa5, 0x32,
	0xf6, 0x44, 0xdb, 0xa2, 0x2d, 0xf2, 0x68, 0xa3, 0x9a, 0xb3, 0x89, 0x52, 0xb2, 0x4d, 0x1f, 0x93,
	0x8f, 0x36, 0x2a, 0x01, 0x09, 0x7b, 0xa2, 0xed, 0xd0, 0xcf, 0xf2, 0x1f, 0x8a, 0xa2, 0x16, 0xec,
	0x8c, 0x06, 0x7d, 0x67, 0xda, 0xe9, 0x9e, 0xf6, 0x95, 0xa2, 0x5d, 0xfa, 0xa3, 0xfc, 0x27, 0xa1,
	0x0d, 0x72, 0xf6, 0x44, 0xdb, 0xdb, 0x28, 0x86, 0x71, 0x0f, 0x47, 0x47, 0x63, 0x67, 0x34, 0x9e,
	0x0e, 0x8f, 0x5e, 0x6a, 0xf5, 0x5c, 0x2a, 0x73, 0x62, 0xe6, 0xd1, 0x20, 0x96, 0x22, 0xb9, 0xf0,
	0x62, 0xa9, 0x23, 0x06, 0x48, 0x7f, 0x34, 0xed, 0x33, 0x6d, 0x3f, 0xe7, 0xfd, 0x86, 0x64, 0x47,
	0x9a, 0x0e, 0x72, 0x9b, 0xb2, 0x79, 0xca, 0x68, 0x87, 0xb9, 0x5c, 0x29, 0x21, 0xdb, 0xb1, 0xa7,
	0x1d, 0x36, 0x75, 0x00, 0xd6, 0x1a, 0x65, 0x01, 0xfc, 0x36, 0x96, 0x08, 0x34, 0x69, 0xbb, 0x38,
	0xcc, 0x6c, 0xd3, 0xb1, 0x3a, 0x53, 0xf3, 0x0b, 0x87, 0xf5, 0xed, 0xb3, 0xd3, 0x69, 0xec, 0x90,
	0x56, 0x2c, 0x80, 0xf2, 0xf7, 0x39, 0xed, 0x56, 0xb1, 0x00, 0x4a, 0x5f, 0xe1, 0x34, 0x9a, 0x8b,
	0xbf, 0x60, 0xb0, 0x33, 0x3a, 0x89, 0xcd, 0xdd, 0x7e, 0xfa, 0x8f, 0x0a, 0x69, 0x16, 0xde, 0xbd,
	0xf4, 0x1e, 0xa1, 0x39, 0xc0, 0x19, 0xf9, 0x9e, 0xd0, 0x7e, 0x40, 0x1f, 0x90, 0xbb, 0x79, 0xfc,
	0x9c, 0xcb, 0x50, 0x7a, 0x57, 0x5a, 0x85, 0x3e, 0x24, 0xf7, 0xf2, 0x2c, 0xec, 0x46, 0xe0, 0x55,
	0xa9, 0x4e, 0xee, 0xe4, 0x79, 0x03, 0xee, 0x02, 0xa7, 0x56, 0x5e, 0x05, 0xaf, 0xca, 0x53, 0xb1,
	0x5a, 0x69, 0x5b, 0xf4, 0x63, 0xf2, 0xa0, 0x6c, 0x2c, 0x5e, 0xba, 0xfd, 0xf4, 0x2d, 0xd1, 0x8a,
	0x5f, 0x50, 0xe8, 0x7d, 0x72, 0x3b, 0x8f, 0xc4, 0x8e, 0x97, 0x19, 0xa0, 0x4c, 0xab, 0x40, 0x44,
	0x05, 0x46, 0x64, 0xa0, 0x0a, 0x49, 0x28, 0xb0, 0xfa, 0xde, 0x5c, 0xab, 0xfd, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0xf9, 0xf1, 0x28, 0xf3, 0x66, 0x15, 0x00, 0x00,
}
