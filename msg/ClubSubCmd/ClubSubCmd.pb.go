// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ClubSubCmd.proto

package ClubSubCmd

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EnClientSubCmdID int32

const (
	EnClientSubCmdID_CS_CREATE_CLUB              EnClientSubCmdID = 1
	EnClientSubCmdID_CS_RECOMMEND_CLUB_LIST      EnClientSubCmdID = 2
	EnClientSubCmdID_CS_QUERY_CLUB_INFO          EnClientSubCmdID = 3
	EnClientSubCmdID_CS_JOIN_CLUB                EnClientSubCmdID = 4
	EnClientSubCmdID_CS_APPLY_FOR_CLUB_USER_LIST EnClientSubCmdID = 6
	EnClientSubCmdID_CS_ALTER_CLUB_INFO          EnClientSubCmdID = 7
	EnClientSubCmdID_CS_CLUB_USER_LIST           EnClientSubCmdID = 8
	EnClientSubCmdID_CS_SET_CLUB_ADMIN           EnClientSubCmdID = 9
	EnClientSubCmdID_CS_DELETE_CLUB_USER         EnClientSubCmdID = 10
	EnClientSubCmdID_CS_CLUB_CHAT_MSG            EnClientSubCmdID = 11
	EnClientSubCmdID_CS_CLUB_LOG_LIST            EnClientSubCmdID = 12
	EnClientSubCmdID_CS_CLUB_ADMIN_LIST          EnClientSubCmdID = 13
	EnClientSubCmdID_CS_TOEXAMINE_USER_RESLUT    EnClientSubCmdID = 14
	EnClientSubCmdID_CS_CANCEL_CLUB_ADMIN        EnClientSubCmdID = 15
	EnClientSubCmdID_CS_SET_CLUB_ADMIN_RIGHT     EnClientSubCmdID = 16
	EnClientSubCmdID_CS_GET_CLUB_USER_INFO       EnClientSubCmdID = 17
	EnClientSubCmdID_CS_SET_CLUB_BASE_INFO       EnClientSubCmdID = 18
	// =====================liuyuanlin=======start==================
	EnClientSubCmdID_CS_CLUB_ROOM_LIST               EnClientSubCmdID = 300
	EnClientSubCmdID_CS_CLUB_TABLE_LIST              EnClientSubCmdID = 301
	EnClientSubCmdID_CS_CLUB_CREATE_TABLE            EnClientSubCmdID = 302
	EnClientSubCmdID_CS_CLUB_DISMISS_TABLE           EnClientSubCmdID = 303
	EnClientSubCmdID_CS_CLUB_ENTER_ROOM              EnClientSubCmdID = 304
	EnClientSubCmdID_CS_CLUB_GAME_RECORD_LIST        EnClientSubCmdID = 305
	EnClientSubCmdID_CS_CLUB_GAME_VIDEOTAPE          EnClientSubCmdID = 306
	EnClientSubCmdID_CS_CLUB_STATISTICS_INFO         EnClientSubCmdID = 307
	EnClientSubCmdID_CS_CLUB_RECEIVE_SERVER_RATE     EnClientSubCmdID = 308
	EnClientSubCmdID_CS_CLUB_SERVER_RATE_RECORD_LIST EnClientSubCmdID = 309
)

var EnClientSubCmdID_name = map[int32]string{
	1:   "CS_CREATE_CLUB",
	2:   "CS_RECOMMEND_CLUB_LIST",
	3:   "CS_QUERY_CLUB_INFO",
	4:   "CS_JOIN_CLUB",
	6:   "CS_APPLY_FOR_CLUB_USER_LIST",
	7:   "CS_ALTER_CLUB_INFO",
	8:   "CS_CLUB_USER_LIST",
	9:   "CS_SET_CLUB_ADMIN",
	10:  "CS_DELETE_CLUB_USER",
	11:  "CS_CLUB_CHAT_MSG",
	12:  "CS_CLUB_LOG_LIST",
	13:  "CS_CLUB_ADMIN_LIST",
	14:  "CS_TOEXAMINE_USER_RESLUT",
	15:  "CS_CANCEL_CLUB_ADMIN",
	16:  "CS_SET_CLUB_ADMIN_RIGHT",
	17:  "CS_GET_CLUB_USER_INFO",
	18:  "CS_SET_CLUB_BASE_INFO",
	300: "CS_CLUB_ROOM_LIST",
	301: "CS_CLUB_TABLE_LIST",
	302: "CS_CLUB_CREATE_TABLE",
	303: "CS_CLUB_DISMISS_TABLE",
	304: "CS_CLUB_ENTER_ROOM",
	305: "CS_CLUB_GAME_RECORD_LIST",
	306: "CS_CLUB_GAME_VIDEOTAPE",
	307: "CS_CLUB_STATISTICS_INFO",
	308: "CS_CLUB_RECEIVE_SERVER_RATE",
	309: "CS_CLUB_SERVER_RATE_RECORD_LIST",
}
var EnClientSubCmdID_value = map[string]int32{
	"CS_CREATE_CLUB":                  1,
	"CS_RECOMMEND_CLUB_LIST":          2,
	"CS_QUERY_CLUB_INFO":              3,
	"CS_JOIN_CLUB":                    4,
	"CS_APPLY_FOR_CLUB_USER_LIST":     6,
	"CS_ALTER_CLUB_INFO":              7,
	"CS_CLUB_USER_LIST":               8,
	"CS_SET_CLUB_ADMIN":               9,
	"CS_DELETE_CLUB_USER":             10,
	"CS_CLUB_CHAT_MSG":                11,
	"CS_CLUB_LOG_LIST":                12,
	"CS_CLUB_ADMIN_LIST":              13,
	"CS_TOEXAMINE_USER_RESLUT":        14,
	"CS_CANCEL_CLUB_ADMIN":            15,
	"CS_SET_CLUB_ADMIN_RIGHT":         16,
	"CS_GET_CLUB_USER_INFO":           17,
	"CS_SET_CLUB_BASE_INFO":           18,
	"CS_CLUB_ROOM_LIST":               300,
	"CS_CLUB_TABLE_LIST":              301,
	"CS_CLUB_CREATE_TABLE":            302,
	"CS_CLUB_DISMISS_TABLE":           303,
	"CS_CLUB_ENTER_ROOM":              304,
	"CS_CLUB_GAME_RECORD_LIST":        305,
	"CS_CLUB_GAME_VIDEOTAPE":          306,
	"CS_CLUB_STATISTICS_INFO":         307,
	"CS_CLUB_RECEIVE_SERVER_RATE":     308,
	"CS_CLUB_SERVER_RATE_RECORD_LIST": 309,
}

func (x EnClientSubCmdID) Enum() *EnClientSubCmdID {
	p := new(EnClientSubCmdID)
	*p = x
	return p
}
func (x EnClientSubCmdID) String() string {
	return proto.EnumName(EnClientSubCmdID_name, int32(x))
}
func (x *EnClientSubCmdID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnClientSubCmdID_value, data, "EnClientSubCmdID")
	if err != nil {
		return err
	}
	*x = EnClientSubCmdID(value)
	return nil
}
func (EnClientSubCmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{0}
}

type EnServerSubCmdID int32

const (
	EnServerSubCmdID_SC_CREATE_CLUB                 EnServerSubCmdID = 101
	EnServerSubCmdID_SC_RECOMMEND_CLUB_LIST         EnServerSubCmdID = 102
	EnServerSubCmdID_SC_QUERY_CLUB_INFO             EnServerSubCmdID = 103
	EnServerSubCmdID_SC_JOIN_CLUB                   EnServerSubCmdID = 104
	EnServerSubCmdID_SC_APPLY_FOR_CLUB_USER_LIST    EnServerSubCmdID = 106
	EnServerSubCmdID_SC_ALTER_CLUB_INFO             EnServerSubCmdID = 107
	EnServerSubCmdID_SC_CLUB_USER_LIST              EnServerSubCmdID = 108
	EnServerSubCmdID_SC_SET_CLUB_ADMIN              EnServerSubCmdID = 109
	EnServerSubCmdID_SC_DELETE_CLUB_USER            EnServerSubCmdID = 110
	EnServerSubCmdID_SC_DELETE_CLUB_USER_NOTIFY     EnServerSubCmdID = 111
	EnServerSubCmdID_SC_CLUB_CHAT_MSG               EnServerSubCmdID = 112
	EnServerSubCmdID_SC_CLUB_LOG_LIST               EnServerSubCmdID = 113
	EnServerSubCmdID_SC_CLUB_BASE_INFO_ON_LONGIN    EnServerSubCmdID = 114
	EnServerSubCmdID_SC_CLUB_ADMIN_LIST             EnServerSubCmdID = 115
	EnServerSubCmdID_SC_TOEXAMINE_USER_RESLUT       EnServerSubCmdID = 116
	EnServerSubCmdID_SC_ADD_CLUB_USER_NOTIFY        EnServerSubCmdID = 117
	EnServerSubCmdID_SC_ADD_CLUB_ADMIN_NOTIFY       EnServerSubCmdID = 118
	EnServerSubCmdID_SC_CANCEL_CLUB_ADMIN           EnServerSubCmdID = 119
	EnServerSubCmdID_SC_CANCEL_CLUB_ADMIN_NOTIFY    EnServerSubCmdID = 120
	EnServerSubCmdID_SC_SET_CLUB_ADMIN_RIGHT        EnServerSubCmdID = 121
	EnServerSubCmdID_SC_SET_CLUB_ADMIN_RIGHT_NOTIFY EnServerSubCmdID = 122
	EnServerSubCmdID_SC_GET_CLUB_USER_INFO          EnServerSubCmdID = 123
	EnServerSubCmdID_SC_SET_CLUB_BASE_INFO          EnServerSubCmdID = 124
	EnServerSubCmdID_SC_SET_CLUB_NOTICE_NOTIFY      EnServerSubCmdID = 125
	EnServerSubCmdID_SC_JOIN_CLUB_NOTIFY_ADMIN      EnServerSubCmdID = 126
	EnServerSubCmdID_SC_ALTER_CLUB_INFO_NOTIFY      EnServerSubCmdID = 127
	EnServerSubCmdID_SC_ALTER_USER_INFO_NOTIFY      EnServerSubCmdID = 128
	// =====================liuyuanlin=======start==================
	EnServerSubCmdID_SC_CLUB_ROOM_LIST               EnServerSubCmdID = 401
	EnServerSubCmdID_SC_CLUB_TABLE_LIST              EnServerSubCmdID = 402
	EnServerSubCmdID_SC_CLUB_CREATE_TABLE            EnServerSubCmdID = 403
	EnServerSubCmdID_SC_CLUB_DISMISS_TABLE           EnServerSubCmdID = 404
	EnServerSubCmdID_SC_CLUB_ENTER_ROOM              EnServerSubCmdID = 405
	EnServerSubCmdID_SC_CLUB_GAME_RECORD_LIST        EnServerSubCmdID = 406
	EnServerSubCmdID_SC_CLUB_GAME_VIDEOTAPE          EnServerSubCmdID = 407
	EnServerSubCmdID_SC_CLUB_STATISTICS_INFO         EnServerSubCmdID = 408
	EnServerSubCmdID_SC_CLUB_RECEIVE_SERVER_RATE     EnServerSubCmdID = 409
	EnServerSubCmdID_SC_CLUB_SERVER_RATE_RECORD_LIST EnServerSubCmdID = 410
)

var EnServerSubCmdID_name = map[int32]string{
	101: "SC_CREATE_CLUB",
	102: "SC_RECOMMEND_CLUB_LIST",
	103: "SC_QUERY_CLUB_INFO",
	104: "SC_JOIN_CLUB",
	106: "SC_APPLY_FOR_CLUB_USER_LIST",
	107: "SC_ALTER_CLUB_INFO",
	108: "SC_CLUB_USER_LIST",
	109: "SC_SET_CLUB_ADMIN",
	110: "SC_DELETE_CLUB_USER",
	111: "SC_DELETE_CLUB_USER_NOTIFY",
	112: "SC_CLUB_CHAT_MSG",
	113: "SC_CLUB_LOG_LIST",
	114: "SC_CLUB_BASE_INFO_ON_LONGIN",
	115: "SC_CLUB_ADMIN_LIST",
	116: "SC_TOEXAMINE_USER_RESLUT",
	117: "SC_ADD_CLUB_USER_NOTIFY",
	118: "SC_ADD_CLUB_ADMIN_NOTIFY",
	119: "SC_CANCEL_CLUB_ADMIN",
	120: "SC_CANCEL_CLUB_ADMIN_NOTIFY",
	121: "SC_SET_CLUB_ADMIN_RIGHT",
	122: "SC_SET_CLUB_ADMIN_RIGHT_NOTIFY",
	123: "SC_GET_CLUB_USER_INFO",
	124: "SC_SET_CLUB_BASE_INFO",
	125: "SC_SET_CLUB_NOTICE_NOTIFY",
	126: "SC_JOIN_CLUB_NOTIFY_ADMIN",
	127: "SC_ALTER_CLUB_INFO_NOTIFY",
	128: "SC_ALTER_USER_INFO_NOTIFY",
	401: "SC_CLUB_ROOM_LIST",
	402: "SC_CLUB_TABLE_LIST",
	403: "SC_CLUB_CREATE_TABLE",
	404: "SC_CLUB_DISMISS_TABLE",
	405: "SC_CLUB_ENTER_ROOM",
	406: "SC_CLUB_GAME_RECORD_LIST",
	407: "SC_CLUB_GAME_VIDEOTAPE",
	408: "SC_CLUB_STATISTICS_INFO",
	409: "SC_CLUB_RECEIVE_SERVER_RATE",
	410: "SC_CLUB_SERVER_RATE_RECORD_LIST",
}
var EnServerSubCmdID_value = map[string]int32{
	"SC_CREATE_CLUB":                  101,
	"SC_RECOMMEND_CLUB_LIST":          102,
	"SC_QUERY_CLUB_INFO":              103,
	"SC_JOIN_CLUB":                    104,
	"SC_APPLY_FOR_CLUB_USER_LIST":     106,
	"SC_ALTER_CLUB_INFO":              107,
	"SC_CLUB_USER_LIST":               108,
	"SC_SET_CLUB_ADMIN":               109,
	"SC_DELETE_CLUB_USER":             110,
	"SC_DELETE_CLUB_USER_NOTIFY":      111,
	"SC_CLUB_CHAT_MSG":                112,
	"SC_CLUB_LOG_LIST":                113,
	"SC_CLUB_BASE_INFO_ON_LONGIN":     114,
	"SC_CLUB_ADMIN_LIST":              115,
	"SC_TOEXAMINE_USER_RESLUT":        116,
	"SC_ADD_CLUB_USER_NOTIFY":         117,
	"SC_ADD_CLUB_ADMIN_NOTIFY":        118,
	"SC_CANCEL_CLUB_ADMIN":            119,
	"SC_CANCEL_CLUB_ADMIN_NOTIFY":     120,
	"SC_SET_CLUB_ADMIN_RIGHT":         121,
	"SC_SET_CLUB_ADMIN_RIGHT_NOTIFY":  122,
	"SC_GET_CLUB_USER_INFO":           123,
	"SC_SET_CLUB_BASE_INFO":           124,
	"SC_SET_CLUB_NOTICE_NOTIFY":       125,
	"SC_JOIN_CLUB_NOTIFY_ADMIN":       126,
	"SC_ALTER_CLUB_INFO_NOTIFY":       127,
	"SC_ALTER_USER_INFO_NOTIFY":       128,
	"SC_CLUB_ROOM_LIST":               401,
	"SC_CLUB_TABLE_LIST":              402,
	"SC_CLUB_CREATE_TABLE":            403,
	"SC_CLUB_DISMISS_TABLE":           404,
	"SC_CLUB_ENTER_ROOM":              405,
	"SC_CLUB_GAME_RECORD_LIST":        406,
	"SC_CLUB_GAME_VIDEOTAPE":          407,
	"SC_CLUB_STATISTICS_INFO":         408,
	"SC_CLUB_RECEIVE_SERVER_RATE":     409,
	"SC_CLUB_SERVER_RATE_RECORD_LIST": 410,
}

func (x EnServerSubCmdID) Enum() *EnServerSubCmdID {
	p := new(EnServerSubCmdID)
	*p = x
	return p
}
func (x EnServerSubCmdID) String() string {
	return proto.EnumName(EnServerSubCmdID_name, int32(x))
}
func (x *EnServerSubCmdID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnServerSubCmdID_value, data, "EnServerSubCmdID")
	if err != nil {
		return err
	}
	*x = EnServerSubCmdID(value)
	return nil
}
func (EnServerSubCmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{1}
}

// CS_CREATE_CLUB						= 1;	//客户端请求创建俱乐部
type CS_CreateClub struct {
	StrClubName          *string  `protobuf:"bytes,1,req,name=strClubName" json:"strClubName,omitempty"`
	IUserID              *int64   `protobuf:"varint,2,req,name=iUserID" json:"iUserID,omitempty"`
	IWantCluId           *int32   `protobuf:"varint,3,opt,name=iWantCluId" json:"iWantCluId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_CreateClub) Reset()         { *m = CS_CreateClub{} }
func (m *CS_CreateClub) String() string { return proto.CompactTextString(m) }
func (*CS_CreateClub) ProtoMessage()    {}
func (*CS_CreateClub) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{0}
}
func (m *CS_CreateClub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_CreateClub.Unmarshal(m, b)
}
func (m *CS_CreateClub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_CreateClub.Marshal(b, m, deterministic)
}
func (dst *CS_CreateClub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_CreateClub.Merge(dst, src)
}
func (m *CS_CreateClub) XXX_Size() int {
	return xxx_messageInfo_CS_CreateClub.Size(m)
}
func (m *CS_CreateClub) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_CreateClub.DiscardUnknown(m)
}

var xxx_messageInfo_CS_CreateClub proto.InternalMessageInfo

func (m *CS_CreateClub) GetStrClubName() string {
	if m != nil && m.StrClubName != nil {
		return *m.StrClubName
	}
	return ""
}

func (m *CS_CreateClub) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

func (m *CS_CreateClub) GetIWantCluId() int32 {
	if m != nil && m.IWantCluId != nil {
		return *m.IWantCluId
	}
	return 0
}

// CS_CLUB_LOG_LIST                    = 12;   //客户端请求日志信息
type CS_ClubLogs struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,2,req,name=iUserID" json:"iUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ClubLogs) Reset()         { *m = CS_ClubLogs{} }
func (m *CS_ClubLogs) String() string { return proto.CompactTextString(m) }
func (*CS_ClubLogs) ProtoMessage()    {}
func (*CS_ClubLogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{1}
}
func (m *CS_ClubLogs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubLogs.Unmarshal(m, b)
}
func (m *CS_ClubLogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubLogs.Marshal(b, m, deterministic)
}
func (dst *CS_ClubLogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubLogs.Merge(dst, src)
}
func (m *CS_ClubLogs) XXX_Size() int {
	return xxx_messageInfo_CS_ClubLogs.Size(m)
}
func (m *CS_ClubLogs) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubLogs.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubLogs proto.InternalMessageInfo

func (m *CS_ClubLogs) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_ClubLogs) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

// CS_RECOMMEND_CLUB_LIST              = 2;    //客户端请求推广列表
type CS_RecommendClubList struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,2,req,name=iUserID" json:"iUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_RecommendClubList) Reset()         { *m = CS_RecommendClubList{} }
func (m *CS_RecommendClubList) String() string { return proto.CompactTextString(m) }
func (*CS_RecommendClubList) ProtoMessage()    {}
func (*CS_RecommendClubList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{2}
}
func (m *CS_RecommendClubList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_RecommendClubList.Unmarshal(m, b)
}
func (m *CS_RecommendClubList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_RecommendClubList.Marshal(b, m, deterministic)
}
func (dst *CS_RecommendClubList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_RecommendClubList.Merge(dst, src)
}
func (m *CS_RecommendClubList) XXX_Size() int {
	return xxx_messageInfo_CS_RecommendClubList.Size(m)
}
func (m *CS_RecommendClubList) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_RecommendClubList.DiscardUnknown(m)
}

var xxx_messageInfo_CS_RecommendClubList proto.InternalMessageInfo

func (m *CS_RecommendClubList) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_RecommendClubList) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

// CS_QUERY_CLUB_INFO                  = 3;    //客户端请求查询俱乐部信息
type CS_QueryClubInfo struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,2,req,name=iUserID" json:"iUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_QueryClubInfo) Reset()         { *m = CS_QueryClubInfo{} }
func (m *CS_QueryClubInfo) String() string { return proto.CompactTextString(m) }
func (*CS_QueryClubInfo) ProtoMessage()    {}
func (*CS_QueryClubInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{3}
}
func (m *CS_QueryClubInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_QueryClubInfo.Unmarshal(m, b)
}
func (m *CS_QueryClubInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_QueryClubInfo.Marshal(b, m, deterministic)
}
func (dst *CS_QueryClubInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_QueryClubInfo.Merge(dst, src)
}
func (m *CS_QueryClubInfo) XXX_Size() int {
	return xxx_messageInfo_CS_QueryClubInfo.Size(m)
}
func (m *CS_QueryClubInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_QueryClubInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CS_QueryClubInfo proto.InternalMessageInfo

func (m *CS_QueryClubInfo) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_QueryClubInfo) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

// CS_JOIN_CLUB                        = 4;    //客户端请求加入俱乐部
type CS_JoinClub struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,2,req,name=iUserID" json:"iUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_JoinClub) Reset()         { *m = CS_JoinClub{} }
func (m *CS_JoinClub) String() string { return proto.CompactTextString(m) }
func (*CS_JoinClub) ProtoMessage()    {}
func (*CS_JoinClub) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{4}
}
func (m *CS_JoinClub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_JoinClub.Unmarshal(m, b)
}
func (m *CS_JoinClub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_JoinClub.Marshal(b, m, deterministic)
}
func (dst *CS_JoinClub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_JoinClub.Merge(dst, src)
}
func (m *CS_JoinClub) XXX_Size() int {
	return xxx_messageInfo_CS_JoinClub.Size(m)
}
func (m *CS_JoinClub) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_JoinClub.DiscardUnknown(m)
}

var xxx_messageInfo_CS_JoinClub proto.InternalMessageInfo

func (m *CS_JoinClub) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_JoinClub) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

// CS_APPLY_FOR_CLUB_USER_LIST         = 6;   //客户端请求玩家加入俱乐部的列表（会长查看俱乐部申请列表）
type CS_ApplyForClubUserList struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,2,req,name=iUserID" json:"iUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ApplyForClubUserList) Reset()         { *m = CS_ApplyForClubUserList{} }
func (m *CS_ApplyForClubUserList) String() string { return proto.CompactTextString(m) }
func (*CS_ApplyForClubUserList) ProtoMessage()    {}
func (*CS_ApplyForClubUserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{5}
}
func (m *CS_ApplyForClubUserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ApplyForClubUserList.Unmarshal(m, b)
}
func (m *CS_ApplyForClubUserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ApplyForClubUserList.Marshal(b, m, deterministic)
}
func (dst *CS_ApplyForClubUserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ApplyForClubUserList.Merge(dst, src)
}
func (m *CS_ApplyForClubUserList) XXX_Size() int {
	return xxx_messageInfo_CS_ApplyForClubUserList.Size(m)
}
func (m *CS_ApplyForClubUserList) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ApplyForClubUserList.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ApplyForClubUserList proto.InternalMessageInfo

func (m *CS_ApplyForClubUserList) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_ApplyForClubUserList) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

// CS_ALTER_CLUB_INFO                  = 7;   //客户端请求修改俱乐部信息（会长或管理员）
type CS_AlterClubInfo struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,2,req,name=iUserID" json:"iUserID,omitempty"`
	ISetRecommend        *int32   `protobuf:"varint,3,opt,name=iSetRecommend" json:"iSetRecommend,omitempty"`
	IJoinCoin            *int64   `protobuf:"varint,4,opt,name=iJoinCoin" json:"iJoinCoin,omitempty"`
	ICheckJoin           *int32   `protobuf:"varint,5,opt,name=iCheckJoin" json:"iCheckJoin,omitempty"`
	IChatLimit           *int32   `protobuf:"varint,6,opt,name=iChatLimit" json:"iChatLimit,omitempty"`
	StrClubName          *string  `protobuf:"bytes,7,opt,name=strClubName" json:"strClubName,omitempty"`
	StrClubKeFu          *string  `protobuf:"bytes,8,opt,name=strClubKeFu" json:"strClubKeFu,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_AlterClubInfo) Reset()         { *m = CS_AlterClubInfo{} }
func (m *CS_AlterClubInfo) String() string { return proto.CompactTextString(m) }
func (*CS_AlterClubInfo) ProtoMessage()    {}
func (*CS_AlterClubInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{6}
}
func (m *CS_AlterClubInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_AlterClubInfo.Unmarshal(m, b)
}
func (m *CS_AlterClubInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_AlterClubInfo.Marshal(b, m, deterministic)
}
func (dst *CS_AlterClubInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_AlterClubInfo.Merge(dst, src)
}
func (m *CS_AlterClubInfo) XXX_Size() int {
	return xxx_messageInfo_CS_AlterClubInfo.Size(m)
}
func (m *CS_AlterClubInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_AlterClubInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CS_AlterClubInfo proto.InternalMessageInfo

func (m *CS_AlterClubInfo) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_AlterClubInfo) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

func (m *CS_AlterClubInfo) GetISetRecommend() int32 {
	if m != nil && m.ISetRecommend != nil {
		return *m.ISetRecommend
	}
	return 0
}

func (m *CS_AlterClubInfo) GetIJoinCoin() int64 {
	if m != nil && m.IJoinCoin != nil {
		return *m.IJoinCoin
	}
	return 0
}

func (m *CS_AlterClubInfo) GetICheckJoin() int32 {
	if m != nil && m.ICheckJoin != nil {
		return *m.ICheckJoin
	}
	return 0
}

func (m *CS_AlterClubInfo) GetIChatLimit() int32 {
	if m != nil && m.IChatLimit != nil {
		return *m.IChatLimit
	}
	return 0
}

func (m *CS_AlterClubInfo) GetStrClubName() string {
	if m != nil && m.StrClubName != nil {
		return *m.StrClubName
	}
	return ""
}

func (m *CS_AlterClubInfo) GetStrClubKeFu() string {
	if m != nil && m.StrClubKeFu != nil {
		return *m.StrClubKeFu
	}
	return ""
}

// CS_CLUB_USER_LIST                   = 8;   //客户端请求俱乐部玩家列表（会长或管理员）
type CS_ClubUserList struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,2,req,name=iUserID" json:"iUserID,omitempty"`
	IIndexStart          *int32   `protobuf:"varint,3,req,name=iIndexStart" json:"iIndexStart,omitempty"`
	IIndexEnd            *int32   `protobuf:"varint,4,req,name=iIndexEnd" json:"iIndexEnd,omitempty"`
	IFilter              *int32   `protobuf:"varint,5,opt,name=iFilter" json:"iFilter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ClubUserList) Reset()         { *m = CS_ClubUserList{} }
func (m *CS_ClubUserList) String() string { return proto.CompactTextString(m) }
func (*CS_ClubUserList) ProtoMessage()    {}
func (*CS_ClubUserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{7}
}
func (m *CS_ClubUserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubUserList.Unmarshal(m, b)
}
func (m *CS_ClubUserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubUserList.Marshal(b, m, deterministic)
}
func (dst *CS_ClubUserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubUserList.Merge(dst, src)
}
func (m *CS_ClubUserList) XXX_Size() int {
	return xxx_messageInfo_CS_ClubUserList.Size(m)
}
func (m *CS_ClubUserList) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubUserList.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubUserList proto.InternalMessageInfo

func (m *CS_ClubUserList) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_ClubUserList) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

func (m *CS_ClubUserList) GetIIndexStart() int32 {
	if m != nil && m.IIndexStart != nil {
		return *m.IIndexStart
	}
	return 0
}

func (m *CS_ClubUserList) GetIIndexEnd() int32 {
	if m != nil && m.IIndexEnd != nil {
		return *m.IIndexEnd
	}
	return 0
}

func (m *CS_ClubUserList) GetIFilter() int32 {
	if m != nil && m.IFilter != nil {
		return *m.IFilter
	}
	return 0
}

// CS_SET_CLUB_ADMIN                   = 9;   //客户端请求设置管理员（会长或管理员）
type CS_SetClubAdmin struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,2,req,name=iUserID" json:"iUserID,omitempty"`
	IAdminID             *int64   `protobuf:"varint,3,req,name=iAdminID" json:"iAdminID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_SetClubAdmin) Reset()         { *m = CS_SetClubAdmin{} }
func (m *CS_SetClubAdmin) String() string { return proto.CompactTextString(m) }
func (*CS_SetClubAdmin) ProtoMessage()    {}
func (*CS_SetClubAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{8}
}
func (m *CS_SetClubAdmin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_SetClubAdmin.Unmarshal(m, b)
}
func (m *CS_SetClubAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_SetClubAdmin.Marshal(b, m, deterministic)
}
func (dst *CS_SetClubAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_SetClubAdmin.Merge(dst, src)
}
func (m *CS_SetClubAdmin) XXX_Size() int {
	return xxx_messageInfo_CS_SetClubAdmin.Size(m)
}
func (m *CS_SetClubAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_SetClubAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_CS_SetClubAdmin proto.InternalMessageInfo

func (m *CS_SetClubAdmin) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_SetClubAdmin) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

func (m *CS_SetClubAdmin) GetIAdminID() int64 {
	if m != nil && m.IAdminID != nil {
		return *m.IAdminID
	}
	return 0
}

// CS_DELETE_CLUB_USER                 = 10;   //客户端请求删除俱乐部玩家（会长或管理员）
type CS_DeleteClubUser struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,2,req,name=iUserID" json:"iUserID,omitempty"`
	IAdminID             *int64   `protobuf:"varint,3,req,name=iAdminID" json:"iAdminID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_DeleteClubUser) Reset()         { *m = CS_DeleteClubUser{} }
func (m *CS_DeleteClubUser) String() string { return proto.CompactTextString(m) }
func (*CS_DeleteClubUser) ProtoMessage()    {}
func (*CS_DeleteClubUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{9}
}
func (m *CS_DeleteClubUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_DeleteClubUser.Unmarshal(m, b)
}
func (m *CS_DeleteClubUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_DeleteClubUser.Marshal(b, m, deterministic)
}
func (dst *CS_DeleteClubUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_DeleteClubUser.Merge(dst, src)
}
func (m *CS_DeleteClubUser) XXX_Size() int {
	return xxx_messageInfo_CS_DeleteClubUser.Size(m)
}
func (m *CS_DeleteClubUser) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_DeleteClubUser.DiscardUnknown(m)
}

var xxx_messageInfo_CS_DeleteClubUser proto.InternalMessageInfo

func (m *CS_DeleteClubUser) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_DeleteClubUser) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

func (m *CS_DeleteClubUser) GetIAdminID() int64 {
	if m != nil && m.IAdminID != nil {
		return *m.IAdminID
	}
	return 0
}

// 	CS_CLUB_CHAT_MSG                    = 11;   //客户端请求发送聊天信息
type CS_ClubChatMsg struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	IMsgType             *int64   `protobuf:"varint,2,opt,name=iMsgType" json:"iMsgType,omitempty"`
	MTextContent         *string  `protobuf:"bytes,3,opt,name=mTextContent" json:"mTextContent,omitempty"`
	MBinaryContent       []byte   `protobuf:"bytes,4,opt,name=mBinaryContent" json:"mBinaryContent,omitempty"`
	MContentTime         *uint32  `protobuf:"varint,5,opt,name=mContentTime" json:"mContentTime,omitempty"`
	MImageId             *uint32  `protobuf:"varint,6,opt,name=mImageId" json:"mImageId,omitempty"`
	MMediaId             *uint32  `protobuf:"varint,7,opt,name=mMediaId" json:"mMediaId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ClubChatMsg) Reset()         { *m = CS_ClubChatMsg{} }
func (m *CS_ClubChatMsg) String() string { return proto.CompactTextString(m) }
func (*CS_ClubChatMsg) ProtoMessage()    {}
func (*CS_ClubChatMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{10}
}
func (m *CS_ClubChatMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubChatMsg.Unmarshal(m, b)
}
func (m *CS_ClubChatMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubChatMsg.Marshal(b, m, deterministic)
}
func (dst *CS_ClubChatMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubChatMsg.Merge(dst, src)
}
func (m *CS_ClubChatMsg) XXX_Size() int {
	return xxx_messageInfo_CS_ClubChatMsg.Size(m)
}
func (m *CS_ClubChatMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubChatMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubChatMsg proto.InternalMessageInfo

func (m *CS_ClubChatMsg) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_ClubChatMsg) GetIMsgType() int64 {
	if m != nil && m.IMsgType != nil {
		return *m.IMsgType
	}
	return 0
}

func (m *CS_ClubChatMsg) GetMTextContent() string {
	if m != nil && m.MTextContent != nil {
		return *m.MTextContent
	}
	return ""
}

func (m *CS_ClubChatMsg) GetMBinaryContent() []byte {
	if m != nil {
		return m.MBinaryContent
	}
	return nil
}

func (m *CS_ClubChatMsg) GetMContentTime() uint32 {
	if m != nil && m.MContentTime != nil {
		return *m.MContentTime
	}
	return 0
}

func (m *CS_ClubChatMsg) GetMImageId() uint32 {
	if m != nil && m.MImageId != nil {
		return *m.MImageId
	}
	return 0
}

func (m *CS_ClubChatMsg) GetMMediaId() uint32 {
	if m != nil && m.MMediaId != nil {
		return *m.MMediaId
	}
	return 0
}

// CS_CLUB_ADMIN_LIST                  = 13;   //客户端请求管理员列表
type CS_ClubAdminList struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,2,req,name=iUserID" json:"iUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ClubAdminList) Reset()         { *m = CS_ClubAdminList{} }
func (m *CS_ClubAdminList) String() string { return proto.CompactTextString(m) }
func (*CS_ClubAdminList) ProtoMessage()    {}
func (*CS_ClubAdminList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{11}
}
func (m *CS_ClubAdminList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubAdminList.Unmarshal(m, b)
}
func (m *CS_ClubAdminList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubAdminList.Marshal(b, m, deterministic)
}
func (dst *CS_ClubAdminList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubAdminList.Merge(dst, src)
}
func (m *CS_ClubAdminList) XXX_Size() int {
	return xxx_messageInfo_CS_ClubAdminList.Size(m)
}
func (m *CS_ClubAdminList) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubAdminList.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubAdminList proto.InternalMessageInfo

func (m *CS_ClubAdminList) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_ClubAdminList) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

// CS_TOEXAMINE_USER_RESLUT            = 14;   //客户端管理员审核玩家结果
type CS_ToExamineUserResult struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,2,req,name=iUserID" json:"iUserID,omitempty"`
	IAdminID             *int64   `protobuf:"varint,3,req,name=iAdminID" json:"iAdminID,omitempty"`
	IResult              *int32   `protobuf:"varint,4,req,name=iResult" json:"iResult,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ToExamineUserResult) Reset()         { *m = CS_ToExamineUserResult{} }
func (m *CS_ToExamineUserResult) String() string { return proto.CompactTextString(m) }
func (*CS_ToExamineUserResult) ProtoMessage()    {}
func (*CS_ToExamineUserResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{12}
}
func (m *CS_ToExamineUserResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ToExamineUserResult.Unmarshal(m, b)
}
func (m *CS_ToExamineUserResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ToExamineUserResult.Marshal(b, m, deterministic)
}
func (dst *CS_ToExamineUserResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ToExamineUserResult.Merge(dst, src)
}
func (m *CS_ToExamineUserResult) XXX_Size() int {
	return xxx_messageInfo_CS_ToExamineUserResult.Size(m)
}
func (m *CS_ToExamineUserResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ToExamineUserResult.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ToExamineUserResult proto.InternalMessageInfo

func (m *CS_ToExamineUserResult) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_ToExamineUserResult) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

func (m *CS_ToExamineUserResult) GetIAdminID() int64 {
	if m != nil && m.IAdminID != nil {
		return *m.IAdminID
	}
	return 0
}

func (m *CS_ToExamineUserResult) GetIResult() int32 {
	if m != nil && m.IResult != nil {
		return *m.IResult
	}
	return 0
}

// CS_CANCEL_CLUB_ADMIN                = 15;   //客户端请求取消管理 员（会长或管理员）
type CS_CancelClubAdmin struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,2,req,name=iUserID" json:"iUserID,omitempty"`
	IAdminID             *int64   `protobuf:"varint,3,req,name=iAdminID" json:"iAdminID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_CancelClubAdmin) Reset()         { *m = CS_CancelClubAdmin{} }
func (m *CS_CancelClubAdmin) String() string { return proto.CompactTextString(m) }
func (*CS_CancelClubAdmin) ProtoMessage()    {}
func (*CS_CancelClubAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{13}
}
func (m *CS_CancelClubAdmin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_CancelClubAdmin.Unmarshal(m, b)
}
func (m *CS_CancelClubAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_CancelClubAdmin.Marshal(b, m, deterministic)
}
func (dst *CS_CancelClubAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_CancelClubAdmin.Merge(dst, src)
}
func (m *CS_CancelClubAdmin) XXX_Size() int {
	return xxx_messageInfo_CS_CancelClubAdmin.Size(m)
}
func (m *CS_CancelClubAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_CancelClubAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_CS_CancelClubAdmin proto.InternalMessageInfo

func (m *CS_CancelClubAdmin) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_CancelClubAdmin) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

func (m *CS_CancelClubAdmin) GetIAdminID() int64 {
	if m != nil && m.IAdminID != nil {
		return *m.IAdminID
	}
	return 0
}

type CS_SetClubAdminRight struct {
	AdminRight           []int32  `protobuf:"varint,1,rep,name=adminRight" json:"adminRight,omitempty"`
	IClubID              *int64   `protobuf:"varint,2,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,3,req,name=iUserID" json:"iUserID,omitempty"`
	IAdminID             *int64   `protobuf:"varint,4,req,name=iAdminID" json:"iAdminID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_SetClubAdminRight) Reset()         { *m = CS_SetClubAdminRight{} }
func (m *CS_SetClubAdminRight) String() string { return proto.CompactTextString(m) }
func (*CS_SetClubAdminRight) ProtoMessage()    {}
func (*CS_SetClubAdminRight) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{14}
}
func (m *CS_SetClubAdminRight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_SetClubAdminRight.Unmarshal(m, b)
}
func (m *CS_SetClubAdminRight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_SetClubAdminRight.Marshal(b, m, deterministic)
}
func (dst *CS_SetClubAdminRight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_SetClubAdminRight.Merge(dst, src)
}
func (m *CS_SetClubAdminRight) XXX_Size() int {
	return xxx_messageInfo_CS_SetClubAdminRight.Size(m)
}
func (m *CS_SetClubAdminRight) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_SetClubAdminRight.DiscardUnknown(m)
}

var xxx_messageInfo_CS_SetClubAdminRight proto.InternalMessageInfo

func (m *CS_SetClubAdminRight) GetAdminRight() []int32 {
	if m != nil {
		return m.AdminRight
	}
	return nil
}

func (m *CS_SetClubAdminRight) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_SetClubAdminRight) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

func (m *CS_SetClubAdminRight) GetIAdminID() int64 {
	if m != nil && m.IAdminID != nil {
		return *m.IAdminID
	}
	return 0
}

// CS_GET_CLUB_USER_INFO               = 17;   //客户端请求获取玩家信息
type CS_GetClubUserInfo struct {
	IClubID              *int64   `protobuf:"varint,2,req,name=iClubID" json:"iClubID,omitempty"`
	IUserID              *int64   `protobuf:"varint,3,req,name=iUserID" json:"iUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_GetClubUserInfo) Reset()         { *m = CS_GetClubUserInfo{} }
func (m *CS_GetClubUserInfo) String() string { return proto.CompactTextString(m) }
func (*CS_GetClubUserInfo) ProtoMessage()    {}
func (*CS_GetClubUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{15}
}
func (m *CS_GetClubUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_GetClubUserInfo.Unmarshal(m, b)
}
func (m *CS_GetClubUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_GetClubUserInfo.Marshal(b, m, deterministic)
}
func (dst *CS_GetClubUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_GetClubUserInfo.Merge(dst, src)
}
func (m *CS_GetClubUserInfo) XXX_Size() int {
	return xxx_messageInfo_CS_GetClubUserInfo.Size(m)
}
func (m *CS_GetClubUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_GetClubUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CS_GetClubUserInfo proto.InternalMessageInfo

func (m *CS_GetClubUserInfo) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_GetClubUserInfo) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

// CS_SET_CLUB_BASE_INFO               = 18;   //客户端请求修改俱乐部基本信息
type CS_SetClubBaseInfo struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	ISetType             *int32   `protobuf:"varint,2,req,name=iSetType" json:"iSetType,omitempty"`
	StrMsg               *string  `protobuf:"bytes,3,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_SetClubBaseInfo) Reset()         { *m = CS_SetClubBaseInfo{} }
func (m *CS_SetClubBaseInfo) String() string { return proto.CompactTextString(m) }
func (*CS_SetClubBaseInfo) ProtoMessage()    {}
func (*CS_SetClubBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{16}
}
func (m *CS_SetClubBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_SetClubBaseInfo.Unmarshal(m, b)
}
func (m *CS_SetClubBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_SetClubBaseInfo.Marshal(b, m, deterministic)
}
func (dst *CS_SetClubBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_SetClubBaseInfo.Merge(dst, src)
}
func (m *CS_SetClubBaseInfo) XXX_Size() int {
	return xxx_messageInfo_CS_SetClubBaseInfo.Size(m)
}
func (m *CS_SetClubBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_SetClubBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CS_SetClubBaseInfo proto.InternalMessageInfo

func (m *CS_SetClubBaseInfo) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *CS_SetClubBaseInfo) GetISetType() int32 {
	if m != nil && m.ISetType != nil {
		return *m.ISetType
	}
	return 0
}

func (m *CS_SetClubBaseInfo) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

// 俱乐部基本信息
type ST_ClubBaseInfo struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	StrClubName          *string  `protobuf:"bytes,2,req,name=strClubName" json:"strClubName,omitempty"`
	StrClubBrief         *string  `protobuf:"bytes,3,req,name=strClubBrief" json:"strClubBrief,omitempty"`
	StrLogo              *string  `protobuf:"bytes,4,req,name=strLogo" json:"strLogo,omitempty"`
	IMemberLimit         *int64   `protobuf:"varint,5,req,name=iMemberLimit" json:"iMemberLimit,omitempty"`
	IMemberCount         *int64   `protobuf:"varint,6,req,name=iMemberCount" json:"iMemberCount,omitempty"`
	IJoinCoin            *int64   `protobuf:"varint,7,req,name=iJoinCoin" json:"iJoinCoin,omitempty"`
	ISetRecommend        *int32   `protobuf:"varint,8,req,name=iSetRecommend" json:"iSetRecommend,omitempty"`
	ICheckJoin           *int32   `protobuf:"varint,9,req,name=iCheckJoin" json:"iCheckJoin,omitempty"`
	IChatLimit           *int32   `protobuf:"varint,10,req,name=iChatLimit" json:"iChatLimit,omitempty"`
	StrQrTicket          *string  `protobuf:"bytes,11,opt,name=strQrTicket" json:"strQrTicket,omitempty"`
	StrQrUrl             *string  `protobuf:"bytes,12,opt,name=strQrUrl" json:"strQrUrl,omitempty"`
	IQrExpire            *int64   `protobuf:"varint,13,opt,name=iQrExpire" json:"iQrExpire,omitempty"`
	IQrCreateTime        *int64   `protobuf:"varint,14,opt,name=iQrCreateTime" json:"iQrCreateTime,omitempty"`
	StrClubKeFu          *string  `protobuf:"bytes,15,opt,name=strClubKeFu" json:"strClubKeFu,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ST_ClubBaseInfo) Reset()         { *m = ST_ClubBaseInfo{} }
func (m *ST_ClubBaseInfo) String() string { return proto.CompactTextString(m) }
func (*ST_ClubBaseInfo) ProtoMessage()    {}
func (*ST_ClubBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{17}
}
func (m *ST_ClubBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ST_ClubBaseInfo.Unmarshal(m, b)
}
func (m *ST_ClubBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ST_ClubBaseInfo.Marshal(b, m, deterministic)
}
func (dst *ST_ClubBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ST_ClubBaseInfo.Merge(dst, src)
}
func (m *ST_ClubBaseInfo) XXX_Size() int {
	return xxx_messageInfo_ST_ClubBaseInfo.Size(m)
}
func (m *ST_ClubBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ST_ClubBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ST_ClubBaseInfo proto.InternalMessageInfo

func (m *ST_ClubBaseInfo) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *ST_ClubBaseInfo) GetStrClubName() string {
	if m != nil && m.StrClubName != nil {
		return *m.StrClubName
	}
	return ""
}

func (m *ST_ClubBaseInfo) GetStrClubBrief() string {
	if m != nil && m.StrClubBrief != nil {
		return *m.StrClubBrief
	}
	return ""
}

func (m *ST_ClubBaseInfo) GetStrLogo() string {
	if m != nil && m.StrLogo != nil {
		return *m.StrLogo
	}
	return ""
}

func (m *ST_ClubBaseInfo) GetIMemberLimit() int64 {
	if m != nil && m.IMemberLimit != nil {
		return *m.IMemberLimit
	}
	return 0
}

func (m *ST_ClubBaseInfo) GetIMemberCount() int64 {
	if m != nil && m.IMemberCount != nil {
		return *m.IMemberCount
	}
	return 0
}

func (m *ST_ClubBaseInfo) GetIJoinCoin() int64 {
	if m != nil && m.IJoinCoin != nil {
		return *m.IJoinCoin
	}
	return 0
}

func (m *ST_ClubBaseInfo) GetISetRecommend() int32 {
	if m != nil && m.ISetRecommend != nil {
		return *m.ISetRecommend
	}
	return 0
}

func (m *ST_ClubBaseInfo) GetICheckJoin() int32 {
	if m != nil && m.ICheckJoin != nil {
		return *m.ICheckJoin
	}
	return 0
}

func (m *ST_ClubBaseInfo) GetIChatLimit() int32 {
	if m != nil && m.IChatLimit != nil {
		return *m.IChatLimit
	}
	return 0
}

func (m *ST_ClubBaseInfo) GetStrQrTicket() string {
	if m != nil && m.StrQrTicket != nil {
		return *m.StrQrTicket
	}
	return ""
}

func (m *ST_ClubBaseInfo) GetStrQrUrl() string {
	if m != nil && m.StrQrUrl != nil {
		return *m.StrQrUrl
	}
	return ""
}

func (m *ST_ClubBaseInfo) GetIQrExpire() int64 {
	if m != nil && m.IQrExpire != nil {
		return *m.IQrExpire
	}
	return 0
}

func (m *ST_ClubBaseInfo) GetIQrCreateTime() int64 {
	if m != nil && m.IQrCreateTime != nil {
		return *m.IQrCreateTime
	}
	return 0
}

func (m *ST_ClubBaseInfo) GetStrClubKeFu() string {
	if m != nil && m.StrClubKeFu != nil {
		return *m.StrClubKeFu
	}
	return ""
}

// 俱乐部基本信息
type ST_ClubInfo struct {
	StClubBaseInfo       *ST_ClubBaseInfo `protobuf:"bytes,1,req,name=stClubBaseInfo" json:"stClubBaseInfo,omitempty"`
	StrRootName          *string          `protobuf:"bytes,2,req,name=strRootName" json:"strRootName,omitempty"`
	IRootID              *int64           `protobuf:"varint,3,req,name=iRootID" json:"iRootID,omitempty"`
	ICreateTime          *int64           `protobuf:"varint,4,req,name=iCreateTime" json:"iCreateTime,omitempty"`
	IActivitySum         *int64           `protobuf:"varint,5,req,name=iActivitySum" json:"iActivitySum,omitempty"`
	IActivityDay         *int64           `protobuf:"varint,6,req,name=iActivityDay" json:"iActivityDay,omitempty"`
	StrNotice            *string          `protobuf:"bytes,7,req,name=strNotice" json:"strNotice,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ST_ClubInfo) Reset()         { *m = ST_ClubInfo{} }
func (m *ST_ClubInfo) String() string { return proto.CompactTextString(m) }
func (*ST_ClubInfo) ProtoMessage()    {}
func (*ST_ClubInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{18}
}
func (m *ST_ClubInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ST_ClubInfo.Unmarshal(m, b)
}
func (m *ST_ClubInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ST_ClubInfo.Marshal(b, m, deterministic)
}
func (dst *ST_ClubInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ST_ClubInfo.Merge(dst, src)
}
func (m *ST_ClubInfo) XXX_Size() int {
	return xxx_messageInfo_ST_ClubInfo.Size(m)
}
func (m *ST_ClubInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ST_ClubInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ST_ClubInfo proto.InternalMessageInfo

func (m *ST_ClubInfo) GetStClubBaseInfo() *ST_ClubBaseInfo {
	if m != nil {
		return m.StClubBaseInfo
	}
	return nil
}

func (m *ST_ClubInfo) GetStrRootName() string {
	if m != nil && m.StrRootName != nil {
		return *m.StrRootName
	}
	return ""
}

func (m *ST_ClubInfo) GetIRootID() int64 {
	if m != nil && m.IRootID != nil {
		return *m.IRootID
	}
	return 0
}

func (m *ST_ClubInfo) GetICreateTime() int64 {
	if m != nil && m.ICreateTime != nil {
		return *m.ICreateTime
	}
	return 0
}

func (m *ST_ClubInfo) GetIActivitySum() int64 {
	if m != nil && m.IActivitySum != nil {
		return *m.IActivitySum
	}
	return 0
}

func (m *ST_ClubInfo) GetIActivityDay() int64 {
	if m != nil && m.IActivityDay != nil {
		return *m.IActivityDay
	}
	return 0
}

func (m *ST_ClubInfo) GetStrNotice() string {
	if m != nil && m.StrNotice != nil {
		return *m.StrNotice
	}
	return ""
}

// SC_CREATE_CLUB						= 101;	//服务端创建俱乐部返回
type SC_CreateClub struct {
	StClubInfo           *ST_ClubInfo `protobuf:"bytes,1,opt,name=stClubInfo" json:"stClubInfo,omitempty"`
	StrMsg               *string      `protobuf:"bytes,2,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SC_CreateClub) Reset()         { *m = SC_CreateClub{} }
func (m *SC_CreateClub) String() string { return proto.CompactTextString(m) }
func (*SC_CreateClub) ProtoMessage()    {}
func (*SC_CreateClub) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{19}
}
func (m *SC_CreateClub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_CreateClub.Unmarshal(m, b)
}
func (m *SC_CreateClub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_CreateClub.Marshal(b, m, deterministic)
}
func (dst *SC_CreateClub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_CreateClub.Merge(dst, src)
}
func (m *SC_CreateClub) XXX_Size() int {
	return xxx_messageInfo_SC_CreateClub.Size(m)
}
func (m *SC_CreateClub) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_CreateClub.DiscardUnknown(m)
}

var xxx_messageInfo_SC_CreateClub proto.InternalMessageInfo

func (m *SC_CreateClub) GetStClubInfo() *ST_ClubInfo {
	if m != nil {
		return m.StClubInfo
	}
	return nil
}

func (m *SC_CreateClub) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

// SC_RECOMMEND_CLUB_LIST              = 102;    //服务端推广列表返回
type SC_RecommendClubList struct {
	StRecommendList      []*ST_ClubBaseInfo `protobuf:"bytes,1,rep,name=stRecommendList" json:"stRecommendList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SC_RecommendClubList) Reset()         { *m = SC_RecommendClubList{} }
func (m *SC_RecommendClubList) String() string { return proto.CompactTextString(m) }
func (*SC_RecommendClubList) ProtoMessage()    {}
func (*SC_RecommendClubList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{20}
}
func (m *SC_RecommendClubList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_RecommendClubList.Unmarshal(m, b)
}
func (m *SC_RecommendClubList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_RecommendClubList.Marshal(b, m, deterministic)
}
func (dst *SC_RecommendClubList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_RecommendClubList.Merge(dst, src)
}
func (m *SC_RecommendClubList) XXX_Size() int {
	return xxx_messageInfo_SC_RecommendClubList.Size(m)
}
func (m *SC_RecommendClubList) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_RecommendClubList.DiscardUnknown(m)
}

var xxx_messageInfo_SC_RecommendClubList proto.InternalMessageInfo

func (m *SC_RecommendClubList) GetStRecommendList() []*ST_ClubBaseInfo {
	if m != nil {
		return m.StRecommendList
	}
	return nil
}

// SC_QUERY_CLUB_INFO                  = 103;    //服务端查询俱乐部信息返回
type SC_QueryClubInfo struct {
	StClubInfo           *ST_ClubInfo `protobuf:"bytes,1,opt,name=stClubInfo" json:"stClubInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SC_QueryClubInfo) Reset()         { *m = SC_QueryClubInfo{} }
func (m *SC_QueryClubInfo) String() string { return proto.CompactTextString(m) }
func (*SC_QueryClubInfo) ProtoMessage()    {}
func (*SC_QueryClubInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{21}
}
func (m *SC_QueryClubInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_QueryClubInfo.Unmarshal(m, b)
}
func (m *SC_QueryClubInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_QueryClubInfo.Marshal(b, m, deterministic)
}
func (dst *SC_QueryClubInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_QueryClubInfo.Merge(dst, src)
}
func (m *SC_QueryClubInfo) XXX_Size() int {
	return xxx_messageInfo_SC_QueryClubInfo.Size(m)
}
func (m *SC_QueryClubInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_QueryClubInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SC_QueryClubInfo proto.InternalMessageInfo

func (m *SC_QueryClubInfo) GetStClubInfo() *ST_ClubInfo {
	if m != nil {
		return m.StClubInfo
	}
	return nil
}

// SC_JOIN_CLUB                        = 104;    //服务端加入俱乐部返回
type SC_JoinClub struct {
	IResult              *int32   `protobuf:"varint,1,req,name=iResult" json:"iResult,omitempty"`
	StrMsg               *string  `protobuf:"bytes,2,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_JoinClub) Reset()         { *m = SC_JoinClub{} }
func (m *SC_JoinClub) String() string { return proto.CompactTextString(m) }
func (*SC_JoinClub) ProtoMessage()    {}
func (*SC_JoinClub) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{22}
}
func (m *SC_JoinClub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_JoinClub.Unmarshal(m, b)
}
func (m *SC_JoinClub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_JoinClub.Marshal(b, m, deterministic)
}
func (dst *SC_JoinClub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_JoinClub.Merge(dst, src)
}
func (m *SC_JoinClub) XXX_Size() int {
	return xxx_messageInfo_SC_JoinClub.Size(m)
}
func (m *SC_JoinClub) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_JoinClub.DiscardUnknown(m)
}

var xxx_messageInfo_SC_JoinClub proto.InternalMessageInfo

func (m *SC_JoinClub) GetIResult() int32 {
	if m != nil && m.IResult != nil {
		return *m.IResult
	}
	return 0
}

func (m *SC_JoinClub) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

// SC_APPLY_FOR_CLUB_USER_LIST         = 106;   //服务端玩家加入俱乐部的列表返回
type ST_UserBaseInfo struct {
	StrUserLogo          *string  `protobuf:"bytes,1,req,name=strUserLogo" json:"strUserLogo,omitempty"`
	StrUserName          *string  `protobuf:"bytes,2,req,name=strUserName" json:"strUserName,omitempty"`
	IUserID              *int64   `protobuf:"varint,3,req,name=iUserID" json:"iUserID,omitempty"`
	IUserVip             *int64   `protobuf:"varint,4,req,name=iUserVip" json:"iUserVip,omitempty"`
	IAccid               *int64   `protobuf:"varint,5,opt,name=iAccid" json:"iAccid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ST_UserBaseInfo) Reset()         { *m = ST_UserBaseInfo{} }
func (m *ST_UserBaseInfo) String() string { return proto.CompactTextString(m) }
func (*ST_UserBaseInfo) ProtoMessage()    {}
func (*ST_UserBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{23}
}
func (m *ST_UserBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ST_UserBaseInfo.Unmarshal(m, b)
}
func (m *ST_UserBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ST_UserBaseInfo.Marshal(b, m, deterministic)
}
func (dst *ST_UserBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ST_UserBaseInfo.Merge(dst, src)
}
func (m *ST_UserBaseInfo) XXX_Size() int {
	return xxx_messageInfo_ST_UserBaseInfo.Size(m)
}
func (m *ST_UserBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ST_UserBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ST_UserBaseInfo proto.InternalMessageInfo

func (m *ST_UserBaseInfo) GetStrUserLogo() string {
	if m != nil && m.StrUserLogo != nil {
		return *m.StrUserLogo
	}
	return ""
}

func (m *ST_UserBaseInfo) GetStrUserName() string {
	if m != nil && m.StrUserName != nil {
		return *m.StrUserName
	}
	return ""
}

func (m *ST_UserBaseInfo) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

func (m *ST_UserBaseInfo) GetIUserVip() int64 {
	if m != nil && m.IUserVip != nil {
		return *m.IUserVip
	}
	return 0
}

func (m *ST_UserBaseInfo) GetIAccid() int64 {
	if m != nil && m.IAccid != nil {
		return *m.IAccid
	}
	return 0
}

type SC_ApplyForClubUserList struct {
	StUserLists          []*ST_UserBaseInfo `protobuf:"bytes,1,rep,name=stUserLists" json:"stUserLists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SC_ApplyForClubUserList) Reset()         { *m = SC_ApplyForClubUserList{} }
func (m *SC_ApplyForClubUserList) String() string { return proto.CompactTextString(m) }
func (*SC_ApplyForClubUserList) ProtoMessage()    {}
func (*SC_ApplyForClubUserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{24}
}
func (m *SC_ApplyForClubUserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ApplyForClubUserList.Unmarshal(m, b)
}
func (m *SC_ApplyForClubUserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ApplyForClubUserList.Marshal(b, m, deterministic)
}
func (dst *SC_ApplyForClubUserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ApplyForClubUserList.Merge(dst, src)
}
func (m *SC_ApplyForClubUserList) XXX_Size() int {
	return xxx_messageInfo_SC_ApplyForClubUserList.Size(m)
}
func (m *SC_ApplyForClubUserList) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ApplyForClubUserList.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ApplyForClubUserList proto.InternalMessageInfo

func (m *SC_ApplyForClubUserList) GetStUserLists() []*ST_UserBaseInfo {
	if m != nil {
		return m.StUserLists
	}
	return nil
}

// SC_ALTER_CLUB_INFO                  = 107;   //服务端修改俱乐部信息返回（会长或管理员）
type SC_AlterClubInfo struct {
	IResult              *int32   `protobuf:"varint,1,req,name=iResult" json:"iResult,omitempty"`
	StrMsg               *string  `protobuf:"bytes,2,req,name=strMsg" json:"strMsg,omitempty"`
	ISetRecommend        *int32   `protobuf:"varint,3,opt,name=iSetRecommend" json:"iSetRecommend,omitempty"`
	IJoinCoin            *int64   `protobuf:"varint,4,opt,name=iJoinCoin" json:"iJoinCoin,omitempty"`
	ICheckJoin           *int32   `protobuf:"varint,5,opt,name=iCheckJoin" json:"iCheckJoin,omitempty"`
	IChatLimit           *int32   `protobuf:"varint,6,opt,name=iChatLimit" json:"iChatLimit,omitempty"`
	StrClubName          *string  `protobuf:"bytes,7,opt,name=strClubName" json:"strClubName,omitempty"`
	StrClubKeFu          *string  `protobuf:"bytes,8,opt,name=strClubKeFu" json:"strClubKeFu,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_AlterClubInfo) Reset()         { *m = SC_AlterClubInfo{} }
func (m *SC_AlterClubInfo) String() string { return proto.CompactTextString(m) }
func (*SC_AlterClubInfo) ProtoMessage()    {}
func (*SC_AlterClubInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{25}
}
func (m *SC_AlterClubInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_AlterClubInfo.Unmarshal(m, b)
}
func (m *SC_AlterClubInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_AlterClubInfo.Marshal(b, m, deterministic)
}
func (dst *SC_AlterClubInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_AlterClubInfo.Merge(dst, src)
}
func (m *SC_AlterClubInfo) XXX_Size() int {
	return xxx_messageInfo_SC_AlterClubInfo.Size(m)
}
func (m *SC_AlterClubInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_AlterClubInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SC_AlterClubInfo proto.InternalMessageInfo

func (m *SC_AlterClubInfo) GetIResult() int32 {
	if m != nil && m.IResult != nil {
		return *m.IResult
	}
	return 0
}

func (m *SC_AlterClubInfo) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

func (m *SC_AlterClubInfo) GetISetRecommend() int32 {
	if m != nil && m.ISetRecommend != nil {
		return *m.ISetRecommend
	}
	return 0
}

func (m *SC_AlterClubInfo) GetIJoinCoin() int64 {
	if m != nil && m.IJoinCoin != nil {
		return *m.IJoinCoin
	}
	return 0
}

func (m *SC_AlterClubInfo) GetICheckJoin() int32 {
	if m != nil && m.ICheckJoin != nil {
		return *m.ICheckJoin
	}
	return 0
}

func (m *SC_AlterClubInfo) GetIChatLimit() int32 {
	if m != nil && m.IChatLimit != nil {
		return *m.IChatLimit
	}
	return 0
}

func (m *SC_AlterClubInfo) GetStrClubName() string {
	if m != nil && m.StrClubName != nil {
		return *m.StrClubName
	}
	return ""
}

func (m *SC_AlterClubInfo) GetStrClubKeFu() string {
	if m != nil && m.StrClubKeFu != nil {
		return *m.StrClubKeFu
	}
	return ""
}

// SC_CLUB_USER_LIST                   = 108;   //服务端俱乐部玩家列表返回
type ST_UserInfo struct {
	StBaseInfo           *ST_UserBaseInfo `protobuf:"bytes,1,req,name=stBaseInfo" json:"stBaseInfo,omitempty"`
	IUserActivity        *int64           `protobuf:"varint,2,req,name=iUserActivity" json:"iUserActivity,omitempty"`
	IUserLastLogoutTm    *int64           `protobuf:"varint,3,req,name=iUserLastLogoutTm" json:"iUserLastLogoutTm,omitempty"`
	StrUserBrief         *string          `protobuf:"bytes,4,req,name=strUserBrief" json:"strUserBrief,omitempty"`
	IUserLV              *int64           `protobuf:"varint,5,req,name=iUserLV" json:"iUserLV,omitempty"`
	AdminRight           []int32          `protobuf:"varint,6,rep,name=adminRight" json:"adminRight,omitempty"`
	IUserLastLoginTm     *int64           `protobuf:"varint,7,req,name=iUserLastLoginTm" json:"iUserLastLoginTm,omitempty"`
	StrUserLoginIP       *string          `protobuf:"bytes,8,opt,name=strUserLoginIP" json:"strUserLoginIP,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ST_UserInfo) Reset()         { *m = ST_UserInfo{} }
func (m *ST_UserInfo) String() string { return proto.CompactTextString(m) }
func (*ST_UserInfo) ProtoMessage()    {}
func (*ST_UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{26}
}
func (m *ST_UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ST_UserInfo.Unmarshal(m, b)
}
func (m *ST_UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ST_UserInfo.Marshal(b, m, deterministic)
}
func (dst *ST_UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ST_UserInfo.Merge(dst, src)
}
func (m *ST_UserInfo) XXX_Size() int {
	return xxx_messageInfo_ST_UserInfo.Size(m)
}
func (m *ST_UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ST_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ST_UserInfo proto.InternalMessageInfo

func (m *ST_UserInfo) GetStBaseInfo() *ST_UserBaseInfo {
	if m != nil {
		return m.StBaseInfo
	}
	return nil
}

func (m *ST_UserInfo) GetIUserActivity() int64 {
	if m != nil && m.IUserActivity != nil {
		return *m.IUserActivity
	}
	return 0
}

func (m *ST_UserInfo) GetIUserLastLogoutTm() int64 {
	if m != nil && m.IUserLastLogoutTm != nil {
		return *m.IUserLastLogoutTm
	}
	return 0
}

func (m *ST_UserInfo) GetStrUserBrief() string {
	if m != nil && m.StrUserBrief != nil {
		return *m.StrUserBrief
	}
	return ""
}

func (m *ST_UserInfo) GetIUserLV() int64 {
	if m != nil && m.IUserLV != nil {
		return *m.IUserLV
	}
	return 0
}

func (m *ST_UserInfo) GetAdminRight() []int32 {
	if m != nil {
		return m.AdminRight
	}
	return nil
}

func (m *ST_UserInfo) GetIUserLastLoginTm() int64 {
	if m != nil && m.IUserLastLoginTm != nil {
		return *m.IUserLastLoginTm
	}
	return 0
}

func (m *ST_UserInfo) GetStrUserLoginIP() string {
	if m != nil && m.StrUserLoginIP != nil {
		return *m.StrUserLoginIP
	}
	return ""
}

type SC_ClubUserList struct {
	StUserLists          []*ST_UserInfo `protobuf:"bytes,1,rep,name=stUserLists" json:"stUserLists,omitempty"`
	IIndexStart          *int32         `protobuf:"varint,2,req,name=iIndexStart" json:"iIndexStart,omitempty"`
	IIndexEnd            *int32         `protobuf:"varint,3,req,name=iIndexEnd" json:"iIndexEnd,omitempty"`
	ITotalCnt            *int32         `protobuf:"varint,4,req,name=iTotalCnt" json:"iTotalCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SC_ClubUserList) Reset()         { *m = SC_ClubUserList{} }
func (m *SC_ClubUserList) String() string { return proto.CompactTextString(m) }
func (*SC_ClubUserList) ProtoMessage()    {}
func (*SC_ClubUserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{27}
}
func (m *SC_ClubUserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubUserList.Unmarshal(m, b)
}
func (m *SC_ClubUserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubUserList.Marshal(b, m, deterministic)
}
func (dst *SC_ClubUserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubUserList.Merge(dst, src)
}
func (m *SC_ClubUserList) XXX_Size() int {
	return xxx_messageInfo_SC_ClubUserList.Size(m)
}
func (m *SC_ClubUserList) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubUserList.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubUserList proto.InternalMessageInfo

func (m *SC_ClubUserList) GetStUserLists() []*ST_UserInfo {
	if m != nil {
		return m.StUserLists
	}
	return nil
}

func (m *SC_ClubUserList) GetIIndexStart() int32 {
	if m != nil && m.IIndexStart != nil {
		return *m.IIndexStart
	}
	return 0
}

func (m *SC_ClubUserList) GetIIndexEnd() int32 {
	if m != nil && m.IIndexEnd != nil {
		return *m.IIndexEnd
	}
	return 0
}

func (m *SC_ClubUserList) GetITotalCnt() int32 {
	if m != nil && m.ITotalCnt != nil {
		return *m.ITotalCnt
	}
	return 0
}

// SC_SET_CLUB_ADMIN                   = 109;   //服务端设置管理员返回（会长或管理员）
type SC_SetClubAdmin struct {
	IResult              *int32   `protobuf:"varint,1,req,name=iResult" json:"iResult,omitempty"`
	StrMsg               *string  `protobuf:"bytes,2,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_SetClubAdmin) Reset()         { *m = SC_SetClubAdmin{} }
func (m *SC_SetClubAdmin) String() string { return proto.CompactTextString(m) }
func (*SC_SetClubAdmin) ProtoMessage()    {}
func (*SC_SetClubAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{28}
}
func (m *SC_SetClubAdmin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_SetClubAdmin.Unmarshal(m, b)
}
func (m *SC_SetClubAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_SetClubAdmin.Marshal(b, m, deterministic)
}
func (dst *SC_SetClubAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_SetClubAdmin.Merge(dst, src)
}
func (m *SC_SetClubAdmin) XXX_Size() int {
	return xxx_messageInfo_SC_SetClubAdmin.Size(m)
}
func (m *SC_SetClubAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_SetClubAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_SC_SetClubAdmin proto.InternalMessageInfo

func (m *SC_SetClubAdmin) GetIResult() int32 {
	if m != nil && m.IResult != nil {
		return *m.IResult
	}
	return 0
}

func (m *SC_SetClubAdmin) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

// SC_DELETE_CLUB_USER                 = 110;   //服务端删除俱乐部玩家返回（会长或管理员）
type SC_DeleteClubUser struct {
	IResult              *int32   `protobuf:"varint,1,req,name=iResult" json:"iResult,omitempty"`
	StrMsg               *string  `protobuf:"bytes,2,req,name=strMsg" json:"strMsg,omitempty"`
	IUserId              *int64   `protobuf:"varint,3,req,name=iUserId" json:"iUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_DeleteClubUser) Reset()         { *m = SC_DeleteClubUser{} }
func (m *SC_DeleteClubUser) String() string { return proto.CompactTextString(m) }
func (*SC_DeleteClubUser) ProtoMessage()    {}
func (*SC_DeleteClubUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{29}
}
func (m *SC_DeleteClubUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_DeleteClubUser.Unmarshal(m, b)
}
func (m *SC_DeleteClubUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_DeleteClubUser.Marshal(b, m, deterministic)
}
func (dst *SC_DeleteClubUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_DeleteClubUser.Merge(dst, src)
}
func (m *SC_DeleteClubUser) XXX_Size() int {
	return xxx_messageInfo_SC_DeleteClubUser.Size(m)
}
func (m *SC_DeleteClubUser) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_DeleteClubUser.DiscardUnknown(m)
}

var xxx_messageInfo_SC_DeleteClubUser proto.InternalMessageInfo

func (m *SC_DeleteClubUser) GetIResult() int32 {
	if m != nil && m.IResult != nil {
		return *m.IResult
	}
	return 0
}

func (m *SC_DeleteClubUser) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

func (m *SC_DeleteClubUser) GetIUserId() int64 {
	if m != nil && m.IUserId != nil {
		return *m.IUserId
	}
	return 0
}

// SC_DELETE_CLUB_USER_NOTIFY          = 111;   //服务端通知已经被删除的俱乐部玩家
type SC_DeleteClubUserNotify struct {
	IResult              *int32   `protobuf:"varint,1,req,name=iResult" json:"iResult,omitempty"`
	StrMsg               *string  `protobuf:"bytes,2,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_DeleteClubUserNotify) Reset()         { *m = SC_DeleteClubUserNotify{} }
func (m *SC_DeleteClubUserNotify) String() string { return proto.CompactTextString(m) }
func (*SC_DeleteClubUserNotify) ProtoMessage()    {}
func (*SC_DeleteClubUserNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{30}
}
func (m *SC_DeleteClubUserNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_DeleteClubUserNotify.Unmarshal(m, b)
}
func (m *SC_DeleteClubUserNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_DeleteClubUserNotify.Marshal(b, m, deterministic)
}
func (dst *SC_DeleteClubUserNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_DeleteClubUserNotify.Merge(dst, src)
}
func (m *SC_DeleteClubUserNotify) XXX_Size() int {
	return xxx_messageInfo_SC_DeleteClubUserNotify.Size(m)
}
func (m *SC_DeleteClubUserNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_DeleteClubUserNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_DeleteClubUserNotify proto.InternalMessageInfo

func (m *SC_DeleteClubUserNotify) GetIResult() int32 {
	if m != nil && m.IResult != nil {
		return *m.IResult
	}
	return 0
}

func (m *SC_DeleteClubUserNotify) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

// SC_CLUB_CHAT_MSG                    = 112;   //服务端转发聊天信息至所有俱乐部成员
type SC_ClubChatMsg struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	StrUserName          *string  `protobuf:"bytes,2,req,name=strUserName" json:"strUserName,omitempty"`
	IUserID              *int64   `protobuf:"varint,3,req,name=iUserID" json:"iUserID,omitempty"`
	IMsgType             *int64   `protobuf:"varint,4,opt,name=iMsgType" json:"iMsgType,omitempty"`
	MTextContent         *string  `protobuf:"bytes,5,opt,name=mTextContent" json:"mTextContent,omitempty"`
	MBinaryContent       []byte   `protobuf:"bytes,6,opt,name=mBinaryContent" json:"mBinaryContent,omitempty"`
	MContentTime         *uint32  `protobuf:"varint,7,opt,name=mContentTime" json:"mContentTime,omitempty"`
	MImageId             *uint32  `protobuf:"varint,8,opt,name=mImageId" json:"mImageId,omitempty"`
	MMediaId             *uint32  `protobuf:"varint,9,opt,name=mMediaId" json:"mMediaId,omitempty"`
	StrHeader            *string  `protobuf:"bytes,10,opt,name=strHeader" json:"strHeader,omitempty"`
	StrLoginIP           *string  `protobuf:"bytes,11,opt,name=strLoginIP" json:"strLoginIP,omitempty"`
	IAccid               *int64   `protobuf:"varint,12,opt,name=iAccid" json:"iAccid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_ClubChatMsg) Reset()         { *m = SC_ClubChatMsg{} }
func (m *SC_ClubChatMsg) String() string { return proto.CompactTextString(m) }
func (*SC_ClubChatMsg) ProtoMessage()    {}
func (*SC_ClubChatMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{31}
}
func (m *SC_ClubChatMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubChatMsg.Unmarshal(m, b)
}
func (m *SC_ClubChatMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubChatMsg.Marshal(b, m, deterministic)
}
func (dst *SC_ClubChatMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubChatMsg.Merge(dst, src)
}
func (m *SC_ClubChatMsg) XXX_Size() int {
	return xxx_messageInfo_SC_ClubChatMsg.Size(m)
}
func (m *SC_ClubChatMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubChatMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubChatMsg proto.InternalMessageInfo

func (m *SC_ClubChatMsg) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *SC_ClubChatMsg) GetStrUserName() string {
	if m != nil && m.StrUserName != nil {
		return *m.StrUserName
	}
	return ""
}

func (m *SC_ClubChatMsg) GetIUserID() int64 {
	if m != nil && m.IUserID != nil {
		return *m.IUserID
	}
	return 0
}

func (m *SC_ClubChatMsg) GetIMsgType() int64 {
	if m != nil && m.IMsgType != nil {
		return *m.IMsgType
	}
	return 0
}

func (m *SC_ClubChatMsg) GetMTextContent() string {
	if m != nil && m.MTextContent != nil {
		return *m.MTextContent
	}
	return ""
}

func (m *SC_ClubChatMsg) GetMBinaryContent() []byte {
	if m != nil {
		return m.MBinaryContent
	}
	return nil
}

func (m *SC_ClubChatMsg) GetMContentTime() uint32 {
	if m != nil && m.MContentTime != nil {
		return *m.MContentTime
	}
	return 0
}

func (m *SC_ClubChatMsg) GetMImageId() uint32 {
	if m != nil && m.MImageId != nil {
		return *m.MImageId
	}
	return 0
}

func (m *SC_ClubChatMsg) GetMMediaId() uint32 {
	if m != nil && m.MMediaId != nil {
		return *m.MMediaId
	}
	return 0
}

func (m *SC_ClubChatMsg) GetStrHeader() string {
	if m != nil && m.StrHeader != nil {
		return *m.StrHeader
	}
	return ""
}

func (m *SC_ClubChatMsg) GetStrLoginIP() string {
	if m != nil && m.StrLoginIP != nil {
		return *m.StrLoginIP
	}
	return ""
}

func (m *SC_ClubChatMsg) GetIAccid() int64 {
	if m != nil && m.IAccid != nil {
		return *m.IAccid
	}
	return 0
}

// SC_CLUB_LOG_LIST                    = 113;   //服务端返回日志信息
type ST_ClubLogItem struct {
	ILogTime             *int64   `protobuf:"varint,1,req,name=iLogTime" json:"iLogTime,omitempty"`
	StrLogContent        *string  `protobuf:"bytes,2,req,name=strLogContent" json:"strLogContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ST_ClubLogItem) Reset()         { *m = ST_ClubLogItem{} }
func (m *ST_ClubLogItem) String() string { return proto.CompactTextString(m) }
func (*ST_ClubLogItem) ProtoMessage()    {}
func (*ST_ClubLogItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{32}
}
func (m *ST_ClubLogItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ST_ClubLogItem.Unmarshal(m, b)
}
func (m *ST_ClubLogItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ST_ClubLogItem.Marshal(b, m, deterministic)
}
func (dst *ST_ClubLogItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ST_ClubLogItem.Merge(dst, src)
}
func (m *ST_ClubLogItem) XXX_Size() int {
	return xxx_messageInfo_ST_ClubLogItem.Size(m)
}
func (m *ST_ClubLogItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ST_ClubLogItem.DiscardUnknown(m)
}

var xxx_messageInfo_ST_ClubLogItem proto.InternalMessageInfo

func (m *ST_ClubLogItem) GetILogTime() int64 {
	if m != nil && m.ILogTime != nil {
		return *m.ILogTime
	}
	return 0
}

func (m *ST_ClubLogItem) GetStrLogContent() string {
	if m != nil && m.StrLogContent != nil {
		return *m.StrLogContent
	}
	return ""
}

type SC_ClubLogs struct {
	StClubLogs           []*ST_ClubLogItem `protobuf:"bytes,1,rep,name=stClubLogs" json:"stClubLogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SC_ClubLogs) Reset()         { *m = SC_ClubLogs{} }
func (m *SC_ClubLogs) String() string { return proto.CompactTextString(m) }
func (*SC_ClubLogs) ProtoMessage()    {}
func (*SC_ClubLogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{33}
}
func (m *SC_ClubLogs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubLogs.Unmarshal(m, b)
}
func (m *SC_ClubLogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubLogs.Marshal(b, m, deterministic)
}
func (dst *SC_ClubLogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubLogs.Merge(dst, src)
}
func (m *SC_ClubLogs) XXX_Size() int {
	return xxx_messageInfo_SC_ClubLogs.Size(m)
}
func (m *SC_ClubLogs) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubLogs.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubLogs proto.InternalMessageInfo

func (m *SC_ClubLogs) GetStClubLogs() []*ST_ClubLogItem {
	if m != nil {
		return m.StClubLogs
	}
	return nil
}

// SC_CLUB_BASE_INFO_ON_LONGIN         = 114;   //服务端主动推送俱乐部基本信息在登陆时
type SC_ClubBaseInfoOnLogin struct {
	IClubID              *int64   `protobuf:"varint,1,req,name=iClubID" json:"iClubID,omitempty"`
	StrClubName          *string  `protobuf:"bytes,2,req,name=strClubName" json:"strClubName,omitempty"`
	IUserLv              *int64   `protobuf:"varint,4,req,name=iUserLv" json:"iUserLv,omitempty"`
	StrNotice            *string  `protobuf:"bytes,5,req,name=strNotice" json:"strNotice,omitempty"`
	StrQrTicket          *string  `protobuf:"bytes,6,opt,name=strQrTicket" json:"strQrTicket,omitempty"`
	StrQrUrl             *string  `protobuf:"bytes,7,opt,name=strQrUrl" json:"strQrUrl,omitempty"`
	IQrExpire            *int64   `protobuf:"varint,8,opt,name=iQrExpire" json:"iQrExpire,omitempty"`
	IQrCreateTime        *int64   `protobuf:"varint,9,opt,name=iQrCreateTime" json:"iQrCreateTime,omitempty"`
	ICheatLimit          *int32   `protobuf:"varint,10,opt,name=iCheatLimit" json:"iCheatLimit,omitempty"`
	StrClubKeFu          *string  `protobuf:"bytes,11,opt,name=strClubKeFu" json:"strClubKeFu,omitempty"`
	StrClubBrief         *string  `protobuf:"bytes,12,opt,name=strClubBrief" json:"strClubBrief,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_ClubBaseInfoOnLogin) Reset()         { *m = SC_ClubBaseInfoOnLogin{} }
func (m *SC_ClubBaseInfoOnLogin) String() string { return proto.CompactTextString(m) }
func (*SC_ClubBaseInfoOnLogin) ProtoMessage()    {}
func (*SC_ClubBaseInfoOnLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{34}
}
func (m *SC_ClubBaseInfoOnLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubBaseInfoOnLogin.Unmarshal(m, b)
}
func (m *SC_ClubBaseInfoOnLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubBaseInfoOnLogin.Marshal(b, m, deterministic)
}
func (dst *SC_ClubBaseInfoOnLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubBaseInfoOnLogin.Merge(dst, src)
}
func (m *SC_ClubBaseInfoOnLogin) XXX_Size() int {
	return xxx_messageInfo_SC_ClubBaseInfoOnLogin.Size(m)
}
func (m *SC_ClubBaseInfoOnLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubBaseInfoOnLogin.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubBaseInfoOnLogin proto.InternalMessageInfo

func (m *SC_ClubBaseInfoOnLogin) GetIClubID() int64 {
	if m != nil && m.IClubID != nil {
		return *m.IClubID
	}
	return 0
}

func (m *SC_ClubBaseInfoOnLogin) GetStrClubName() string {
	if m != nil && m.StrClubName != nil {
		return *m.StrClubName
	}
	return ""
}

func (m *SC_ClubBaseInfoOnLogin) GetIUserLv() int64 {
	if m != nil && m.IUserLv != nil {
		return *m.IUserLv
	}
	return 0
}

func (m *SC_ClubBaseInfoOnLogin) GetStrNotice() string {
	if m != nil && m.StrNotice != nil {
		return *m.StrNotice
	}
	return ""
}

func (m *SC_ClubBaseInfoOnLogin) GetStrQrTicket() string {
	if m != nil && m.StrQrTicket != nil {
		return *m.StrQrTicket
	}
	return ""
}

func (m *SC_ClubBaseInfoOnLogin) GetStrQrUrl() string {
	if m != nil && m.StrQrUrl != nil {
		return *m.StrQrUrl
	}
	return ""
}

func (m *SC_ClubBaseInfoOnLogin) GetIQrExpire() int64 {
	if m != nil && m.IQrExpire != nil {
		return *m.IQrExpire
	}
	return 0
}

func (m *SC_ClubBaseInfoOnLogin) GetIQrCreateTime() int64 {
	if m != nil && m.IQrCreateTime != nil {
		return *m.IQrCreateTime
	}
	return 0
}

func (m *SC_ClubBaseInfoOnLogin) GetICheatLimit() int32 {
	if m != nil && m.ICheatLimit != nil {
		return *m.ICheatLimit
	}
	return 0
}

func (m *SC_ClubBaseInfoOnLogin) GetStrClubKeFu() string {
	if m != nil && m.StrClubKeFu != nil {
		return *m.StrClubKeFu
	}
	return ""
}

func (m *SC_ClubBaseInfoOnLogin) GetStrClubBrief() string {
	if m != nil && m.StrClubBrief != nil {
		return *m.StrClubBrief
	}
	return ""
}

// SC_CLUB_ADMIN_LIST                  = 115;   //服务端返回管理员列表
type SC_ClubAdminList struct {
	StAdminLists         []*ST_UserInfo `protobuf:"bytes,1,rep,name=stAdminLists" json:"stAdminLists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SC_ClubAdminList) Reset()         { *m = SC_ClubAdminList{} }
func (m *SC_ClubAdminList) String() string { return proto.CompactTextString(m) }
func (*SC_ClubAdminList) ProtoMessage()    {}
func (*SC_ClubAdminList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{35}
}
func (m *SC_ClubAdminList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubAdminList.Unmarshal(m, b)
}
func (m *SC_ClubAdminList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubAdminList.Marshal(b, m, deterministic)
}
func (dst *SC_ClubAdminList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubAdminList.Merge(dst, src)
}
func (m *SC_ClubAdminList) XXX_Size() int {
	return xxx_messageInfo_SC_ClubAdminList.Size(m)
}
func (m *SC_ClubAdminList) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubAdminList.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubAdminList proto.InternalMessageInfo

func (m *SC_ClubAdminList) GetStAdminLists() []*ST_UserInfo {
	if m != nil {
		return m.StAdminLists
	}
	return nil
}

// SC_TOEXAMINE_USER_RESLUT            = 116;   //服务端返回管理员审核玩家结果
type SC_ToExamineUserResult struct {
	IResult              *int32   `protobuf:"varint,1,req,name=iResult" json:"iResult,omitempty"`
	StrMsg               *string  `protobuf:"bytes,2,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_ToExamineUserResult) Reset()         { *m = SC_ToExamineUserResult{} }
func (m *SC_ToExamineUserResult) String() string { return proto.CompactTextString(m) }
func (*SC_ToExamineUserResult) ProtoMessage()    {}
func (*SC_ToExamineUserResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{36}
}
func (m *SC_ToExamineUserResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ToExamineUserResult.Unmarshal(m, b)
}
func (m *SC_ToExamineUserResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ToExamineUserResult.Marshal(b, m, deterministic)
}
func (dst *SC_ToExamineUserResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ToExamineUserResult.Merge(dst, src)
}
func (m *SC_ToExamineUserResult) XXX_Size() int {
	return xxx_messageInfo_SC_ToExamineUserResult.Size(m)
}
func (m *SC_ToExamineUserResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ToExamineUserResult.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ToExamineUserResult proto.InternalMessageInfo

func (m *SC_ToExamineUserResult) GetIResult() int32 {
	if m != nil && m.IResult != nil {
		return *m.IResult
	}
	return 0
}

func (m *SC_ToExamineUserResult) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

// SC_ADD_CLUB_USER_NOTIFY             = 117;   //服务端通知申请加入俱乐部玩家管理员审核的结果，同意的
type SC_AddClubUserNotify struct {
	StInfo               *SC_ClubBaseInfoOnLogin `protobuf:"bytes,1,opt,name=stInfo" json:"stInfo,omitempty"`
	IResult              *int32                  `protobuf:"varint,2,req,name=iResult" json:"iResult,omitempty"`
	StrMsg               *string                 `protobuf:"bytes,3,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SC_AddClubUserNotify) Reset()         { *m = SC_AddClubUserNotify{} }
func (m *SC_AddClubUserNotify) String() string { return proto.CompactTextString(m) }
func (*SC_AddClubUserNotify) ProtoMessage()    {}
func (*SC_AddClubUserNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{37}
}
func (m *SC_AddClubUserNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_AddClubUserNotify.Unmarshal(m, b)
}
func (m *SC_AddClubUserNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_AddClubUserNotify.Marshal(b, m, deterministic)
}
func (dst *SC_AddClubUserNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_AddClubUserNotify.Merge(dst, src)
}
func (m *SC_AddClubUserNotify) XXX_Size() int {
	return xxx_messageInfo_SC_AddClubUserNotify.Size(m)
}
func (m *SC_AddClubUserNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_AddClubUserNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_AddClubUserNotify proto.InternalMessageInfo

func (m *SC_AddClubUserNotify) GetStInfo() *SC_ClubBaseInfoOnLogin {
	if m != nil {
		return m.StInfo
	}
	return nil
}

func (m *SC_AddClubUserNotify) GetIResult() int32 {
	if m != nil && m.IResult != nil {
		return *m.IResult
	}
	return 0
}

func (m *SC_AddClubUserNotify) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

// SC_ADD_CLUB_ADMIN_NOTIFY            = 118;   //服务端通知玩家设置为管理员
type SC_AddClubAdminNotify struct {
	IUserLv              *int64   `protobuf:"varint,1,req,name=iUserLv" json:"iUserLv,omitempty"`
	StrMsg               *string  `protobuf:"bytes,2,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_AddClubAdminNotify) Reset()         { *m = SC_AddClubAdminNotify{} }
func (m *SC_AddClubAdminNotify) String() string { return proto.CompactTextString(m) }
func (*SC_AddClubAdminNotify) ProtoMessage()    {}
func (*SC_AddClubAdminNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{38}
}
func (m *SC_AddClubAdminNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_AddClubAdminNotify.Unmarshal(m, b)
}
func (m *SC_AddClubAdminNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_AddClubAdminNotify.Marshal(b, m, deterministic)
}
func (dst *SC_AddClubAdminNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_AddClubAdminNotify.Merge(dst, src)
}
func (m *SC_AddClubAdminNotify) XXX_Size() int {
	return xxx_messageInfo_SC_AddClubAdminNotify.Size(m)
}
func (m *SC_AddClubAdminNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_AddClubAdminNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_AddClubAdminNotify proto.InternalMessageInfo

func (m *SC_AddClubAdminNotify) GetIUserLv() int64 {
	if m != nil && m.IUserLv != nil {
		return *m.IUserLv
	}
	return 0
}

func (m *SC_AddClubAdminNotify) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

// SC_CANCEL_CLUB_ADMIN                = 119;   //服务端返回取消管理 员（会长或管理员）
type SC_CancelClubAdmin struct {
	IResult              *int32   `protobuf:"varint,1,req,name=iResult" json:"iResult,omitempty"`
	StrMsg               *string  `protobuf:"bytes,2,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_CancelClubAdmin) Reset()         { *m = SC_CancelClubAdmin{} }
func (m *SC_CancelClubAdmin) String() string { return proto.CompactTextString(m) }
func (*SC_CancelClubAdmin) ProtoMessage()    {}
func (*SC_CancelClubAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{39}
}
func (m *SC_CancelClubAdmin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_CancelClubAdmin.Unmarshal(m, b)
}
func (m *SC_CancelClubAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_CancelClubAdmin.Marshal(b, m, deterministic)
}
func (dst *SC_CancelClubAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_CancelClubAdmin.Merge(dst, src)
}
func (m *SC_CancelClubAdmin) XXX_Size() int {
	return xxx_messageInfo_SC_CancelClubAdmin.Size(m)
}
func (m *SC_CancelClubAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_CancelClubAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_SC_CancelClubAdmin proto.InternalMessageInfo

func (m *SC_CancelClubAdmin) GetIResult() int32 {
	if m != nil && m.IResult != nil {
		return *m.IResult
	}
	return 0
}

func (m *SC_CancelClubAdmin) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

// SC_CANCEL_CLUB_ADMIN_NOTIFY         = 120;   //服务端通知已经被取消管理员权限的俱乐部玩家
type SC_CancelClubAdminNotify struct {
	IUserLv              *int64   `protobuf:"varint,1,req,name=iUserLv" json:"iUserLv,omitempty"`
	StrMsg               *string  `protobuf:"bytes,2,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_CancelClubAdminNotify) Reset()         { *m = SC_CancelClubAdminNotify{} }
func (m *SC_CancelClubAdminNotify) String() string { return proto.CompactTextString(m) }
func (*SC_CancelClubAdminNotify) ProtoMessage()    {}
func (*SC_CancelClubAdminNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{40}
}
func (m *SC_CancelClubAdminNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_CancelClubAdminNotify.Unmarshal(m, b)
}
func (m *SC_CancelClubAdminNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_CancelClubAdminNotify.Marshal(b, m, deterministic)
}
func (dst *SC_CancelClubAdminNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_CancelClubAdminNotify.Merge(dst, src)
}
func (m *SC_CancelClubAdminNotify) XXX_Size() int {
	return xxx_messageInfo_SC_CancelClubAdminNotify.Size(m)
}
func (m *SC_CancelClubAdminNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_CancelClubAdminNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_CancelClubAdminNotify proto.InternalMessageInfo

func (m *SC_CancelClubAdminNotify) GetIUserLv() int64 {
	if m != nil && m.IUserLv != nil {
		return *m.IUserLv
	}
	return 0
}

func (m *SC_CancelClubAdminNotify) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

// SC_SET_CLUB_ADMIN_RIGHT             = 121;   //服务端设置管理员权限（会长或管理员）
type SC_SetClubAdminRight struct {
	AdminRight           []int32  `protobuf:"varint,1,rep,name=adminRight" json:"adminRight,omitempty"`
	IResult              *int32   `protobuf:"varint,2,req,name=iResult" json:"iResult,omitempty"`
	StrMsg               *string  `protobuf:"bytes,3,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_SetClubAdminRight) Reset()         { *m = SC_SetClubAdminRight{} }
func (m *SC_SetClubAdminRight) String() string { return proto.CompactTextString(m) }
func (*SC_SetClubAdminRight) ProtoMessage()    {}
func (*SC_SetClubAdminRight) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{41}
}
func (m *SC_SetClubAdminRight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_SetClubAdminRight.Unmarshal(m, b)
}
func (m *SC_SetClubAdminRight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_SetClubAdminRight.Marshal(b, m, deterministic)
}
func (dst *SC_SetClubAdminRight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_SetClubAdminRight.Merge(dst, src)
}
func (m *SC_SetClubAdminRight) XXX_Size() int {
	return xxx_messageInfo_SC_SetClubAdminRight.Size(m)
}
func (m *SC_SetClubAdminRight) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_SetClubAdminRight.DiscardUnknown(m)
}

var xxx_messageInfo_SC_SetClubAdminRight proto.InternalMessageInfo

func (m *SC_SetClubAdminRight) GetAdminRight() []int32 {
	if m != nil {
		return m.AdminRight
	}
	return nil
}

func (m *SC_SetClubAdminRight) GetIResult() int32 {
	if m != nil && m.IResult != nil {
		return *m.IResult
	}
	return 0
}

func (m *SC_SetClubAdminRight) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

// SC_SET_CLUB_ADMIN_RIGHT_NOTIFY      = 122;   //服务端设置管理员权限通知玩家
type SC_SetClubAdminRightNotify struct {
	AdminRight           []int32  `protobuf:"varint,1,rep,name=adminRight" json:"adminRight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_SetClubAdminRightNotify) Reset()         { *m = SC_SetClubAdminRightNotify{} }
func (m *SC_SetClubAdminRightNotify) String() string { return proto.CompactTextString(m) }
func (*SC_SetClubAdminRightNotify) ProtoMessage()    {}
func (*SC_SetClubAdminRightNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{42}
}
func (m *SC_SetClubAdminRightNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_SetClubAdminRightNotify.Unmarshal(m, b)
}
func (m *SC_SetClubAdminRightNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_SetClubAdminRightNotify.Marshal(b, m, deterministic)
}
func (dst *SC_SetClubAdminRightNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_SetClubAdminRightNotify.Merge(dst, src)
}
func (m *SC_SetClubAdminRightNotify) XXX_Size() int {
	return xxx_messageInfo_SC_SetClubAdminRightNotify.Size(m)
}
func (m *SC_SetClubAdminRightNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_SetClubAdminRightNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_SetClubAdminRightNotify proto.InternalMessageInfo

func (m *SC_SetClubAdminRightNotify) GetAdminRight() []int32 {
	if m != nil {
		return m.AdminRight
	}
	return nil
}

// 	SC_GET_CLUB_USER_INFO               = 123;   //服务端返回玩家信息
type SC_GetClubUserInfo struct {
	StInfo               *ST_UserInfo `protobuf:"bytes,1,opt,name=stInfo" json:"stInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SC_GetClubUserInfo) Reset()         { *m = SC_GetClubUserInfo{} }
func (m *SC_GetClubUserInfo) String() string { return proto.CompactTextString(m) }
func (*SC_GetClubUserInfo) ProtoMessage()    {}
func (*SC_GetClubUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{43}
}
func (m *SC_GetClubUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_GetClubUserInfo.Unmarshal(m, b)
}
func (m *SC_GetClubUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_GetClubUserInfo.Marshal(b, m, deterministic)
}
func (dst *SC_GetClubUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_GetClubUserInfo.Merge(dst, src)
}
func (m *SC_GetClubUserInfo) XXX_Size() int {
	return xxx_messageInfo_SC_GetClubUserInfo.Size(m)
}
func (m *SC_GetClubUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_GetClubUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SC_GetClubUserInfo proto.InternalMessageInfo

func (m *SC_GetClubUserInfo) GetStInfo() *ST_UserInfo {
	if m != nil {
		return m.StInfo
	}
	return nil
}

// SC_SET_CLUB_BASE_INFO               = 124;   //服务端返回修改俱乐部基本信息
type SC_SetClubBaseInfo struct {
	IResult              *int32   `protobuf:"varint,1,req,name=iResult" json:"iResult,omitempty"`
	ISetType             *int32   `protobuf:"varint,2,req,name=iSetType" json:"iSetType,omitempty"`
	StrMsg               *string  `protobuf:"bytes,3,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_SetClubBaseInfo) Reset()         { *m = SC_SetClubBaseInfo{} }
func (m *SC_SetClubBaseInfo) String() string { return proto.CompactTextString(m) }
func (*SC_SetClubBaseInfo) ProtoMessage()    {}
func (*SC_SetClubBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{44}
}
func (m *SC_SetClubBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_SetClubBaseInfo.Unmarshal(m, b)
}
func (m *SC_SetClubBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_SetClubBaseInfo.Marshal(b, m, deterministic)
}
func (dst *SC_SetClubBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_SetClubBaseInfo.Merge(dst, src)
}
func (m *SC_SetClubBaseInfo) XXX_Size() int {
	return xxx_messageInfo_SC_SetClubBaseInfo.Size(m)
}
func (m *SC_SetClubBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_SetClubBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SC_SetClubBaseInfo proto.InternalMessageInfo

func (m *SC_SetClubBaseInfo) GetIResult() int32 {
	if m != nil && m.IResult != nil {
		return *m.IResult
	}
	return 0
}

func (m *SC_SetClubBaseInfo) GetISetType() int32 {
	if m != nil && m.ISetType != nil {
		return *m.ISetType
	}
	return 0
}

func (m *SC_SetClubBaseInfo) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

// SC_SET_CLUB_NOTICE_NOTIFY           = 125;    //服务端推送俱乐部公告
type SC_SetClubNoticeNotify struct {
	ISetType             *int32   `protobuf:"varint,2,req,name=iSetType" json:"iSetType,omitempty"`
	StrMsg               *string  `protobuf:"bytes,3,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_SetClubNoticeNotify) Reset()         { *m = SC_SetClubNoticeNotify{} }
func (m *SC_SetClubNoticeNotify) String() string { return proto.CompactTextString(m) }
func (*SC_SetClubNoticeNotify) ProtoMessage()    {}
func (*SC_SetClubNoticeNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{45}
}
func (m *SC_SetClubNoticeNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_SetClubNoticeNotify.Unmarshal(m, b)
}
func (m *SC_SetClubNoticeNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_SetClubNoticeNotify.Marshal(b, m, deterministic)
}
func (dst *SC_SetClubNoticeNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_SetClubNoticeNotify.Merge(dst, src)
}
func (m *SC_SetClubNoticeNotify) XXX_Size() int {
	return xxx_messageInfo_SC_SetClubNoticeNotify.Size(m)
}
func (m *SC_SetClubNoticeNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_SetClubNoticeNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_SetClubNoticeNotify proto.InternalMessageInfo

func (m *SC_SetClubNoticeNotify) GetISetType() int32 {
	if m != nil && m.ISetType != nil {
		return *m.ISetType
	}
	return 0
}

func (m *SC_SetClubNoticeNotify) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

// SC_JOIN_CLUB_NOTIFY_ADMIN           = 126;    //玩家申请加入俱乐部通知所有管理员
type SC_JoinClubNotifyAdmin struct {
	IRecommandCnt        *int32   `protobuf:"varint,1,opt,name=iRecommandCnt" json:"iRecommandCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_JoinClubNotifyAdmin) Reset()         { *m = SC_JoinClubNotifyAdmin{} }
func (m *SC_JoinClubNotifyAdmin) String() string { return proto.CompactTextString(m) }
func (*SC_JoinClubNotifyAdmin) ProtoMessage()    {}
func (*SC_JoinClubNotifyAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{46}
}
func (m *SC_JoinClubNotifyAdmin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_JoinClubNotifyAdmin.Unmarshal(m, b)
}
func (m *SC_JoinClubNotifyAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_JoinClubNotifyAdmin.Marshal(b, m, deterministic)
}
func (dst *SC_JoinClubNotifyAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_JoinClubNotifyAdmin.Merge(dst, src)
}
func (m *SC_JoinClubNotifyAdmin) XXX_Size() int {
	return xxx_messageInfo_SC_JoinClubNotifyAdmin.Size(m)
}
func (m *SC_JoinClubNotifyAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_JoinClubNotifyAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_SC_JoinClubNotifyAdmin proto.InternalMessageInfo

func (m *SC_JoinClubNotifyAdmin) GetIRecommandCnt() int32 {
	if m != nil && m.IRecommandCnt != nil {
		return *m.IRecommandCnt
	}
	return 0
}

// SC_ALTER_CLUB_INFO_NOTIFY           = 127;    //俱乐部信息更新通知玩家
type SC_AlterClubInfoNotify struct {
	StrQrTicket          *string  `protobuf:"bytes,1,opt,name=strQrTicket" json:"strQrTicket,omitempty"`
	StrQrUrl             *string  `protobuf:"bytes,2,opt,name=strQrUrl" json:"strQrUrl,omitempty"`
	IQrExpire            *int64   `protobuf:"varint,3,opt,name=iQrExpire" json:"iQrExpire,omitempty"`
	IQrCreateTime        *int64   `protobuf:"varint,4,opt,name=iQrCreateTime" json:"iQrCreateTime,omitempty"`
	IChatLimit           *int32   `protobuf:"varint,5,opt,name=iChatLimit" json:"iChatLimit,omitempty"`
	StrClubName          *string  `protobuf:"bytes,6,opt,name=strClubName" json:"strClubName,omitempty"`
	StrClubKeFu          *string  `protobuf:"bytes,7,opt,name=strClubKeFu" json:"strClubKeFu,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_AlterClubInfoNotify) Reset()         { *m = SC_AlterClubInfoNotify{} }
func (m *SC_AlterClubInfoNotify) String() string { return proto.CompactTextString(m) }
func (*SC_AlterClubInfoNotify) ProtoMessage()    {}
func (*SC_AlterClubInfoNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{47}
}
func (m *SC_AlterClubInfoNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_AlterClubInfoNotify.Unmarshal(m, b)
}
func (m *SC_AlterClubInfoNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_AlterClubInfoNotify.Marshal(b, m, deterministic)
}
func (dst *SC_AlterClubInfoNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_AlterClubInfoNotify.Merge(dst, src)
}
func (m *SC_AlterClubInfoNotify) XXX_Size() int {
	return xxx_messageInfo_SC_AlterClubInfoNotify.Size(m)
}
func (m *SC_AlterClubInfoNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_AlterClubInfoNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_AlterClubInfoNotify proto.InternalMessageInfo

func (m *SC_AlterClubInfoNotify) GetStrQrTicket() string {
	if m != nil && m.StrQrTicket != nil {
		return *m.StrQrTicket
	}
	return ""
}

func (m *SC_AlterClubInfoNotify) GetStrQrUrl() string {
	if m != nil && m.StrQrUrl != nil {
		return *m.StrQrUrl
	}
	return ""
}

func (m *SC_AlterClubInfoNotify) GetIQrExpire() int64 {
	if m != nil && m.IQrExpire != nil {
		return *m.IQrExpire
	}
	return 0
}

func (m *SC_AlterClubInfoNotify) GetIQrCreateTime() int64 {
	if m != nil && m.IQrCreateTime != nil {
		return *m.IQrCreateTime
	}
	return 0
}

func (m *SC_AlterClubInfoNotify) GetIChatLimit() int32 {
	if m != nil && m.IChatLimit != nil {
		return *m.IChatLimit
	}
	return 0
}

func (m *SC_AlterClubInfoNotify) GetStrClubName() string {
	if m != nil && m.StrClubName != nil {
		return *m.StrClubName
	}
	return ""
}

func (m *SC_AlterClubInfoNotify) GetStrClubKeFu() string {
	if m != nil && m.StrClubKeFu != nil {
		return *m.StrClubKeFu
	}
	return ""
}

// SC_ALTER_USER_INFO_NOTIFY           = 128;    //玩家信息更新通知玩家
type SC_AlterUserInfoNotify struct {
	StInfo               *ST_UserInfo `protobuf:"bytes,1,req,name=stInfo" json:"stInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SC_AlterUserInfoNotify) Reset()         { *m = SC_AlterUserInfoNotify{} }
func (m *SC_AlterUserInfoNotify) String() string { return proto.CompactTextString(m) }
func (*SC_AlterUserInfoNotify) ProtoMessage()    {}
func (*SC_AlterUserInfoNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{48}
}
func (m *SC_AlterUserInfoNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_AlterUserInfoNotify.Unmarshal(m, b)
}
func (m *SC_AlterUserInfoNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_AlterUserInfoNotify.Marshal(b, m, deterministic)
}
func (dst *SC_AlterUserInfoNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_AlterUserInfoNotify.Merge(dst, src)
}
func (m *SC_AlterUserInfoNotify) XXX_Size() int {
	return xxx_messageInfo_SC_AlterUserInfoNotify.Size(m)
}
func (m *SC_AlterUserInfoNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_AlterUserInfoNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_AlterUserInfoNotify proto.InternalMessageInfo

func (m *SC_AlterUserInfoNotify) GetStInfo() *ST_UserInfo {
	if m != nil {
		return m.StInfo
	}
	return nil
}

// =====================liuyuanlin=======start==================
// CS_CLUB_ROOM_LIST           = 300;   //客户端请求俱乐部房间列表
type CS_ClubRoomList struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	UserId               *int64   `protobuf:"varint,2,req,name=UserId" json:"UserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ClubRoomList) Reset()         { *m = CS_ClubRoomList{} }
func (m *CS_ClubRoomList) String() string { return proto.CompactTextString(m) }
func (*CS_ClubRoomList) ProtoMessage()    {}
func (*CS_ClubRoomList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{49}
}
func (m *CS_ClubRoomList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubRoomList.Unmarshal(m, b)
}
func (m *CS_ClubRoomList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubRoomList.Marshal(b, m, deterministic)
}
func (dst *CS_ClubRoomList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubRoomList.Merge(dst, src)
}
func (m *CS_ClubRoomList) XXX_Size() int {
	return xxx_messageInfo_CS_ClubRoomList.Size(m)
}
func (m *CS_ClubRoomList) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubRoomList.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubRoomList proto.InternalMessageInfo

func (m *CS_ClubRoomList) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *CS_ClubRoomList) GetUserId() int64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type RoomData struct {
	RoomId               *int64   `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	RoomType             *int64   `protobuf:"varint,2,req,name=RoomType" json:"RoomType,omitempty"`
	RoomKindId           *int64   `protobuf:"varint,3,req,name=RoomKindId" json:"RoomKindId,omitempty"`
	GameRoomName         *string  `protobuf:"bytes,4,req,name=GameRoomName" json:"GameRoomName,omitempty"`
	MTableCount          *int64   `protobuf:"varint,5,req,name=mTableCount" json:"mTableCount,omitempty"`
	MTableUserCount      *int64   `protobuf:"varint,6,req,name=mTableUserCount" json:"mTableUserCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomData) Reset()         { *m = RoomData{} }
func (m *RoomData) String() string { return proto.CompactTextString(m) }
func (*RoomData) ProtoMessage()    {}
func (*RoomData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{50}
}
func (m *RoomData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomData.Unmarshal(m, b)
}
func (m *RoomData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomData.Marshal(b, m, deterministic)
}
func (dst *RoomData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomData.Merge(dst, src)
}
func (m *RoomData) XXX_Size() int {
	return xxx_messageInfo_RoomData.Size(m)
}
func (m *RoomData) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomData.DiscardUnknown(m)
}

var xxx_messageInfo_RoomData proto.InternalMessageInfo

func (m *RoomData) GetRoomId() int64 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *RoomData) GetRoomType() int64 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

func (m *RoomData) GetRoomKindId() int64 {
	if m != nil && m.RoomKindId != nil {
		return *m.RoomKindId
	}
	return 0
}

func (m *RoomData) GetGameRoomName() string {
	if m != nil && m.GameRoomName != nil {
		return *m.GameRoomName
	}
	return ""
}

func (m *RoomData) GetMTableCount() int64 {
	if m != nil && m.MTableCount != nil {
		return *m.MTableCount
	}
	return 0
}

func (m *RoomData) GetMTableUserCount() int64 {
	if m != nil && m.MTableUserCount != nil {
		return *m.MTableUserCount
	}
	return 0
}

// SC_CLUB_ROOM_LIST           = 400;   //俱乐部房间列表返回
type SC_ClubRoomList struct {
	ClubID               *int64      `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	RoomList             []*RoomData `protobuf:"bytes,2,rep,name=RoomList" json:"RoomList,omitempty"`
	MMaxCreateTableCount *int64      `protobuf:"varint,3,req,name=mMaxCreateTableCount" json:"mMaxCreateTableCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SC_ClubRoomList) Reset()         { *m = SC_ClubRoomList{} }
func (m *SC_ClubRoomList) String() string { return proto.CompactTextString(m) }
func (*SC_ClubRoomList) ProtoMessage()    {}
func (*SC_ClubRoomList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{51}
}
func (m *SC_ClubRoomList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubRoomList.Unmarshal(m, b)
}
func (m *SC_ClubRoomList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubRoomList.Marshal(b, m, deterministic)
}
func (dst *SC_ClubRoomList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubRoomList.Merge(dst, src)
}
func (m *SC_ClubRoomList) XXX_Size() int {
	return xxx_messageInfo_SC_ClubRoomList.Size(m)
}
func (m *SC_ClubRoomList) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubRoomList.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubRoomList proto.InternalMessageInfo

func (m *SC_ClubRoomList) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *SC_ClubRoomList) GetRoomList() []*RoomData {
	if m != nil {
		return m.RoomList
	}
	return nil
}

func (m *SC_ClubRoomList) GetMMaxCreateTableCount() int64 {
	if m != nil && m.MMaxCreateTableCount != nil {
		return *m.MMaxCreateTableCount
	}
	return 0
}

// CS_CLUB_TABLE_LIST           = 301;   //客户端请求俱乐部桌子列表
type CS_ClubTableList struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	TableType            *int64   `protobuf:"varint,2,req,name=TableType" json:"TableType,omitempty"`
	RoomId               *int64   `protobuf:"varint,3,req,name=RoomId" json:"RoomId,omitempty"`
	UserId               *int64   `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	GameCurrencyType     *int32   `protobuf:"varint,5,req,name=GameCurrencyType" json:"GameCurrencyType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ClubTableList) Reset()         { *m = CS_ClubTableList{} }
func (m *CS_ClubTableList) String() string { return proto.CompactTextString(m) }
func (*CS_ClubTableList) ProtoMessage()    {}
func (*CS_ClubTableList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{52}
}
func (m *CS_ClubTableList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubTableList.Unmarshal(m, b)
}
func (m *CS_ClubTableList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubTableList.Marshal(b, m, deterministic)
}
func (dst *CS_ClubTableList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubTableList.Merge(dst, src)
}
func (m *CS_ClubTableList) XXX_Size() int {
	return xxx_messageInfo_CS_ClubTableList.Size(m)
}
func (m *CS_ClubTableList) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubTableList.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubTableList proto.InternalMessageInfo

func (m *CS_ClubTableList) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *CS_ClubTableList) GetTableType() int64 {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return 0
}

func (m *CS_ClubTableList) GetRoomId() int64 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CS_ClubTableList) GetUserId() int64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CS_ClubTableList) GetGameCurrencyType() int32 {
	if m != nil && m.GameCurrencyType != nil {
		return *m.GameCurrencyType
	}
	return 0
}

type StTableAttribute struct {
	GameCurrencyType       *int32   `protobuf:"varint,1,req,name=GameCurrencyType" json:"GameCurrencyType,omitempty"`
	PayRoomRateType        *int32   `protobuf:"varint,2,req,name=PayRoomRateType" json:"PayRoomRateType,omitempty"`
	PlanGameCount          *int32   `protobuf:"varint,3,req,name=PlanGameCount" json:"PlanGameCount,omitempty"`
	DiZhu                  *int32   `protobuf:"varint,4,req,name=DiZhu" json:"DiZhu,omitempty"`
	EnterScore             *int64   `protobuf:"varint,5,req,name=EnterScore" json:"EnterScore,omitempty"`
	LeaveScore             *int64   `protobuf:"varint,6,req,name=LeaveScore" json:"LeaveScore,omitempty"`
	BeiShuLimit            *int64   `protobuf:"varint,7,req,name=BeiShuLimit" json:"BeiShuLimit,omitempty"`
	ChairCount             *int32   `protobuf:"varint,8,req,name=ChairCount" json:"ChairCount,omitempty"`
	IsAllowEnterAfterStart *int32   `protobuf:"varint,9,req,name=IsAllowEnterAfterStart" json:"IsAllowEnterAfterStart,omitempty"`
	TableType              *int64   `protobuf:"varint,10,req,name=TableType" json:"TableType,omitempty"`
	RoomRate               *int64   `protobuf:"varint,11,req,name=RoomRate" json:"RoomRate,omitempty"`
	ServerRate             *int64   `protobuf:"varint,12,req,name=ServerRate" json:"ServerRate,omitempty"`
	TableAdvanceParam      *string  `protobuf:"bytes,13,req,name=TableAdvanceParam" json:"TableAdvanceParam,omitempty"`
	TableName              *string  `protobuf:"bytes,14,req,name=TableName" json:"TableName,omitempty"`
	IsIpWarn               *int32   `protobuf:"varint,15,req,name=IsIpWarn" json:"IsIpWarn,omitempty"`
	IsGpsWarn              *int32   `protobuf:"varint,16,req,name=IsGpsWarn" json:"IsGpsWarn,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *StTableAttribute) Reset()         { *m = StTableAttribute{} }
func (m *StTableAttribute) String() string { return proto.CompactTextString(m) }
func (*StTableAttribute) ProtoMessage()    {}
func (*StTableAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{53}
}
func (m *StTableAttribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StTableAttribute.Unmarshal(m, b)
}
func (m *StTableAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StTableAttribute.Marshal(b, m, deterministic)
}
func (dst *StTableAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StTableAttribute.Merge(dst, src)
}
func (m *StTableAttribute) XXX_Size() int {
	return xxx_messageInfo_StTableAttribute.Size(m)
}
func (m *StTableAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_StTableAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_StTableAttribute proto.InternalMessageInfo

func (m *StTableAttribute) GetGameCurrencyType() int32 {
	if m != nil && m.GameCurrencyType != nil {
		return *m.GameCurrencyType
	}
	return 0
}

func (m *StTableAttribute) GetPayRoomRateType() int32 {
	if m != nil && m.PayRoomRateType != nil {
		return *m.PayRoomRateType
	}
	return 0
}

func (m *StTableAttribute) GetPlanGameCount() int32 {
	if m != nil && m.PlanGameCount != nil {
		return *m.PlanGameCount
	}
	return 0
}

func (m *StTableAttribute) GetDiZhu() int32 {
	if m != nil && m.DiZhu != nil {
		return *m.DiZhu
	}
	return 0
}

func (m *StTableAttribute) GetEnterScore() int64 {
	if m != nil && m.EnterScore != nil {
		return *m.EnterScore
	}
	return 0
}

func (m *StTableAttribute) GetLeaveScore() int64 {
	if m != nil && m.LeaveScore != nil {
		return *m.LeaveScore
	}
	return 0
}

func (m *StTableAttribute) GetBeiShuLimit() int64 {
	if m != nil && m.BeiShuLimit != nil {
		return *m.BeiShuLimit
	}
	return 0
}

func (m *StTableAttribute) GetChairCount() int32 {
	if m != nil && m.ChairCount != nil {
		return *m.ChairCount
	}
	return 0
}

func (m *StTableAttribute) GetIsAllowEnterAfterStart() int32 {
	if m != nil && m.IsAllowEnterAfterStart != nil {
		return *m.IsAllowEnterAfterStart
	}
	return 0
}

func (m *StTableAttribute) GetTableType() int64 {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return 0
}

func (m *StTableAttribute) GetRoomRate() int64 {
	if m != nil && m.RoomRate != nil {
		return *m.RoomRate
	}
	return 0
}

func (m *StTableAttribute) GetServerRate() int64 {
	if m != nil && m.ServerRate != nil {
		return *m.ServerRate
	}
	return 0
}

func (m *StTableAttribute) GetTableAdvanceParam() string {
	if m != nil && m.TableAdvanceParam != nil {
		return *m.TableAdvanceParam
	}
	return ""
}

func (m *StTableAttribute) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *StTableAttribute) GetIsIpWarn() int32 {
	if m != nil && m.IsIpWarn != nil {
		return *m.IsIpWarn
	}
	return 0
}

func (m *StTableAttribute) GetIsGpsWarn() int32 {
	if m != nil && m.IsGpsWarn != nil {
		return *m.IsGpsWarn
	}
	return 0
}

type MTableUserInfo struct {
	MUserId              *int64   `protobuf:"varint,1,req,name=mUserId" json:"mUserId,omitempty"`
	MAccId               *int64   `protobuf:"varint,2,req,name=mAccId" json:"mAccId,omitempty"`
	MNickName            *string  `protobuf:"bytes,3,req,name=mNickName" json:"mNickName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MTableUserInfo) Reset()         { *m = MTableUserInfo{} }
func (m *MTableUserInfo) String() string { return proto.CompactTextString(m) }
func (*MTableUserInfo) ProtoMessage()    {}
func (*MTableUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{54}
}
func (m *MTableUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MTableUserInfo.Unmarshal(m, b)
}
func (m *MTableUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MTableUserInfo.Marshal(b, m, deterministic)
}
func (dst *MTableUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MTableUserInfo.Merge(dst, src)
}
func (m *MTableUserInfo) XXX_Size() int {
	return xxx_messageInfo_MTableUserInfo.Size(m)
}
func (m *MTableUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MTableUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MTableUserInfo proto.InternalMessageInfo

func (m *MTableUserInfo) GetMUserId() int64 {
	if m != nil && m.MUserId != nil {
		return *m.MUserId
	}
	return 0
}

func (m *MTableUserInfo) GetMAccId() int64 {
	if m != nil && m.MAccId != nil {
		return *m.MAccId
	}
	return 0
}

func (m *MTableUserInfo) GetMNickName() string {
	if m != nil && m.MNickName != nil {
		return *m.MNickName
	}
	return ""
}

type StTableData struct {
	RoomId               *int64            `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	TableId              *int64            `protobuf:"varint,2,req,name=TableId" json:"TableId,omitempty"`
	UserCount            *int32            `protobuf:"varint,5,req,name=UserCount" json:"UserCount,omitempty"`
	IsInGame             *bool             `protobuf:"varint,6,req,name=IsInGame" json:"IsInGame,omitempty"`
	ClubId               *int64            `protobuf:"varint,7,req,name=ClubId" json:"ClubId,omitempty"`
	OwnerUserId          *int64            `protobuf:"varint,8,req,name=OwnerUserId" json:"OwnerUserId,omitempty"`
	OwnerUserName        *string           `protobuf:"bytes,10,opt,name=OwnerUserName" json:"OwnerUserName,omitempty"`
	TableCreateTime      *int64            `protobuf:"varint,11,opt,name=TableCreateTime" json:"TableCreateTime,omitempty"`
	TableTotalServerRate *int64            `protobuf:"varint,12,opt,name=TableTotalServerRate" json:"TableTotalServerRate,omitempty"`
	TableAttribute       *StTableAttribute `protobuf:"bytes,9,req,name=TableAttribute" json:"TableAttribute,omitempty"`
	MUserData            []*MTableUserInfo `protobuf:"bytes,13,rep,name=mUserData" json:"mUserData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StTableData) Reset()         { *m = StTableData{} }
func (m *StTableData) String() string { return proto.CompactTextString(m) }
func (*StTableData) ProtoMessage()    {}
func (*StTableData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{55}
}
func (m *StTableData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StTableData.Unmarshal(m, b)
}
func (m *StTableData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StTableData.Marshal(b, m, deterministic)
}
func (dst *StTableData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StTableData.Merge(dst, src)
}
func (m *StTableData) XXX_Size() int {
	return xxx_messageInfo_StTableData.Size(m)
}
func (m *StTableData) XXX_DiscardUnknown() {
	xxx_messageInfo_StTableData.DiscardUnknown(m)
}

var xxx_messageInfo_StTableData proto.InternalMessageInfo

func (m *StTableData) GetRoomId() int64 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *StTableData) GetTableId() int64 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *StTableData) GetUserCount() int32 {
	if m != nil && m.UserCount != nil {
		return *m.UserCount
	}
	return 0
}

func (m *StTableData) GetIsInGame() bool {
	if m != nil && m.IsInGame != nil {
		return *m.IsInGame
	}
	return false
}

func (m *StTableData) GetClubId() int64 {
	if m != nil && m.ClubId != nil {
		return *m.ClubId
	}
	return 0
}

func (m *StTableData) GetOwnerUserId() int64 {
	if m != nil && m.OwnerUserId != nil {
		return *m.OwnerUserId
	}
	return 0
}

func (m *StTableData) GetOwnerUserName() string {
	if m != nil && m.OwnerUserName != nil {
		return *m.OwnerUserName
	}
	return ""
}

func (m *StTableData) GetTableCreateTime() int64 {
	if m != nil && m.TableCreateTime != nil {
		return *m.TableCreateTime
	}
	return 0
}

func (m *StTableData) GetTableTotalServerRate() int64 {
	if m != nil && m.TableTotalServerRate != nil {
		return *m.TableTotalServerRate
	}
	return 0
}

func (m *StTableData) GetTableAttribute() *StTableAttribute {
	if m != nil {
		return m.TableAttribute
	}
	return nil
}

func (m *StTableData) GetMUserData() []*MTableUserInfo {
	if m != nil {
		return m.MUserData
	}
	return nil
}

// SC_CLUB_TABLE_LIST           = 401;   //俱乐部桌子列表返回
type SC_ClubTableList struct {
	ClubID               *int64         `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	TableType            *int64         `protobuf:"varint,2,req,name=TableType" json:"TableType,omitempty"`
	RoomId               *int64         `protobuf:"varint,3,req,name=RoomId" json:"RoomId,omitempty"`
	UserId               *int64         `protobuf:"varint,4,req,name=UserId" json:"UserId,omitempty"`
	GameCurrencyType     *int32         `protobuf:"varint,5,req,name=GameCurrencyType" json:"GameCurrencyType,omitempty"`
	TableList            []*StTableData `protobuf:"bytes,6,rep,name=TableList" json:"TableList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SC_ClubTableList) Reset()         { *m = SC_ClubTableList{} }
func (m *SC_ClubTableList) String() string { return proto.CompactTextString(m) }
func (*SC_ClubTableList) ProtoMessage()    {}
func (*SC_ClubTableList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{56}
}
func (m *SC_ClubTableList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubTableList.Unmarshal(m, b)
}
func (m *SC_ClubTableList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubTableList.Marshal(b, m, deterministic)
}
func (dst *SC_ClubTableList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubTableList.Merge(dst, src)
}
func (m *SC_ClubTableList) XXX_Size() int {
	return xxx_messageInfo_SC_ClubTableList.Size(m)
}
func (m *SC_ClubTableList) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubTableList.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubTableList proto.InternalMessageInfo

func (m *SC_ClubTableList) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *SC_ClubTableList) GetTableType() int64 {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return 0
}

func (m *SC_ClubTableList) GetRoomId() int64 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *SC_ClubTableList) GetUserId() int64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SC_ClubTableList) GetGameCurrencyType() int32 {
	if m != nil && m.GameCurrencyType != nil {
		return *m.GameCurrencyType
	}
	return 0
}

func (m *SC_ClubTableList) GetTableList() []*StTableData {
	if m != nil {
		return m.TableList
	}
	return nil
}

// CS_CLUB_CREATE_TABLE		 =302;	 //创建桌子
type CS_ClubCreateTable struct {
	ClubID               *int64            `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	RoomId               *int64            `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	TableType            *int32            `protobuf:"varint,3,req,name=TableType" json:"TableType,omitempty"`
	TableAttribute       *StTableAttribute `protobuf:"bytes,4,req,name=TableAttribute" json:"TableAttribute,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CS_ClubCreateTable) Reset()         { *m = CS_ClubCreateTable{} }
func (m *CS_ClubCreateTable) String() string { return proto.CompactTextString(m) }
func (*CS_ClubCreateTable) ProtoMessage()    {}
func (*CS_ClubCreateTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{57}
}
func (m *CS_ClubCreateTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubCreateTable.Unmarshal(m, b)
}
func (m *CS_ClubCreateTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubCreateTable.Marshal(b, m, deterministic)
}
func (dst *CS_ClubCreateTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubCreateTable.Merge(dst, src)
}
func (m *CS_ClubCreateTable) XXX_Size() int {
	return xxx_messageInfo_CS_ClubCreateTable.Size(m)
}
func (m *CS_ClubCreateTable) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubCreateTable.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubCreateTable proto.InternalMessageInfo

func (m *CS_ClubCreateTable) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *CS_ClubCreateTable) GetRoomId() int64 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CS_ClubCreateTable) GetTableType() int32 {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return 0
}

func (m *CS_ClubCreateTable) GetTableAttribute() *StTableAttribute {
	if m != nil {
		return m.TableAttribute
	}
	return nil
}

// SC_CLUB_CREATE_TABLE		 = 402 	// 创建桌子返回
type SC_ClubCreateTable struct {
	ClubID               *int64            `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	RoomId               *int64            `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	Result               *int32            `protobuf:"varint,3,req,name=Result" json:"Result,omitempty"`
	ResultStr            *string           `protobuf:"bytes,4,req,name=ResultStr" json:"ResultStr,omitempty"`
	TableId              *int64            `protobuf:"varint,5,req,name=TableId" json:"TableId,omitempty"`
	TableAttribute       *StTableAttribute `protobuf:"bytes,7,opt,name=TableAttribute" json:"TableAttribute,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SC_ClubCreateTable) Reset()         { *m = SC_ClubCreateTable{} }
func (m *SC_ClubCreateTable) String() string { return proto.CompactTextString(m) }
func (*SC_ClubCreateTable) ProtoMessage()    {}
func (*SC_ClubCreateTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{58}
}
func (m *SC_ClubCreateTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubCreateTable.Unmarshal(m, b)
}
func (m *SC_ClubCreateTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubCreateTable.Marshal(b, m, deterministic)
}
func (dst *SC_ClubCreateTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubCreateTable.Merge(dst, src)
}
func (m *SC_ClubCreateTable) XXX_Size() int {
	return xxx_messageInfo_SC_ClubCreateTable.Size(m)
}
func (m *SC_ClubCreateTable) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubCreateTable.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubCreateTable proto.InternalMessageInfo

func (m *SC_ClubCreateTable) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *SC_ClubCreateTable) GetRoomId() int64 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *SC_ClubCreateTable) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *SC_ClubCreateTable) GetResultStr() string {
	if m != nil && m.ResultStr != nil {
		return *m.ResultStr
	}
	return ""
}

func (m *SC_ClubCreateTable) GetTableId() int64 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *SC_ClubCreateTable) GetTableAttribute() *StTableAttribute {
	if m != nil {
		return m.TableAttribute
	}
	return nil
}

// CS_CLUB_DISMISS_TABLE		 =303;	 //解散桌子
type CS_ClubDisMissTable struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	RoomId               *int64   `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	TableId              *int64   `protobuf:"varint,3,req,name=TableId" json:"TableId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ClubDisMissTable) Reset()         { *m = CS_ClubDisMissTable{} }
func (m *CS_ClubDisMissTable) String() string { return proto.CompactTextString(m) }
func (*CS_ClubDisMissTable) ProtoMessage()    {}
func (*CS_ClubDisMissTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{59}
}
func (m *CS_ClubDisMissTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubDisMissTable.Unmarshal(m, b)
}
func (m *CS_ClubDisMissTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubDisMissTable.Marshal(b, m, deterministic)
}
func (dst *CS_ClubDisMissTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubDisMissTable.Merge(dst, src)
}
func (m *CS_ClubDisMissTable) XXX_Size() int {
	return xxx_messageInfo_CS_ClubDisMissTable.Size(m)
}
func (m *CS_ClubDisMissTable) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubDisMissTable.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubDisMissTable proto.InternalMessageInfo

func (m *CS_ClubDisMissTable) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *CS_ClubDisMissTable) GetRoomId() int64 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CS_ClubDisMissTable) GetTableId() int64 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

// SC_CLUB_DISMISS_TABLE		 = 403 	// 解散桌子返回
type SC_ClubDisMissTable struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	RoomId               *int64   `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	TableId              *int64   `protobuf:"varint,3,req,name=TableId" json:"TableId,omitempty"`
	Result               *int32   `protobuf:"varint,4,req,name=Result" json:"Result,omitempty"`
	ResultStr            *string  `protobuf:"bytes,5,req,name=ResultStr" json:"ResultStr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_ClubDisMissTable) Reset()         { *m = SC_ClubDisMissTable{} }
func (m *SC_ClubDisMissTable) String() string { return proto.CompactTextString(m) }
func (*SC_ClubDisMissTable) ProtoMessage()    {}
func (*SC_ClubDisMissTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{60}
}
func (m *SC_ClubDisMissTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubDisMissTable.Unmarshal(m, b)
}
func (m *SC_ClubDisMissTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubDisMissTable.Marshal(b, m, deterministic)
}
func (dst *SC_ClubDisMissTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubDisMissTable.Merge(dst, src)
}
func (m *SC_ClubDisMissTable) XXX_Size() int {
	return xxx_messageInfo_SC_ClubDisMissTable.Size(m)
}
func (m *SC_ClubDisMissTable) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubDisMissTable.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubDisMissTable proto.InternalMessageInfo

func (m *SC_ClubDisMissTable) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *SC_ClubDisMissTable) GetRoomId() int64 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *SC_ClubDisMissTable) GetTableId() int64 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *SC_ClubDisMissTable) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *SC_ClubDisMissTable) GetResultStr() string {
	if m != nil && m.ResultStr != nil {
		return *m.ResultStr
	}
	return ""
}

// CS_CLUB_ENTER_ROOM		 =304;	 //进入房间
type CS_ClubEnterRoom struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	RoomId               *int64   `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	TableId              *int64   `protobuf:"varint,3,req,name=TableId" json:"TableId,omitempty"`
	UserLng              *int64   `protobuf:"varint,4,req,name=UserLng" json:"UserLng,omitempty"`
	UserLat              *int64   `protobuf:"varint,5,req,name=UserLat" json:"UserLat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ClubEnterRoom) Reset()         { *m = CS_ClubEnterRoom{} }
func (m *CS_ClubEnterRoom) String() string { return proto.CompactTextString(m) }
func (*CS_ClubEnterRoom) ProtoMessage()    {}
func (*CS_ClubEnterRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{61}
}
func (m *CS_ClubEnterRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubEnterRoom.Unmarshal(m, b)
}
func (m *CS_ClubEnterRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubEnterRoom.Marshal(b, m, deterministic)
}
func (dst *CS_ClubEnterRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubEnterRoom.Merge(dst, src)
}
func (m *CS_ClubEnterRoom) XXX_Size() int {
	return xxx_messageInfo_CS_ClubEnterRoom.Size(m)
}
func (m *CS_ClubEnterRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubEnterRoom.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubEnterRoom proto.InternalMessageInfo

func (m *CS_ClubEnterRoom) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *CS_ClubEnterRoom) GetRoomId() int64 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CS_ClubEnterRoom) GetTableId() int64 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CS_ClubEnterRoom) GetUserLng() int64 {
	if m != nil && m.UserLng != nil {
		return *m.UserLng
	}
	return 0
}

func (m *CS_ClubEnterRoom) GetUserLat() int64 {
	if m != nil && m.UserLat != nil {
		return *m.UserLat
	}
	return 0
}

// SC_CLUB_ENTER_ROOM		 = 404 	// 进入响应
type SC_ClubEnterRoom struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	RoomId               *int64   `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	TableId              *int64   `protobuf:"varint,3,req,name=TableId" json:"TableId,omitempty"`
	Result               *int32   `protobuf:"varint,4,req,name=Result" json:"Result,omitempty"`
	ResultStr            *string  `protobuf:"bytes,5,req,name=ResultStr" json:"ResultStr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_ClubEnterRoom) Reset()         { *m = SC_ClubEnterRoom{} }
func (m *SC_ClubEnterRoom) String() string { return proto.CompactTextString(m) }
func (*SC_ClubEnterRoom) ProtoMessage()    {}
func (*SC_ClubEnterRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{62}
}
func (m *SC_ClubEnterRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubEnterRoom.Unmarshal(m, b)
}
func (m *SC_ClubEnterRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubEnterRoom.Marshal(b, m, deterministic)
}
func (dst *SC_ClubEnterRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubEnterRoom.Merge(dst, src)
}
func (m *SC_ClubEnterRoom) XXX_Size() int {
	return xxx_messageInfo_SC_ClubEnterRoom.Size(m)
}
func (m *SC_ClubEnterRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubEnterRoom.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubEnterRoom proto.InternalMessageInfo

func (m *SC_ClubEnterRoom) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *SC_ClubEnterRoom) GetRoomId() int64 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *SC_ClubEnterRoom) GetTableId() int64 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *SC_ClubEnterRoom) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *SC_ClubEnterRoom) GetResultStr() string {
	if m != nil && m.ResultStr != nil {
		return *m.ResultStr
	}
	return ""
}

// CS_CLUB_GAME_RECORD_LIST		 	=305;	 //请求游戏记录列表
type CS_ClubGameRecordList struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	MGameCurrencyType    *int32   `protobuf:"varint,2,req,name=mGameCurrencyType" json:"mGameCurrencyType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ClubGameRecordList) Reset()         { *m = CS_ClubGameRecordList{} }
func (m *CS_ClubGameRecordList) String() string { return proto.CompactTextString(m) }
func (*CS_ClubGameRecordList) ProtoMessage()    {}
func (*CS_ClubGameRecordList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{63}
}
func (m *CS_ClubGameRecordList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubGameRecordList.Unmarshal(m, b)
}
func (m *CS_ClubGameRecordList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubGameRecordList.Marshal(b, m, deterministic)
}
func (dst *CS_ClubGameRecordList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubGameRecordList.Merge(dst, src)
}
func (m *CS_ClubGameRecordList) XXX_Size() int {
	return xxx_messageInfo_CS_ClubGameRecordList.Size(m)
}
func (m *CS_ClubGameRecordList) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubGameRecordList.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubGameRecordList proto.InternalMessageInfo

func (m *CS_ClubGameRecordList) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *CS_ClubGameRecordList) GetMGameCurrencyType() int32 {
	if m != nil && m.MGameCurrencyType != nil {
		return *m.MGameCurrencyType
	}
	return 0
}

// SC_CLUB_GAME_RECORD_LIST            = 406; //俱乐部房间列表返回
type SC_ClubGameRecordList struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	MGameCurrencyType    *int32   `protobuf:"varint,2,req,name=mGameCurrencyType" json:"mGameCurrencyType,omitempty"`
	MGameRecords         [][]byte `protobuf:"bytes,3,rep,name=mGameRecords" json:"mGameRecords,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_ClubGameRecordList) Reset()         { *m = SC_ClubGameRecordList{} }
func (m *SC_ClubGameRecordList) String() string { return proto.CompactTextString(m) }
func (*SC_ClubGameRecordList) ProtoMessage()    {}
func (*SC_ClubGameRecordList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{64}
}
func (m *SC_ClubGameRecordList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubGameRecordList.Unmarshal(m, b)
}
func (m *SC_ClubGameRecordList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubGameRecordList.Marshal(b, m, deterministic)
}
func (dst *SC_ClubGameRecordList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubGameRecordList.Merge(dst, src)
}
func (m *SC_ClubGameRecordList) XXX_Size() int {
	return xxx_messageInfo_SC_ClubGameRecordList.Size(m)
}
func (m *SC_ClubGameRecordList) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubGameRecordList.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubGameRecordList proto.InternalMessageInfo

func (m *SC_ClubGameRecordList) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *SC_ClubGameRecordList) GetMGameCurrencyType() int32 {
	if m != nil && m.MGameCurrencyType != nil {
		return *m.MGameCurrencyType
	}
	return 0
}

func (m *SC_ClubGameRecordList) GetMGameRecords() [][]byte {
	if m != nil {
		return m.MGameRecords
	}
	return nil
}

// CS_CLUB_GAME_VIDEOTAPE 		 	=306;	 //请求游戏录像
type CS_ClubGameVideotape struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	MGameVideotapeKey    *string  `protobuf:"bytes,2,req,name=mGameVideotapeKey" json:"mGameVideotapeKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ClubGameVideotape) Reset()         { *m = CS_ClubGameVideotape{} }
func (m *CS_ClubGameVideotape) String() string { return proto.CompactTextString(m) }
func (*CS_ClubGameVideotape) ProtoMessage()    {}
func (*CS_ClubGameVideotape) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{65}
}
func (m *CS_ClubGameVideotape) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubGameVideotape.Unmarshal(m, b)
}
func (m *CS_ClubGameVideotape) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubGameVideotape.Marshal(b, m, deterministic)
}
func (dst *CS_ClubGameVideotape) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubGameVideotape.Merge(dst, src)
}
func (m *CS_ClubGameVideotape) XXX_Size() int {
	return xxx_messageInfo_CS_ClubGameVideotape.Size(m)
}
func (m *CS_ClubGameVideotape) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubGameVideotape.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubGameVideotape proto.InternalMessageInfo

func (m *CS_ClubGameVideotape) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *CS_ClubGameVideotape) GetMGameVideotapeKey() string {
	if m != nil && m.MGameVideotapeKey != nil {
		return *m.MGameVideotapeKey
	}
	return ""
}

// SC_CLUB_GAME_VIDEOTAPE             = 407; //请求游戏返回
type SC_ClubGameVideotape struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	MGameVideotapeKey    *string  `protobuf:"bytes,2,req,name=mGameVideotapeKey" json:"mGameVideotapeKey,omitempty"`
	MGameVideotapeInfo   []byte   `protobuf:"bytes,3,opt,name=mGameVideotapeInfo" json:"mGameVideotapeInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_ClubGameVideotape) Reset()         { *m = SC_ClubGameVideotape{} }
func (m *SC_ClubGameVideotape) String() string { return proto.CompactTextString(m) }
func (*SC_ClubGameVideotape) ProtoMessage()    {}
func (*SC_ClubGameVideotape) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{66}
}
func (m *SC_ClubGameVideotape) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubGameVideotape.Unmarshal(m, b)
}
func (m *SC_ClubGameVideotape) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubGameVideotape.Marshal(b, m, deterministic)
}
func (dst *SC_ClubGameVideotape) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubGameVideotape.Merge(dst, src)
}
func (m *SC_ClubGameVideotape) XXX_Size() int {
	return xxx_messageInfo_SC_ClubGameVideotape.Size(m)
}
func (m *SC_ClubGameVideotape) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubGameVideotape.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubGameVideotape proto.InternalMessageInfo

func (m *SC_ClubGameVideotape) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *SC_ClubGameVideotape) GetMGameVideotapeKey() string {
	if m != nil && m.MGameVideotapeKey != nil {
		return *m.MGameVideotapeKey
	}
	return ""
}

func (m *SC_ClubGameVideotape) GetMGameVideotapeInfo() []byte {
	if m != nil {
		return m.MGameVideotapeInfo
	}
	return nil
}

// CS_CLUB_STATISTICS_INFO 		 	=307;	 //请求俱乐部统计信息
type CS_ClubStatisticsInfo struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ClubStatisticsInfo) Reset()         { *m = CS_ClubStatisticsInfo{} }
func (m *CS_ClubStatisticsInfo) String() string { return proto.CompactTextString(m) }
func (*CS_ClubStatisticsInfo) ProtoMessage()    {}
func (*CS_ClubStatisticsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{67}
}
func (m *CS_ClubStatisticsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubStatisticsInfo.Unmarshal(m, b)
}
func (m *CS_ClubStatisticsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubStatisticsInfo.Marshal(b, m, deterministic)
}
func (dst *CS_ClubStatisticsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubStatisticsInfo.Merge(dst, src)
}
func (m *CS_ClubStatisticsInfo) XXX_Size() int {
	return xxx_messageInfo_CS_ClubStatisticsInfo.Size(m)
}
func (m *CS_ClubStatisticsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubStatisticsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubStatisticsInfo proto.InternalMessageInfo

func (m *CS_ClubStatisticsInfo) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

type MClubRoomStatisticsInfo struct {
	KindId                      *int64   `protobuf:"varint,1,req,name=KindId" json:"KindId,omitempty"`
	RoomId                      *int64   `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	TableCount                  *int64   `protobuf:"varint,3,req,name=TableCount" json:"TableCount,omitempty"`
	TodayTotalOpenTableCount    *int64   `protobuf:"varint,4,req,name=TodayTotalOpenTableCount" json:"TodayTotalOpenTableCount,omitempty"`
	TodayTotalServerRate        *int64   `protobuf:"varint,5,req,name=TodayTotalServerRate" json:"TodayTotalServerRate,omitempty"`
	YestodayTotalOpenTableCount *int64   `protobuf:"varint,6,req,name=YestodayTotalOpenTableCount" json:"YestodayTotalOpenTableCount,omitempty"`
	YestodayTotalServerRate     *int64   `protobuf:"varint,7,req,name=YestodayTotalServerRate" json:"YestodayTotalServerRate,omitempty"`
	OnLineUserCount             *int64   `protobuf:"varint,8,req,name=OnLineUserCount" json:"OnLineUserCount,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *MClubRoomStatisticsInfo) Reset()         { *m = MClubRoomStatisticsInfo{} }
func (m *MClubRoomStatisticsInfo) String() string { return proto.CompactTextString(m) }
func (*MClubRoomStatisticsInfo) ProtoMessage()    {}
func (*MClubRoomStatisticsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{68}
}
func (m *MClubRoomStatisticsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MClubRoomStatisticsInfo.Unmarshal(m, b)
}
func (m *MClubRoomStatisticsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MClubRoomStatisticsInfo.Marshal(b, m, deterministic)
}
func (dst *MClubRoomStatisticsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MClubRoomStatisticsInfo.Merge(dst, src)
}
func (m *MClubRoomStatisticsInfo) XXX_Size() int {
	return xxx_messageInfo_MClubRoomStatisticsInfo.Size(m)
}
func (m *MClubRoomStatisticsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MClubRoomStatisticsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MClubRoomStatisticsInfo proto.InternalMessageInfo

func (m *MClubRoomStatisticsInfo) GetKindId() int64 {
	if m != nil && m.KindId != nil {
		return *m.KindId
	}
	return 0
}

func (m *MClubRoomStatisticsInfo) GetRoomId() int64 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *MClubRoomStatisticsInfo) GetTableCount() int64 {
	if m != nil && m.TableCount != nil {
		return *m.TableCount
	}
	return 0
}

func (m *MClubRoomStatisticsInfo) GetTodayTotalOpenTableCount() int64 {
	if m != nil && m.TodayTotalOpenTableCount != nil {
		return *m.TodayTotalOpenTableCount
	}
	return 0
}

func (m *MClubRoomStatisticsInfo) GetTodayTotalServerRate() int64 {
	if m != nil && m.TodayTotalServerRate != nil {
		return *m.TodayTotalServerRate
	}
	return 0
}

func (m *MClubRoomStatisticsInfo) GetYestodayTotalOpenTableCount() int64 {
	if m != nil && m.YestodayTotalOpenTableCount != nil {
		return *m.YestodayTotalOpenTableCount
	}
	return 0
}

func (m *MClubRoomStatisticsInfo) GetYestodayTotalServerRate() int64 {
	if m != nil && m.YestodayTotalServerRate != nil {
		return *m.YestodayTotalServerRate
	}
	return 0
}

func (m *MClubRoomStatisticsInfo) GetOnLineUserCount() int64 {
	if m != nil && m.OnLineUserCount != nil {
		return *m.OnLineUserCount
	}
	return 0
}

// SC_CLUB_STATISTICS_INFO 	 =408;	 //俱乐部统计信息返回
type SC_ClubStatisticsInfo struct {
	ClubID                    *int64                     `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	ClubServerRate            *int64                     `protobuf:"varint,2,req,name=ClubServerRate" json:"ClubServerRate,omitempty"`
	TotalClubServerRate       *int64                     `protobuf:"varint,3,req,name=TotalClubServerRate" json:"TotalClubServerRate,omitempty"`
	TodayClubServerRate       *int64                     `protobuf:"varint,4,req,name=TodayClubServerRate" json:"TodayClubServerRate,omitempty"`
	YestodayClubServerRate    *int64                     `protobuf:"varint,5,req,name=YestodayClubServerRate" json:"YestodayClubServerRate,omitempty"`
	MRoomStatisticsInfo       []*MClubRoomStatisticsInfo `protobuf:"bytes,6,rep,name=mRoomStatisticsInfo" json:"mRoomStatisticsInfo,omitempty"`
	LastReceiveServerRateTime *int64                     `protobuf:"varint,7,req,name=LastReceiveServerRateTime" json:"LastReceiveServerRateTime,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                   `json:"-"`
	XXX_unrecognized          []byte                     `json:"-"`
	XXX_sizecache             int32                      `json:"-"`
}

func (m *SC_ClubStatisticsInfo) Reset()         { *m = SC_ClubStatisticsInfo{} }
func (m *SC_ClubStatisticsInfo) String() string { return proto.CompactTextString(m) }
func (*SC_ClubStatisticsInfo) ProtoMessage()    {}
func (*SC_ClubStatisticsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{69}
}
func (m *SC_ClubStatisticsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubStatisticsInfo.Unmarshal(m, b)
}
func (m *SC_ClubStatisticsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubStatisticsInfo.Marshal(b, m, deterministic)
}
func (dst *SC_ClubStatisticsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubStatisticsInfo.Merge(dst, src)
}
func (m *SC_ClubStatisticsInfo) XXX_Size() int {
	return xxx_messageInfo_SC_ClubStatisticsInfo.Size(m)
}
func (m *SC_ClubStatisticsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubStatisticsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubStatisticsInfo proto.InternalMessageInfo

func (m *SC_ClubStatisticsInfo) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *SC_ClubStatisticsInfo) GetClubServerRate() int64 {
	if m != nil && m.ClubServerRate != nil {
		return *m.ClubServerRate
	}
	return 0
}

func (m *SC_ClubStatisticsInfo) GetTotalClubServerRate() int64 {
	if m != nil && m.TotalClubServerRate != nil {
		return *m.TotalClubServerRate
	}
	return 0
}

func (m *SC_ClubStatisticsInfo) GetTodayClubServerRate() int64 {
	if m != nil && m.TodayClubServerRate != nil {
		return *m.TodayClubServerRate
	}
	return 0
}

func (m *SC_ClubStatisticsInfo) GetYestodayClubServerRate() int64 {
	if m != nil && m.YestodayClubServerRate != nil {
		return *m.YestodayClubServerRate
	}
	return 0
}

func (m *SC_ClubStatisticsInfo) GetMRoomStatisticsInfo() []*MClubRoomStatisticsInfo {
	if m != nil {
		return m.MRoomStatisticsInfo
	}
	return nil
}

func (m *SC_ClubStatisticsInfo) GetLastReceiveServerRateTime() int64 {
	if m != nil && m.LastReceiveServerRateTime != nil {
		return *m.LastReceiveServerRateTime
	}
	return 0
}

// CS_CLUB_RECEIVE_SERVER_RATE 		 	=308;	 //请求领取服务费
type CS_ClubReceiveServerRate struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	ReceiveScore         *int64   `protobuf:"varint,2,req,name=ReceiveScore" json:"ReceiveScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ClubReceiveServerRate) Reset()         { *m = CS_ClubReceiveServerRate{} }
func (m *CS_ClubReceiveServerRate) String() string { return proto.CompactTextString(m) }
func (*CS_ClubReceiveServerRate) ProtoMessage()    {}
func (*CS_ClubReceiveServerRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{70}
}
func (m *CS_ClubReceiveServerRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubReceiveServerRate.Unmarshal(m, b)
}
func (m *CS_ClubReceiveServerRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubReceiveServerRate.Marshal(b, m, deterministic)
}
func (dst *CS_ClubReceiveServerRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubReceiveServerRate.Merge(dst, src)
}
func (m *CS_ClubReceiveServerRate) XXX_Size() int {
	return xxx_messageInfo_CS_ClubReceiveServerRate.Size(m)
}
func (m *CS_ClubReceiveServerRate) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubReceiveServerRate.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubReceiveServerRate proto.InternalMessageInfo

func (m *CS_ClubReceiveServerRate) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *CS_ClubReceiveServerRate) GetReceiveScore() int64 {
	if m != nil && m.ReceiveScore != nil {
		return *m.ReceiveScore
	}
	return 0
}

// SC_CLUB_RECEIVE_SERVER_RATE  =409;	 //领取服务费返回
type SC_ClubReceiveServerRate struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	ReceiveScore         *int64   `protobuf:"varint,2,req,name=ReceiveScore" json:"ReceiveScore,omitempty"`
	RemainderScore       *int64   `protobuf:"varint,3,req,name=RemainderScore" json:"RemainderScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_ClubReceiveServerRate) Reset()         { *m = SC_ClubReceiveServerRate{} }
func (m *SC_ClubReceiveServerRate) String() string { return proto.CompactTextString(m) }
func (*SC_ClubReceiveServerRate) ProtoMessage()    {}
func (*SC_ClubReceiveServerRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{71}
}
func (m *SC_ClubReceiveServerRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubReceiveServerRate.Unmarshal(m, b)
}
func (m *SC_ClubReceiveServerRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubReceiveServerRate.Marshal(b, m, deterministic)
}
func (dst *SC_ClubReceiveServerRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubReceiveServerRate.Merge(dst, src)
}
func (m *SC_ClubReceiveServerRate) XXX_Size() int {
	return xxx_messageInfo_SC_ClubReceiveServerRate.Size(m)
}
func (m *SC_ClubReceiveServerRate) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubReceiveServerRate.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubReceiveServerRate proto.InternalMessageInfo

func (m *SC_ClubReceiveServerRate) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *SC_ClubReceiveServerRate) GetReceiveScore() int64 {
	if m != nil && m.ReceiveScore != nil {
		return *m.ReceiveScore
	}
	return 0
}

func (m *SC_ClubReceiveServerRate) GetRemainderScore() int64 {
	if m != nil && m.RemainderScore != nil {
		return *m.RemainderScore
	}
	return 0
}

// CS_CLUB_SERVER_RATE_RECORD_LIST 		 =309;	 //请求服务费纪录
type CS_ClubServerRateRecordList struct {
	ClubID               *int64   `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_ClubServerRateRecordList) Reset()         { *m = CS_ClubServerRateRecordList{} }
func (m *CS_ClubServerRateRecordList) String() string { return proto.CompactTextString(m) }
func (*CS_ClubServerRateRecordList) ProtoMessage()    {}
func (*CS_ClubServerRateRecordList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{72}
}
func (m *CS_ClubServerRateRecordList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_ClubServerRateRecordList.Unmarshal(m, b)
}
func (m *CS_ClubServerRateRecordList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_ClubServerRateRecordList.Marshal(b, m, deterministic)
}
func (dst *CS_ClubServerRateRecordList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_ClubServerRateRecordList.Merge(dst, src)
}
func (m *CS_ClubServerRateRecordList) XXX_Size() int {
	return xxx_messageInfo_CS_ClubServerRateRecordList.Size(m)
}
func (m *CS_ClubServerRateRecordList) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_ClubServerRateRecordList.DiscardUnknown(m)
}

var xxx_messageInfo_CS_ClubServerRateRecordList proto.InternalMessageInfo

func (m *CS_ClubServerRateRecordList) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

type MDayServerRateInfo struct {
	ServerRateScore      *int64   `protobuf:"varint,1,req,name=ServerRateScore" json:"ServerRateScore,omitempty"`
	DayTime              *int64   `protobuf:"varint,2,req,name=DayTime" json:"DayTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MDayServerRateInfo) Reset()         { *m = MDayServerRateInfo{} }
func (m *MDayServerRateInfo) String() string { return proto.CompactTextString(m) }
func (*MDayServerRateInfo) ProtoMessage()    {}
func (*MDayServerRateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{73}
}
func (m *MDayServerRateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MDayServerRateInfo.Unmarshal(m, b)
}
func (m *MDayServerRateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MDayServerRateInfo.Marshal(b, m, deterministic)
}
func (dst *MDayServerRateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MDayServerRateInfo.Merge(dst, src)
}
func (m *MDayServerRateInfo) XXX_Size() int {
	return xxx_messageInfo_MDayServerRateInfo.Size(m)
}
func (m *MDayServerRateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MDayServerRateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MDayServerRateInfo proto.InternalMessageInfo

func (m *MDayServerRateInfo) GetServerRateScore() int64 {
	if m != nil && m.ServerRateScore != nil {
		return *m.ServerRateScore
	}
	return 0
}

func (m *MDayServerRateInfo) GetDayTime() int64 {
	if m != nil && m.DayTime != nil {
		return *m.DayTime
	}
	return 0
}

// SC_CLUB_SERVER_RATE_RECORD_LIST 	=410;	 //请求服务费返回
type SC_ClubServerRateRecordList struct {
	ClubID               *int64                `protobuf:"varint,1,req,name=ClubID" json:"ClubID,omitempty"`
	ReceiveRecordList    []string              `protobuf:"bytes,2,rep,name=ReceiveRecordList" json:"ReceiveRecordList,omitempty"`
	MServerRateList      []*MDayServerRateInfo `protobuf:"bytes,3,rep,name=mServerRateList" json:"mServerRateList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SC_ClubServerRateRecordList) Reset()         { *m = SC_ClubServerRateRecordList{} }
func (m *SC_ClubServerRateRecordList) String() string { return proto.CompactTextString(m) }
func (*SC_ClubServerRateRecordList) ProtoMessage()    {}
func (*SC_ClubServerRateRecordList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ClubSubCmd_c0a9b5211f1f345a, []int{74}
}
func (m *SC_ClubServerRateRecordList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_ClubServerRateRecordList.Unmarshal(m, b)
}
func (m *SC_ClubServerRateRecordList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_ClubServerRateRecordList.Marshal(b, m, deterministic)
}
func (dst *SC_ClubServerRateRecordList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_ClubServerRateRecordList.Merge(dst, src)
}
func (m *SC_ClubServerRateRecordList) XXX_Size() int {
	return xxx_messageInfo_SC_ClubServerRateRecordList.Size(m)
}
func (m *SC_ClubServerRateRecordList) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_ClubServerRateRecordList.DiscardUnknown(m)
}

var xxx_messageInfo_SC_ClubServerRateRecordList proto.InternalMessageInfo

func (m *SC_ClubServerRateRecordList) GetClubID() int64 {
	if m != nil && m.ClubID != nil {
		return *m.ClubID
	}
	return 0
}

func (m *SC_ClubServerRateRecordList) GetReceiveRecordList() []string {
	if m != nil {
		return m.ReceiveRecordList
	}
	return nil
}

func (m *SC_ClubServerRateRecordList) GetMServerRateList() []*MDayServerRateInfo {
	if m != nil {
		return m.MServerRateList
	}
	return nil
}

func init() {
	proto.RegisterType((*CS_CreateClub)(nil), "ClubSubCmd.CS_CreateClub")
	proto.RegisterType((*CS_ClubLogs)(nil), "ClubSubCmd.CS_ClubLogs")
	proto.RegisterType((*CS_RecommendClubList)(nil), "ClubSubCmd.CS_RecommendClubList")
	proto.RegisterType((*CS_QueryClubInfo)(nil), "ClubSubCmd.CS_QueryClubInfo")
	proto.RegisterType((*CS_JoinClub)(nil), "ClubSubCmd.CS_JoinClub")
	proto.RegisterType((*CS_ApplyForClubUserList)(nil), "ClubSubCmd.CS_ApplyForClubUserList")
	proto.RegisterType((*CS_AlterClubInfo)(nil), "ClubSubCmd.CS_AlterClubInfo")
	proto.RegisterType((*CS_ClubUserList)(nil), "ClubSubCmd.CS_ClubUserList")
	proto.RegisterType((*CS_SetClubAdmin)(nil), "ClubSubCmd.CS_SetClubAdmin")
	proto.RegisterType((*CS_DeleteClubUser)(nil), "ClubSubCmd.CS_DeleteClubUser")
	proto.RegisterType((*CS_ClubChatMsg)(nil), "ClubSubCmd.CS_ClubChatMsg")
	proto.RegisterType((*CS_ClubAdminList)(nil), "ClubSubCmd.CS_ClubAdminList")
	proto.RegisterType((*CS_ToExamineUserResult)(nil), "ClubSubCmd.CS_ToExamineUserResult")
	proto.RegisterType((*CS_CancelClubAdmin)(nil), "ClubSubCmd.CS_CancelClubAdmin")
	proto.RegisterType((*CS_SetClubAdminRight)(nil), "ClubSubCmd.CS_SetClubAdminRight")
	proto.RegisterType((*CS_GetClubUserInfo)(nil), "ClubSubCmd.CS_GetClubUserInfo")
	proto.RegisterType((*CS_SetClubBaseInfo)(nil), "ClubSubCmd.CS_SetClubBaseInfo")
	proto.RegisterType((*ST_ClubBaseInfo)(nil), "ClubSubCmd.ST_ClubBaseInfo")
	proto.RegisterType((*ST_ClubInfo)(nil), "ClubSubCmd.ST_ClubInfo")
	proto.RegisterType((*SC_CreateClub)(nil), "ClubSubCmd.SC_CreateClub")
	proto.RegisterType((*SC_RecommendClubList)(nil), "ClubSubCmd.SC_RecommendClubList")
	proto.RegisterType((*SC_QueryClubInfo)(nil), "ClubSubCmd.SC_QueryClubInfo")
	proto.RegisterType((*SC_JoinClub)(nil), "ClubSubCmd.SC_JoinClub")
	proto.RegisterType((*ST_UserBaseInfo)(nil), "ClubSubCmd.ST_UserBaseInfo")
	proto.RegisterType((*SC_ApplyForClubUserList)(nil), "ClubSubCmd.SC_ApplyForClubUserList")
	proto.RegisterType((*SC_AlterClubInfo)(nil), "ClubSubCmd.SC_AlterClubInfo")
	proto.RegisterType((*ST_UserInfo)(nil), "ClubSubCmd.ST_UserInfo")
	proto.RegisterType((*SC_ClubUserList)(nil), "ClubSubCmd.SC_ClubUserList")
	proto.RegisterType((*SC_SetClubAdmin)(nil), "ClubSubCmd.SC_SetClubAdmin")
	proto.RegisterType((*SC_DeleteClubUser)(nil), "ClubSubCmd.SC_DeleteClubUser")
	proto.RegisterType((*SC_DeleteClubUserNotify)(nil), "ClubSubCmd.SC_DeleteClubUserNotify")
	proto.RegisterType((*SC_ClubChatMsg)(nil), "ClubSubCmd.SC_ClubChatMsg")
	proto.RegisterType((*ST_ClubLogItem)(nil), "ClubSubCmd.ST_ClubLogItem")
	proto.RegisterType((*SC_ClubLogs)(nil), "ClubSubCmd.SC_ClubLogs")
	proto.RegisterType((*SC_ClubBaseInfoOnLogin)(nil), "ClubSubCmd.SC_ClubBaseInfoOnLogin")
	proto.RegisterType((*SC_ClubAdminList)(nil), "ClubSubCmd.SC_ClubAdminList")
	proto.RegisterType((*SC_ToExamineUserResult)(nil), "ClubSubCmd.SC_ToExamineUserResult")
	proto.RegisterType((*SC_AddClubUserNotify)(nil), "ClubSubCmd.SC_AddClubUserNotify")
	proto.RegisterType((*SC_AddClubAdminNotify)(nil), "ClubSubCmd.SC_AddClubAdminNotify")
	proto.RegisterType((*SC_CancelClubAdmin)(nil), "ClubSubCmd.SC_CancelClubAdmin")
	proto.RegisterType((*SC_CancelClubAdminNotify)(nil), "ClubSubCmd.SC_CancelClubAdminNotify")
	proto.RegisterType((*SC_SetClubAdminRight)(nil), "ClubSubCmd.SC_SetClubAdminRight")
	proto.RegisterType((*SC_SetClubAdminRightNotify)(nil), "ClubSubCmd.SC_SetClubAdminRightNotify")
	proto.RegisterType((*SC_GetClubUserInfo)(nil), "ClubSubCmd.SC_GetClubUserInfo")
	proto.RegisterType((*SC_SetClubBaseInfo)(nil), "ClubSubCmd.SC_SetClubBaseInfo")
	proto.RegisterType((*SC_SetClubNoticeNotify)(nil), "ClubSubCmd.SC_SetClubNoticeNotify")
	proto.RegisterType((*SC_JoinClubNotifyAdmin)(nil), "ClubSubCmd.SC_JoinClubNotifyAdmin")
	proto.RegisterType((*SC_AlterClubInfoNotify)(nil), "ClubSubCmd.SC_AlterClubInfoNotify")
	proto.RegisterType((*SC_AlterUserInfoNotify)(nil), "ClubSubCmd.SC_AlterUserInfoNotify")
	proto.RegisterType((*CS_ClubRoomList)(nil), "ClubSubCmd.CS_ClubRoomList")
	proto.RegisterType((*RoomData)(nil), "ClubSubCmd.RoomData")
	proto.RegisterType((*SC_ClubRoomList)(nil), "ClubSubCmd.SC_ClubRoomList")
	proto.RegisterType((*CS_ClubTableList)(nil), "ClubSubCmd.CS_ClubTableList")
	proto.RegisterType((*StTableAttribute)(nil), "ClubSubCmd.stTableAttribute")
	proto.RegisterType((*MTableUserInfo)(nil), "ClubSubCmd.MTableUserInfo")
	proto.RegisterType((*StTableData)(nil), "ClubSubCmd.stTableData")
	proto.RegisterType((*SC_ClubTableList)(nil), "ClubSubCmd.SC_ClubTableList")
	proto.RegisterType((*CS_ClubCreateTable)(nil), "ClubSubCmd.CS_ClubCreateTable")
	proto.RegisterType((*SC_ClubCreateTable)(nil), "ClubSubCmd.SC_ClubCreateTable")
	proto.RegisterType((*CS_ClubDisMissTable)(nil), "ClubSubCmd.CS_ClubDisMissTable")
	proto.RegisterType((*SC_ClubDisMissTable)(nil), "ClubSubCmd.SC_ClubDisMissTable")
	proto.RegisterType((*CS_ClubEnterRoom)(nil), "ClubSubCmd.CS_ClubEnterRoom")
	proto.RegisterType((*SC_ClubEnterRoom)(nil), "ClubSubCmd.SC_ClubEnterRoom")
	proto.RegisterType((*CS_ClubGameRecordList)(nil), "ClubSubCmd.CS_ClubGameRecordList")
	proto.RegisterType((*SC_ClubGameRecordList)(nil), "ClubSubCmd.SC_ClubGameRecordList")
	proto.RegisterType((*CS_ClubGameVideotape)(nil), "ClubSubCmd.CS_ClubGameVideotape")
	proto.RegisterType((*SC_ClubGameVideotape)(nil), "ClubSubCmd.SC_ClubGameVideotape")
	proto.RegisterType((*CS_ClubStatisticsInfo)(nil), "ClubSubCmd.CS_ClubStatisticsInfo")
	proto.RegisterType((*MClubRoomStatisticsInfo)(nil), "ClubSubCmd.MClubRoomStatisticsInfo")
	proto.RegisterType((*SC_ClubStatisticsInfo)(nil), "ClubSubCmd.SC_ClubStatisticsInfo")
	proto.RegisterType((*CS_ClubReceiveServerRate)(nil), "ClubSubCmd.CS_ClubReceiveServerRate")
	proto.RegisterType((*SC_ClubReceiveServerRate)(nil), "ClubSubCmd.SC_ClubReceiveServerRate")
	proto.RegisterType((*CS_ClubServerRateRecordList)(nil), "ClubSubCmd.CS_ClubServerRateRecordList")
	proto.RegisterType((*MDayServerRateInfo)(nil), "ClubSubCmd.MDayServerRateInfo")
	proto.RegisterType((*SC_ClubServerRateRecordList)(nil), "ClubSubCmd.SC_ClubServerRateRecordList")
	proto.RegisterEnum("ClubSubCmd.EnClientSubCmdID", EnClientSubCmdID_name, EnClientSubCmdID_value)
	proto.RegisterEnum("ClubSubCmd.EnServerSubCmdID", EnServerSubCmdID_name, EnServerSubCmdID_value)
}

func init() { proto.RegisterFile("ClubSubCmd.proto", fileDescriptor_ClubSubCmd_c0a9b5211f1f345a) }

var fileDescriptor_ClubSubCmd_c0a9b5211f1f345a = []byte{
	// 3050 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0x49, 0x73, 0x1b, 0xd7,
	0xf1, 0x2f, 0x00, 0xdc, 0xf0, 0x48, 0x02, 0xe0, 0x88, 0x22, 0x47, 0xa2, 0x2c, 0xf3, 0x3f, 0xfe,
	0x57, 0xac, 0x72, 0x62, 0xd9, 0x51, 0x9c, 0xc4, 0x4b, 0x39, 0x31, 0x38, 0x18, 0x52, 0x63, 0x61,
	0xa1, 0x30, 0x23, 0xd9, 0x4a, 0x95, 0x83, 0x1a, 0x02, 0x4f, 0xd4, 0x44, 0x98, 0x19, 0x66, 0x66,
	0x40, 0x0b, 0x4e, 0x9c, 0xa5, 0x2a, 0x5f, 0x20, 0xfb, 0xe2, 0x54, 0xae, 0x39, 0x64, 0xb1, 0xb3,
	0xdd, 0x72, 0xca, 0xf7, 0x48, 0xce, 0x39, 0xe4, 0x96, 0x4b, 0x4e, 0xa9, 0x54, 0xf7, 0x7b, 0x6f,
	0x76, 0x90, 0xb0, 0x54, 0x95, 0xdc, 0x88, 0xee, 0xf7, 0xfa, 0xf5, 0xf2, 0xeb, 0x5f, 0x37, 0x40,
	0xd2, 0x50, 0xc7, 0x93, 0x23, 0x63, 0x72, 0xa4, 0x3a, 0xa3, 0xeb, 0x27, 0xbe, 0x17, 0x7a, 0x12,
	0x89, 0x25, 0x8a, 0x4e, 0xd6, 0x55, 0x63, 0xa0, 0xfa, 0xd4, 0x0a, 0x29, 0x88, 0xa5, 0x0b, 0x64,
	0x35, 0x08, 0x7d, 0xf8, 0xb3, 0x6b, 0x39, 0x54, 0x2e, 0xed, 0x96, 0xaf, 0x55, 0xa5, 0x3a, 0x59,
	0xb6, 0xef, 0x04, 0xd4, 0xd7, 0x5b, 0x72, 0x79, 0xb7, 0x7c, 0xad, 0x22, 0x49, 0x84, 0xd8, 0x6f,
	0x59, 0x6e, 0xa8, 0x8e, 0x27, 0xfa, 0x48, 0xae, 0xec, 0x96, 0xae, 0x2d, 0x2a, 0x2f, 0x90, 0x55,
	0x30, 0x35, 0x9e, 0x1c, 0xb5, 0xbd, 0xe3, 0x00, 0xef, 0xc0, 0x07, 0xbd, 0x85, 0x46, 0x2a, 0x39,
	0x23, 0xca, 0xcb, 0x64, 0x53, 0x35, 0x06, 0x7d, 0x3a, 0xf4, 0x1c, 0x87, 0xba, 0x23, 0xbc, 0x69,
	0x07, 0xe1, 0x1c, 0x37, 0x5f, 0x22, 0x0d, 0xd5, 0x18, 0xdc, 0x9e, 0x50, 0x7f, 0x8a, 0x07, 0xdd,
	0xfb, 0xde, 0x1c, 0xb7, 0x98, 0x83, 0x6f, 0x7a, 0xb6, 0x8b, 0x91, 0x9e, 0x7f, 0xe1, 0x35, 0xb2,
	0xad, 0x1a, 0x83, 0xe6, 0xc9, 0xc9, 0x78, 0xba, 0xef, 0x61, 0x4e, 0x40, 0x3d, 0xa7, 0x8f, 0x1f,
	0x95, 0xd0, 0xc9, 0xe6, 0x38, 0xa4, 0xfe, 0xfc, 0x4e, 0x4a, 0x17, 0xc9, 0xba, 0x6d, 0xd0, 0x30,
	0xca, 0x0a, 0x4b, 0xae, 0xb4, 0x41, 0xaa, 0x36, 0x7a, 0xee, 0xd9, 0xae, 0xbc, 0xb0, 0x5b, 0xe2,
	0x35, 0x50, 0x1f, 0xd0, 0xe1, 0x43, 0x90, 0xcb, 0x8b, 0x78, 0x8c, 0xc9, 0xac, 0xb0, 0x6d, 0x3b,
	0x76, 0x28, 0x2f, 0xa1, 0x2c, 0x53, 0xd1, 0xe5, 0xdd, 0xd2, 0xb5, 0x6a, 0x42, 0x78, 0x8b, 0xee,
	0x4f, 0xe4, 0x15, 0x10, 0x2a, 0x63, 0x52, 0xe7, 0x15, 0x9c, 0x3f, 0x4e, 0xb0, 0x64, 0xeb, 0xee,
	0x88, 0x3e, 0x32, 0x42, 0xcb, 0x0f, 0xe5, 0xca, 0x6e, 0x99, 0xbb, 0x8b, 0x42, 0xcd, 0x1d, 0xc9,
	0x0b, 0x28, 0x82, 0x8b, 0xfb, 0x36, 0x64, 0x83, 0xf9, 0xaa, 0x68, 0xf8, 0x9a, 0x41, 0x01, 0x44,
	0x47, 0xcd, 0x91, 0x63, 0xbb, 0x73, 0xbc, 0xd6, 0x20, 0x2b, 0x36, 0x9e, 0xd5, 0x5b, 0xf8, 0x54,
	0x45, 0x39, 0x20, 0x1b, 0xaa, 0x31, 0x68, 0xd1, 0x31, 0x65, 0x08, 0x86, 0xe3, 0x8f, 0x65, 0xe8,
	0x83, 0x12, 0xa9, 0xf1, 0xf0, 0x21, 0x85, 0x9d, 0xe0, 0x38, 0x6f, 0x06, 0x6e, 0x75, 0x82, 0x63,
	0x73, 0x7a, 0x42, 0xe5, 0x32, 0x56, 0x61, 0x93, 0xac, 0x39, 0x26, 0x7d, 0x14, 0xaa, 0x9e, 0x1b,
	0x52, 0x37, 0xc4, 0x72, 0x55, 0xa5, 0x2d, 0x52, 0x73, 0xf6, 0x6c, 0xd7, 0xf2, 0xa7, 0x42, 0x0e,
	0x35, 0x5b, 0xc3, 0xd3, 0x5c, 0x62, 0xda, 0x0e, 0xc5, 0x4c, 0xac, 0x83, 0x55, 0x47, 0x77, 0xac,
	0x63, 0xaa, 0x8f, 0xb0, 0x66, 0x4c, 0xd2, 0xa1, 0x23, 0xdb, 0xd2, 0x47, 0x58, 0xb0, 0x75, 0x0e,
	0xf9, 0x28, 0x55, 0x73, 0x82, 0xf0, 0x1d, 0xb2, 0xa5, 0x1a, 0x03, 0xd3, 0xd3, 0x1e, 0x59, 0x8e,
	0xed, 0x52, 0xd0, 0xf5, 0x69, 0x30, 0x19, 0x87, 0x8f, 0x93, 0x21, 0x3c, 0xc2, 0xae, 0xb3, 0x9a,
	0x2a, 0x37, 0x89, 0x04, 0x4e, 0x59, 0xee, 0x90, 0x8e, 0x9f, 0xac, 0x8a, 0x5f, 0x46, 0x2e, 0x48,
	0x82, 0xa1, 0x6f, 0x1f, 0x3f, 0x08, 0x01, 0xd0, 0x56, 0xf4, 0x49, 0x2e, 0xed, 0x56, 0x38, 0x92,
	0xb8, 0xfd, 0x72, 0xd6, 0x7e, 0x25, 0x67, 0x7f, 0x01, 0xed, 0x7f, 0x0e, 0x3d, 0x3d, 0x60, 0xf6,
	0xf1, 0x6c, 0xa6, 0x1d, 0x8b, 0x2d, 0x29, 0x07, 0x78, 0x8f, 0xfb, 0xb5, 0x67, 0x05, 0xb4, 0xb8,
	0x8d, 0xe1, 0x41, 0x83, 0x86, 0x1c, 0x17, 0x00, 0xf7, 0x1a, 0x59, 0x0a, 0x42, 0xbf, 0x13, 0x1c,
	0xa3, 0xa1, 0xaa, 0xf2, 0x97, 0x32, 0xa9, 0x1b, 0xe6, 0xe0, 0x6c, 0x33, 0x99, 0x56, 0x2d, 0x23,
	0xf9, 0x6e, 0x92, 0x35, 0x2e, 0xdc, 0xf3, 0x6d, 0x7a, 0x9f, 0xd9, 0x83, 0xbb, 0x41, 0xe8, 0xb7,
	0xbd, 0x63, 0x0f, 0x23, 0xc4, 0x63, 0x76, 0x87, 0x3a, 0x47, 0xd0, 0xb8, 0xd0, 0xfc, 0x8b, 0x68,
	0x31, 0x96, 0xaa, 0xde, 0xc4, 0x05, 0x4a, 0x00, 0x69, 0x8a, 0x4d, 0x96, 0x8b, 0x79, 0x67, 0x05,
	0xc3, 0x48, 0x93, 0x4c, 0x35, 0x21, 0x13, 0x24, 0x43, 0x50, 0xc6, 0x3c, 0xbf, 0xed, 0x9b, 0xf6,
	0xf0, 0x21, 0x0d, 0xe5, 0x55, 0xec, 0x82, 0x06, 0x59, 0x41, 0xe1, 0x1d, 0x7f, 0x2c, 0xaf, 0xa1,
	0x04, 0x1e, 0xbe, 0xed, 0x6b, 0x8f, 0x4e, 0x6c, 0x9f, 0xca, 0xeb, 0xd8, 0x40, 0xf0, 0xf0, 0x6d,
	0x9f, 0x4d, 0x20, 0xec, 0x89, 0x1a, 0x8a, 0x33, 0x04, 0x55, 0x47, 0x82, 0xfa, 0x73, 0x89, 0xac,
	0xf2, 0x24, 0x62, 0x02, 0x3f, 0x43, 0x6a, 0x41, 0xaa, 0x32, 0x98, 0xc7, 0xd5, 0x1b, 0x3b, 0xd7,
	0x13, 0x43, 0x2f, 0x9b, 0x75, 0x66, 0xb9, 0xef, 0x79, 0x61, 0x22, 0xc9, 0x08, 0x6d, 0xcf, 0x0b,
	0x23, 0x08, 0x01, 0xad, 0x25, 0x9c, 0x5a, 0x88, 0xb2, 0xd9, 0x1c, 0x86, 0xf6, 0xa9, 0x1d, 0x4e,
	0x8d, 0x89, 0x93, 0xc8, 0xb1, 0x90, 0xb6, 0xac, 0x69, 0x9c, 0xe3, 0x20, 0xf4, 0xbb, 0x5e, 0x68,
	0x0f, 0x29, 0xe6, 0xb8, 0xaa, 0xb4, 0xc9, 0xba, 0xa1, 0x26, 0x87, 0xed, 0x27, 0x09, 0x61, 0xfe,
	0x73, 0xdf, 0x4b, 0xd7, 0x56, 0x6f, 0x6c, 0x17, 0xf8, 0x8e, 0x7e, 0xc7, 0x88, 0x2a, 0x73, 0x6b,
	0x9b, 0x86, 0x5a, 0x30, 0x3e, 0x5f, 0x22, 0xf5, 0x20, 0xae, 0x23, 0x88, 0xb0, 0x6f, 0xce, 0xce,
	0x8a, 0xf2, 0x45, 0xd2, 0x30, 0xd4, 0xcc, 0x48, 0xfd, 0x38, 0xee, 0x29, 0xd7, 0xc9, 0xaa, 0xa1,
	0xa6, 0xa7, 0x2b, 0xe7, 0x8a, 0x52, 0xa6, 0x21, 0x98, 0xfb, 0x2e, 0xf6, 0x03, 0x34, 0x5b, 0xa6,
	0x32, 0x38, 0x7b, 0x00, 0xd7, 0x6c, 0xf7, 0x88, 0x85, 0x99, 0x72, 0xe5, 0x3a, 0x1e, 0x04, 0x77,
	0xed, 0x13, 0x5e, 0xab, 0x1a, 0x59, 0xb2, 0x9b, 0xc3, 0xa1, 0x3d, 0x42, 0x92, 0xad, 0x28, 0xb7,
	0xc8, 0xb6, 0xa1, 0x16, 0x0f, 0xf3, 0x17, 0xe1, 0x09, 0xf1, 0x29, 0x98, 0x91, 0xad, 0xa4, 0xa7,
	0xca, 0x87, 0x25, 0x4c, 0x57, 0x7e, 0xb8, 0x9f, 0x15, 0xf2, 0xff, 0x74, 0xb6, 0xff, 0x95, 0xb5,
	0x4e, 0x44, 0x7d, 0x2f, 0x40, 0x6d, 0xcf, 0x69, 0x9b, 0x54, 0x71, 0xc0, 0x79, 0x10, 0x08, 0xa4,
	0x73, 0xc6, 0xbc, 0x44, 0x36, 0x50, 0xdc, 0xb6, 0x82, 0x10, 0xaa, 0x36, 0x09, 0x4d, 0x87, 0xd7,
	0x84, 0x11, 0x17, 0x1a, 0x41, 0xe2, 0x5a, 0x48, 0x95, 0xae, 0x7d, 0x97, 0xb7, 0x4f, 0x9a, 0xe2,
	0x97, 0x90, 0xe2, 0x65, 0xd2, 0x48, 0x5a, 0xb5, 0x5d, 0xd3, 0xe1, 0x3c, 0xb5, 0x05, 0x2d, 0x2f,
	0x30, 0x62, 0xbb, 0xfa, 0x21, 0x8f, 0xef, 0x3d, 0x52, 0x87, 0xde, 0x4a, 0x96, 0xf5, 0x53, 0x45,
	0x65, 0xdd, 0x2e, 0x88, 0x51, 0x80, 0x2f, 0xb9, 0xc7, 0x94, 0xf3, 0x7b, 0x4c, 0xbc, 0xda, 0x98,
	0x5e, 0x68, 0x8d, 0x55, 0x57, 0x8c, 0xc1, 0x1b, 0xf8, 0x76, 0x6e, 0x93, 0x39, 0x13, 0xfe, 0x1a,
	0xd9, 0x30, 0xd4, 0xa2, 0xb5, 0xe5, 0x4c, 0x04, 0x45, 0xb8, 0x1f, 0xf1, 0xf9, 0xf4, 0x2a, 0xa2,
	0x3a, 0x6d, 0x06, 0x38, 0xe7, 0xfe, 0xf4, 0x7c, 0x17, 0xfe, 0x55, 0x22, 0x35, 0x9e, 0xb3, 0x99,
	0x0b, 0xcf, 0xfc, 0xdd, 0x27, 0xd6, 0xa2, 0x85, 0xc2, 0xb5, 0x68, 0x71, 0xc6, 0x5a, 0xb4, 0x54,
	0xb8, 0x16, 0x2d, 0xe7, 0xd6, 0xa2, 0x95, 0xdc, 0x5a, 0x54, 0x45, 0x09, 0x63, 0xd9, 0x9b, 0xd4,
	0x1a, 0x51, 0x5f, 0x26, 0xf8, 0x88, 0x04, 0xc8, 0x8e, 0xd0, 0xc1, 0x26, 0x51, 0x4c, 0x06, 0x6b,
	0x48, 0x06, 0xaf, 0x90, 0x1a, 0xe7, 0xae, 0xb6, 0x77, 0xac, 0x87, 0xd4, 0xc1, 0x10, 0xda, 0xde,
	0x31, 0x3e, 0x5f, 0x12, 0x13, 0x91, 0xd9, 0x11, 0xbe, 0xb2, 0xac, 0xbd, 0x8e, 0x3c, 0x17, 0x7d,
	0xcd, 0xb9, 0x2e, 0x38, 0x12, 0x3e, 0x71, 0x8c, 0x5d, 0x2e, 0xe0, 0x48, 0xfe, 0x8e, 0xf2, 0xcf,
	0x12, 0xd9, 0xe2, 0xf7, 0x45, 0x6b, 0xf5, 0x5c, 0x74, 0x76, 0xce, 0x75, 0x20, 0xea, 0x9f, 0x53,
	0x4e, 0x74, 0xa9, 0x41, 0xb3, 0x98, 0xe0, 0xcc, 0x68, 0x1a, 0x2f, 0xe5, 0xa6, 0xf1, 0x72, 0x7e,
	0x1a, 0xaf, 0x14, 0x4f, 0xe3, 0xaa, 0x98, 0xc6, 0xc0, 0x47, 0xf1, 0xcc, 0x4f, 0x93, 0x0f, 0xf2,
	0x0c, 0xcb, 0x74, 0x76, 0x5b, 0xc1, 0xb9, 0xaf, 0x34, 0x91, 0x2e, 0xd3, 0xdb, 0xeb, 0xf3, 0x70,
	0x32, 0xfa, 0x78, 0x5e, 0x7f, 0x2a, 0xaf, 0x60, 0xde, 0x66, 0xad, 0xb2, 0x67, 0x02, 0xfd, 0x21,
	0x4e, 0xca, 0xe6, 0x68, 0x94, 0xe9, 0x90, 0x1b, 0x70, 0x2e, 0x31, 0xdb, 0x94, 0xd4, 0xdb, 0xb3,
	0x8b, 0xc4, 0x1f, 0x2b, 0x5e, 0xf4, 0x5e, 0x26, 0x17, 0xe3, 0xc7, 0x30, 0xbc, 0x44, 0x3f, 0xf2,
	0xc2, 0x95, 0xc4, 0x84, 0x4a, 0xb9, 0xf9, 0x59, 0x22, 0xc1, 0xa3, 0x05, 0xdb, 0xf4, 0x99, 0xd1,
	0xbd, 0x46, 0xe4, 0xfc, 0xb5, 0x79, 0xdf, 0xbc, 0x85, 0xa9, 0x99, 0x7f, 0xef, 0x3e, 0x33, 0xf4,
	0x17, 0xc9, 0xe5, 0x22, 0x63, 0xdc, 0x97, 0x02, 0x93, 0xca, 0xeb, 0x18, 0x72, 0x76, 0x2d, 0x7f,
	0x36, 0x53, 0x97, 0x99, 0x98, 0x38, 0xc0, 0xeb, 0x45, 0xdb, 0x79, 0x2a, 0x63, 0xe7, 0x6f, 0xe7,
	0xaf, 0x22, 0xb8, 0xb8, 0x21, 0xd6, 0x4a, 0xdc, 0xeb, 0xf3, 0xef, 0xbe, 0x80, 0x77, 0xc5, 0xe2,
	0xc3, 0xae, 0xb1, 0xd2, 0x41, 0x33, 0xb1, 0x61, 0x6f, 0xb9, 0x23, 0x18, 0x17, 0x25, 0xfc, 0xe2,
	0xfb, 0x4b, 0x46, 0x01, 0xa9, 0xe5, 0x81, 0xbf, 0x96, 0x69, 0xdc, 0x52, 0xae, 0x71, 0xcb, 0xf9,
	0xc6, 0xad, 0x14, 0x37, 0x6e, 0x72, 0x91, 0x10, 0x7d, 0xbb, 0x58, 0xb4, 0x34, 0x2c, 0x15, 0x2d,
	0x0d, 0xcb, 0xbc, 0x6d, 0x23, 0x47, 0x45, 0xce, 0xb9, 0xa3, 0xc9, 0x12, 0x95, 0xcf, 0x2a, 0xd1,
	0xa7, 0xa3, 0xdf, 0x14, 0xfa, 0x9e, 0xe7, 0x60, 0xe3, 0xd7, 0xc8, 0x52, 0x8a, 0xe6, 0x6a, 0x64,
	0x89, 0xcf, 0x34, 0xf6, 0xa5, 0xf5, 0x3b, 0x25, 0xb2, 0x02, 0x87, 0x5b, 0x56, 0x68, 0x81, 0x12,
	0xfe, 0xd6, 0x47, 0xf1, 0x37, 0x2d, 0xf8, 0x1c, 0xd5, 0x03, 0x43, 0x04, 0xc9, 0x2d, 0xdb, 0x1d,
	0x89, 0xb1, 0x08, 0x2c, 0x74, 0x60, 0x39, 0x14, 0xe4, 0x18, 0xe3, 0x82, 0xa0, 0x45, 0xc7, 0xb4,
	0x8e, 0xc6, 0x94, 0x7d, 0x17, 0x62, 0xeb, 0xc7, 0x36, 0xa9, 0x33, 0x21, 0xf8, 0x90, 0xf8, 0x92,
	0xa4, 0x1c, 0x47, 0x1b, 0xc5, 0x4c, 0xcf, 0x3f, 0xc1, 0x9c, 0xc1, 0x1d, 0xbb, 0x8c, 0xf4, 0xb5,
	0x99, 0xcc, 0x43, 0x14, 0xc4, 0x15, 0xb2, 0xe9, 0x74, 0xac, 0x47, 0xbc, 0x3a, 0xb1, 0x07, 0x6c,
	0x86, 0x7b, 0xd1, 0x57, 0x7b, 0x54, 0x15, 0xbe, 0xb4, 0x41, 0xaa, 0xa8, 0x4c, 0xc4, 0x1d, 0x67,
	0xa6, 0x92, 0x49, 0x23, 0x9b, 0x0b, 0x32, 0x69, 0x40, 0x0e, 0xd4, 0x89, 0xef, 0x53, 0x77, 0x38,
	0xc5, 0x9b, 0x8b, 0xb8, 0xaf, 0xfc, 0xbd, 0x4c, 0x1a, 0x41, 0x88, 0xf6, 0x9a, 0x61, 0xe8, 0xdb,
	0x47, 0x93, 0x90, 0x16, 0x1e, 0x67, 0xed, 0xb3, 0x4d, 0xea, 0x87, 0xd6, 0x14, 0xde, 0xea, 0x83,
	0xfb, 0x71, 0x27, 0x5c, 0x24, 0xeb, 0x87, 0x63, 0xcb, 0xc5, 0x6b, 0x51, 0x3c, 0x8b, 0xd2, 0x3a,
	0x59, 0x6c, 0xd9, 0x5f, 0x7a, 0x30, 0xe1, 0x3f, 0xfc, 0x48, 0x84, 0x68, 0x6e, 0x48, 0x7d, 0x63,
	0xe8, 0xf9, 0x34, 0xde, 0xf9, 0xda, 0xd4, 0x3a, 0xa5, 0x4c, 0xb6, 0x24, 0xa6, 0xdd, 0x1e, 0xb5,
	0x8d, 0x07, 0x13, 0x86, 0xd5, 0x65, 0x71, 0x50, 0x7d, 0x60, 0xd9, 0xbc, 0x30, 0xec, 0x3b, 0xe9,
	0x55, 0xb2, 0xa5, 0x07, 0xcd, 0xf1, 0xd8, 0x7b, 0x17, 0xed, 0x36, 0xef, 0x83, 0x71, 0x5c, 0xda,
	0xaa, 0x62, 0x43, 0x8b, 0x73, 0x45, 0x92, 0xa8, 0x01, 0xff, 0xe5, 0x55, 0x61, 0xd8, 0xa0, 0xfe,
	0x29, 0xf5, 0x51, 0xb6, 0x26, 0x76, 0x59, 0x96, 0x94, 0xd1, 0x29, 0xb0, 0xe9, 0xa1, 0xe5, 0x5b,
	0x8e, 0xbc, 0x8e, 0xd0, 0x11, 0x36, 0x11, 0x4d, 0x35, 0x14, 0x35, 0xc8, 0x8a, 0x1e, 0xe8, 0x27,
	0x6f, 0x59, 0xbe, 0x2b, 0xd7, 0xc5, 0xc3, 0x7a, 0x70, 0x70, 0x12, 0xa0, 0xa8, 0x81, 0xa9, 0x6e,
	0x91, 0x5a, 0x27, 0x42, 0x97, 0x60, 0x27, 0x87, 0xd7, 0x29, 0x82, 0xbf, 0xd3, 0x1c, 0x0e, 0x05,
	0xfc, 0xc1, 0x8a, 0xd3, 0xb5, 0x87, 0x0f, 0xf1, 0x29, 0x46, 0x31, 0xbf, 0x2a, 0x43, 0x77, 0xa2,
	0x9d, 0xc2, 0xa6, 0xa8, 0x93, 0x65, 0x54, 0x26, 0x6d, 0xc4, 0x70, 0x5e, 0x14, 0x24, 0xa8, 0x07,
	0x3a, 0x16, 0x0b, 0x13, 0xbe, 0x12, 0x61, 0x6c, 0xc4, 0x73, 0x7d, 0x81, 0xac, 0xf6, 0xde, 0x75,
	0x79, 0xab, 0xb3, 0x1f, 0x00, 0x90, 0x57, 0x22, 0x21, 0x7a, 0xc4, 0x96, 0xac, 0x6d, 0x52, 0x67,
	0x38, 0x8e, 0x09, 0x67, 0x15, 0x09, 0xe7, 0x0a, 0xd9, 0x64, 0xc9, 0x87, 0x15, 0x39, 0x95, 0x61,
	0xd0, 0xbe, 0x44, 0x6a, 0x69, 0xd8, 0x61, 0xc9, 0x56, 0x6f, 0x5c, 0x49, 0xb6, 0x4d, 0x0e, 0x9a,
	0xcf, 0x93, 0x2a, 0xa6, 0x0c, 0x62, 0x97, 0xd7, 0xf3, 0x2b, 0x56, 0x3a, 0xc3, 0xca, 0x07, 0xa5,
	0x68, 0xdb, 0xf8, 0xef, 0x34, 0x94, 0xf4, 0x1c, 0x37, 0x86, 0x44, 0xb0, 0x94, 0xdf, 0x63, 0x12,
	0xb5, 0x53, 0xde, 0x67, 0xbf, 0x99, 0xc1, 0xd2, 0x1d, 0xd3, 0x41, 0x11, 0x27, 0x72, 0x5f, 0xca,
	0x79, 0x77, 0x59, 0x9b, 0xe5, 0x73, 0xb9, 0x70, 0x7e, 0x2e, 0x95, 0x5f, 0x94, 0xd8, 0x96, 0xf1,
	0x31, 0xdf, 0x87, 0xcf, 0x6c, 0xa4, 0x46, 0xdf, 0x82, 0xd8, 0x67, 0x23, 0xf4, 0xe3, 0x2f, 0x76,
	0x02, 0x84, 0xac, 0xc9, 0xf3, 0x0e, 0x2e, 0xe3, 0x38, 0x3f, 0xdb, 0xc1, 0x7d, 0x72, 0x81, 0xe7,
	0xa7, 0x65, 0x07, 0x1d, 0x3b, 0x08, 0xe6, 0x73, 0x30, 0xf1, 0x3a, 0x63, 0x55, 0x9b, 0x5c, 0xe0,
	0x71, 0x3e, 0x91, 0x9d, 0x44, 0xe4, 0x0b, 0xf9, 0xc8, 0x71, 0xdd, 0x56, 0x68, 0x44, 0xe0, 0x48,
	0x48, 0x60, 0xef, 0xe3, 0xbf, 0x53, 0x27, 0xcb, 0xb8, 0xa9, 0xb9, 0xc7, 0x1c, 0x6e, 0x42, 0x60,
	0xf1, 0x49, 0xa5, 0xdc, 0x8f, 0x60, 0xfd, 0x04, 0xcf, 0xcc, 0x11, 0xce, 0x1e, 0xb9, 0xc8, 0xc3,
	0xc1, 0x19, 0x4a, 0x87, 0x9e, 0x3f, 0x2a, 0xec, 0xa1, 0x4b, 0x64, 0xc3, 0xc9, 0x75, 0x04, 0x8e,
	0x06, 0xe5, 0x6d, 0xdc, 0x82, 0x9f, 0xc8, 0x06, 0x7e, 0x2b, 0x8c, 0x6f, 0x07, 0x72, 0x65, 0xb7,
	0x72, 0x6d, 0x4d, 0x69, 0xe2, 0x2f, 0xc5, 0xc2, 0xf2, 0x5d, 0x7b, 0x44, 0xbd, 0xd0, 0x3a, 0xa1,
	0x33, 0x0d, 0x47, 0x27, 0x6e, 0xd1, 0x29, 0x5f, 0x7a, 0xdf, 0xc1, 0xa5, 0xf7, 0x49, 0x4c, 0x48,
	0x97, 0x89, 0x94, 0x56, 0xe1, 0x2e, 0x04, 0xab, 0xd8, 0x9a, 0xf2, 0x6c, 0x94, 0x3f, 0x23, 0xb4,
	0x42, 0x3b, 0x08, 0xed, 0x61, 0x20, 0x7e, 0xc1, 0x4b, 0xda, 0x57, 0xfe, 0x51, 0x22, 0xdb, 0x1d,
	0xb1, 0x60, 0xe4, 0xcf, 0xf2, 0x8d, 0xa6, 0xb8, 0xb0, 0x12, 0x21, 0xd9, 0x45, 0x42, 0xda, 0x25,
	0xb2, 0xe9, 0x8d, 0xac, 0x29, 0x72, 0x6f, 0xef, 0x84, 0xba, 0x89, 0x13, 0x0c, 0x53, 0xc0, 0xce,
	0xd1, 0x89, 0x04, 0x3b, 0xb3, 0x86, 0x7d, 0x86, 0xec, 0xdc, 0xa3, 0x41, 0x38, 0xcb, 0x04, 0x1b,
	0xd3, 0x4f, 0x93, 0xed, 0xd4, 0xa1, 0x84, 0x95, 0x65, 0xb1, 0x50, 0xf5, 0xdc, 0x36, 0xff, 0x8a,
	0x16, 0xcf, 0xed, 0x8a, 0xf2, 0xef, 0x52, 0x04, 0x8a, 0xb3, 0x13, 0x23, 0x6d, 0x91, 0x1a, 0x9e,
	0x8a, 0x4d, 0xb3, 0xa0, 0x77, 0xc8, 0x05, 0xf6, 0xd3, 0x4b, 0x5a, 0x59, 0x89, 0x95, 0x23, 0x6b,
	0x9a, 0x51, 0xb2, 0xc0, 0xaf, 0x92, 0x2d, 0xe1, 0x75, 0x46, 0xcf, 0x42, 0x7f, 0x83, 0x5c, 0x70,
	0xf2, 0x55, 0xe0, 0x5c, 0xfe, 0x4c, 0x6a, 0xd8, 0xcc, 0x28, 0xd8, 0xff, 0x91, 0x4b, 0x6d, 0x0b,
	0x7f, 0x78, 0xa5, 0xf6, 0x29, 0x8d, 0x1f, 0xe0, 0x3f, 0x68, 0x40, 0x02, 0xde, 0x20, 0xb2, 0xd8,
	0x85, 0xb3, 0xa7, 0x72, 0x29, 0xd8, 0x24, 0x6b, 0xe2, 0x10, 0xee, 0x48, 0x6c, 0x35, 0x7e, 0x9b,
	0x7d, 0xd7, 0x7b, 0x7c, 0x0b, 0x90, 0xda, 0x3e, 0x75, 0x2c, 0xdb, 0x1d, 0x89, 0x8d, 0x8c, 0xd1,
	0xe5, 0xf3, 0x64, 0x47, 0x80, 0x36, 0x32, 0x39, 0xbb, 0x6d, 0x95, 0x2f, 0x10, 0xa9, 0xd3, 0xb2,
	0xa6, 0xf1, 0x59, 0xcc, 0xc1, 0x36, 0xa9, 0xc7, 0x12, 0x66, 0x3d, 0x5a, 0x50, 0x5a, 0xd6, 0x14,
	0x53, 0xc1, 0x02, 0xf9, 0x76, 0x89, 0xec, 0x08, 0x2c, 0xcc, 0xf1, 0x1e, 0xb4, 0x22, 0x0f, 0x26,
	0x3e, 0x84, 0x2b, 0x77, 0x55, 0xfa, 0x3c, 0xa9, 0x3b, 0xb1, 0x0d, 0x54, 0x54, 0xb0, 0x6c, 0x57,
	0x53, 0x65, 0xcb, 0x79, 0xfb, 0xdc, 0xdf, 0x16, 0x49, 0x83, 0xba, 0xea, 0xd8, 0xa6, 0x6e, 0xc8,
	0x4e, 0xe9, 0x2d, 0x49, 0x62, 0xff, 0x04, 0xec, 0x6b, 0x4d, 0x53, 0x1b, 0xa8, 0xed, 0x3b, 0x7b,
	0x8d, 0x92, 0x74, 0x19, 0xff, 0x8b, 0xd6, 0xd7, 0xd4, 0x5e, 0xa7, 0xa3, 0x75, 0x5b, 0x28, 0x1e,
	0xb4, 0x75, 0xc3, 0x6c, 0x94, 0xa5, 0x2d, 0x1c, 0xe7, 0xb7, 0xef, 0x68, 0xfd, 0x7b, 0x4c, 0xae,
	0x77, 0xf7, 0x7b, 0x0d, 0xd8, 0x38, 0xd7, 0x54, 0x63, 0xf0, 0x66, 0x4f, 0xef, 0x32, 0x2b, 0x0b,
	0xd2, 0xd3, 0x98, 0xe1, 0xe6, 0xe1, 0x61, 0xfb, 0xde, 0x60, 0xbf, 0xd7, 0x67, 0xa7, 0xef, 0x18,
	0x5a, 0x9f, 0x99, 0x5a, 0xe2, 0xa6, 0x9a, 0x6d, 0x53, 0xeb, 0x27, 0x4c, 0x2d, 0x4b, 0x17, 0xf1,
	0x3f, 0x9c, 0x99, 0xe3, 0x2b, 0x5c, 0x6c, 0x68, 0x26, 0x53, 0x35, 0x5b, 0x1d, 0xbd, 0xdb, 0x80,
	0xcd, 0x0c, 0xe6, 0x67, 0x4b, 0x6b, 0x6b, 0x3c, 0x00, 0xbc, 0xd4, 0x20, 0xd2, 0x26, 0x9b, 0x52,
	0x20, 0x51, 0x6f, 0x36, 0xcd, 0x41, 0xc7, 0x38, 0x68, 0xac, 0x26, 0xa5, 0xed, 0xde, 0x01, 0xb3,
	0xbd, 0xc6, 0x5d, 0x89, 0xed, 0x32, 0xf9, 0xba, 0x74, 0x05, 0x11, 0x6c, 0xf6, 0xb4, 0xb7, 0x9b,
	0x1d, 0xbd, 0xab, 0x31, 0x7f, 0xfa, 0x9a, 0xd1, 0xbe, 0x63, 0x36, 0x6a, 0x92, 0xcc, 0xa8, 0xb9,
	0xd9, 0x55, 0xb5, 0x76, 0xd2, 0xa9, 0xba, 0xb4, 0x83, 0xff, 0x49, 0x4f, 0xfb, 0x3a, 0xe8, 0xeb,
	0x07, 0x37, 0xcd, 0x46, 0x43, 0xba, 0x84, 0x7c, 0x79, 0x20, 0x94, 0x68, 0x13, 0x43, 0xdf, 0xe0,
	0xaa, 0xe8, 0xde, 0x5e, 0xd3, 0xd0, 0x98, 0x4a, 0x92, 0xb6, 0xe2, 0xac, 0xf4, 0x7b, 0xbd, 0x0e,
	0xf3, 0xf0, 0xd7, 0x65, 0x69, 0x3b, 0x76, 0xdd, 0x6c, 0xee, 0xb5, 0x35, 0xa6, 0xf8, 0x4d, 0x59,
	0xba, 0xc4, 0xbc, 0xc3, 0xf8, 0x59, 0x79, 0x51, 0xdf, 0xf8, 0x6d, 0x59, 0xba, 0xcc, 0x18, 0x1b,
	0x54, 0x2d, 0xdd, 0xe8, 0xe8, 0x86, 0xc1, 0x75, 0x1f, 0xa6, 0xec, 0x69, 0x5d, 0x28, 0x0d, 0xbc,
	0xd6, 0xf8, 0xa8, 0x2c, 0x3d, 0xc5, 0xba, 0x19, 0x14, 0x07, 0xcd, 0x8e, 0x86, 0xf8, 0xe8, 0xb7,
	0xd8, 0x73, 0xbf, 0x2b, 0x4b, 0x3b, 0x08, 0x9a, 0x58, 0x7d, 0x57, 0x6f, 0x69, 0x3d, 0xb3, 0x79,
	0xa8, 0x35, 0x7e, 0x5f, 0x96, 0xae, 0x60, 0x3e, 0x50, 0x69, 0x98, 0x4d, 0x53, 0x37, 0x4c, 0x5d,
	0x35, 0x58, 0x64, 0x7f, 0x28, 0x4b, 0xbb, 0xac, 0x17, 0x31, 0x34, 0x4d, 0xd5, 0xf4, 0xbb, 0xda,
	0xc0, 0xd0, 0xfa, 0x77, 0xe1, 0xed, 0xa6, 0xa9, 0x35, 0xfe, 0x58, 0x96, 0xfe, 0x9f, 0x3c, 0x1d,
	0xdd, 0x8f, 0x35, 0x29, 0x17, 0xfe, 0x54, 0x7e, 0xee, 0xe7, 0x2b, 0x00, 0x70, 0x86, 0xfa, 0x24,
	0xc0, 0xa1, 0xf1, 0x12, 0x00, 0xa7, 0x00, 0x70, 0x43, 0x2d, 0x04, 0xf8, 0x7d, 0x80, 0x82, 0xa1,
	0xe6, 0x00, 0x7e, 0x0c, 0x00, 0x37, 0xd4, 0x04, 0xc0, 0x1f, 0x00, 0xc0, 0x0d, 0x75, 0x36, 0xc0,
	0xbf, 0xc2, 0x4d, 0x65, 0x01, 0xfe, 0x10, 0x90, 0x0c, 0x2e, 0xa5, 0x8f, 0x8f, 0xb9, 0x38, 0x03,
	0x70, 0x07, 0x00, 0x6e, 0xa8, 0x79, 0x80, 0xbb, 0xd2, 0x55, 0xfc, 0xf9, 0x29, 0xab, 0x18, 0x74,
	0x7b, 0xa6, 0xbe, 0x7f, 0xaf, 0xe1, 0x01, 0xd4, 0xc5, 0x33, 0x51, 0x03, 0x9c, 0x24, 0xa5, 0x51,
	0x03, 0x7c, 0x95, 0xc7, 0x92, 0x06, 0xdd, 0xa0, 0xd7, 0x1d, 0xb4, 0x7b, 0xdd, 0x03, 0xbd, 0xdb,
	0xf0, 0x79, 0x2c, 0xd9, 0x0e, 0x09, 0xa0, 0x43, 0x0c, 0x75, 0x46, 0x87, 0x84, 0xd0, 0x07, 0x90,
	0x81, 0x56, 0x2b, 0xef, 0xdf, 0x84, 0x5f, 0x8d, 0x94, 0xcc, 0x2c, 0xd7, 0x9e, 0x42, 0x73, 0xc1,
	0x83, 0xb9, 0xe6, 0x7a, 0x57, 0xf8, 0x9a, 0xd5, 0x88, 0xab, 0x8f, 0xf8, 0xab, 0x85, 0xdd, 0x37,
	0x95, 0x14, 0x72, 0x75, 0x86, 0x52, 0x18, 0x78, 0x0f, 0xda, 0xd0, 0x50, 0x8b, 0x3a, 0xf4, 0x6b,
	0x5c, 0x55, 0xd0, 0xa1, 0x5f, 0x97, 0x9e, 0x22, 0x97, 0x92, 0x2a, 0xb0, 0xa6, 0x6a, 0xc2, 0xe8,
	0xfb, 0x5c, 0x1d, 0x01, 0x88, 0x2b, 0x78, 0x54, 0xdf, 0xe0, 0xea, 0x0c, 0x58, 0xc4, 0xed, 0x6f,
	0x4a, 0x57, 0x13, 0xea, 0xc8, 0x1f, 0xa1, 0xfe, 0x56, 0x09, 0xe8, 0x41, 0xd4, 0x27, 0xa6, 0x87,
	0xef, 0xc2, 0x76, 0x12, 0xd5, 0x2d, 0x41, 0x0f, 0xdf, 0x83, 0x09, 0xb3, 0x19, 0xa1, 0x23, 0x49,
	0x0f, 0xdf, 0xaf, 0x00, 0x3d, 0x08, 0x55, 0x9a, 0x1e, 0x7e, 0x90, 0xb2, 0x97, 0xa0, 0x87, 0x1f,
	0x56, 0x80, 0x1e, 0x84, 0x22, 0x47, 0x0f, 0x3f, 0x82, 0x6d, 0x65, 0x2b, 0xa5, 0x8e, 0xe9, 0xe1,
	0xc7, 0xb0, 0xa6, 0x6d, 0x0b, 0x65, 0x96, 0x1e, 0x7e, 0x02, 0x6b, 0x5e, 0x84, 0xcd, 0x22, 0x7a,
	0xf8, 0x69, 0x05, 0xe8, 0x21, 0xba, 0x3f, 0x83, 0x1e, 0x7e, 0x56, 0xf9, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x31, 0xc6, 0xc2, 0x0d, 0x1a, 0x26, 0x00, 0x00,
}
