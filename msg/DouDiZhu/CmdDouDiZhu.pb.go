// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CmdDouDiZhu.proto

package DouDiZhu

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EnGameFrameID int32

const (
	EnGameFrameID_GAME_SUB_CS_USER_DISSOLVE_APPLY          EnGameFrameID = 1
	EnGameFrameID_GAME_SUB_CS_USER_ANSWER_DISSOLVE_APPLY   EnGameFrameID = 2
	EnGameFrameID_GAME_SUB_SC_USER_DISSOLVE_APPLY_NOTIFY   EnGameFrameID = 3
	EnGameFrameID_GAME_SUB_CS_USER_TABLE_CHAT              EnGameFrameID = 4
	EnGameFrameID_GAME_SUB_SC_USER_TABLE_CHAT_NOTIFY       EnGameFrameID = 5
	EnGameFrameID_GAME_SUB_CS_USER_READY_GAME              EnGameFrameID = 6
	EnGameFrameID_GAME_SUB_SC_USER_READY_GAME_NOTIFY       EnGameFrameID = 7
	EnGameFrameID_GAME_SUB_SC_USER_INFO_CHANGE_NOTIFY      EnGameFrameID = 8
	EnGameFrameID_GAME_SUB_SC_USER_TABLE_NOTIFY            EnGameFrameID = 9
	EnGameFrameID_GAME_SUB_SC_TABLE_DISMISS_NOTIFY         EnGameFrameID = 10
	EnGameFrameID_GAME_SUB_SC_USER_CARD_NOTIFY             EnGameFrameID = 11
	EnGameFrameID_GAME_SUB_CS_USER_DISMISS_TABLE           EnGameFrameID = 12
	EnGameFrameID_GAME_SUB_SC_TABLE_TOTAL_WIN_NOTIFY       EnGameFrameID = 15
	EnGameFrameID_GAME_SUB_CS_TABLE_LAST_WIN_DETAIL        EnGameFrameID = 16
	EnGameFrameID_GAME_SUB_SC_TABLE_LAST_WIN_DETAIL_NOTIFY EnGameFrameID = 17
	EnGameFrameID_GAME_SUB_MINGPAI_CS                      EnGameFrameID = 18
	EnGameFrameID_GAME_SUB_USER_RELOGIN_SC                 EnGameFrameID = 19
	EnGameFrameID_GAME_SUB_CANCEL_TUOGUAN_CS               EnGameFrameID = 20
	EnGameFrameID_GAME_SUB_TUOGUAN_CS                      EnGameFrameID = 21
)

var EnGameFrameID_name = map[int32]string{
	1:  "GAME_SUB_CS_USER_DISSOLVE_APPLY",
	2:  "GAME_SUB_CS_USER_ANSWER_DISSOLVE_APPLY",
	3:  "GAME_SUB_SC_USER_DISSOLVE_APPLY_NOTIFY",
	4:  "GAME_SUB_CS_USER_TABLE_CHAT",
	5:  "GAME_SUB_SC_USER_TABLE_CHAT_NOTIFY",
	6:  "GAME_SUB_CS_USER_READY_GAME",
	7:  "GAME_SUB_SC_USER_READY_GAME_NOTIFY",
	8:  "GAME_SUB_SC_USER_INFO_CHANGE_NOTIFY",
	9:  "GAME_SUB_SC_USER_TABLE_NOTIFY",
	10: "GAME_SUB_SC_TABLE_DISMISS_NOTIFY",
	11: "GAME_SUB_SC_USER_CARD_NOTIFY",
	12: "GAME_SUB_CS_USER_DISMISS_TABLE",
	15: "GAME_SUB_SC_TABLE_TOTAL_WIN_NOTIFY",
	16: "GAME_SUB_CS_TABLE_LAST_WIN_DETAIL",
	17: "GAME_SUB_SC_TABLE_LAST_WIN_DETAIL_NOTIFY",
	18: "GAME_SUB_MINGPAI_CS",
	19: "GAME_SUB_USER_RELOGIN_SC",
	20: "GAME_SUB_CANCEL_TUOGUAN_CS",
	21: "GAME_SUB_TUOGUAN_CS",
}

var EnGameFrameID_value = map[string]int32{
	"GAME_SUB_CS_USER_DISSOLVE_APPLY":          1,
	"GAME_SUB_CS_USER_ANSWER_DISSOLVE_APPLY":   2,
	"GAME_SUB_SC_USER_DISSOLVE_APPLY_NOTIFY":   3,
	"GAME_SUB_CS_USER_TABLE_CHAT":              4,
	"GAME_SUB_SC_USER_TABLE_CHAT_NOTIFY":       5,
	"GAME_SUB_CS_USER_READY_GAME":              6,
	"GAME_SUB_SC_USER_READY_GAME_NOTIFY":       7,
	"GAME_SUB_SC_USER_INFO_CHANGE_NOTIFY":      8,
	"GAME_SUB_SC_USER_TABLE_NOTIFY":            9,
	"GAME_SUB_SC_TABLE_DISMISS_NOTIFY":         10,
	"GAME_SUB_SC_USER_CARD_NOTIFY":             11,
	"GAME_SUB_CS_USER_DISMISS_TABLE":           12,
	"GAME_SUB_SC_TABLE_TOTAL_WIN_NOTIFY":       15,
	"GAME_SUB_CS_TABLE_LAST_WIN_DETAIL":        16,
	"GAME_SUB_SC_TABLE_LAST_WIN_DETAIL_NOTIFY": 17,
	"GAME_SUB_MINGPAI_CS":                      18,
	"GAME_SUB_USER_RELOGIN_SC":                 19,
	"GAME_SUB_CANCEL_TUOGUAN_CS":               20,
	"GAME_SUB_TUOGUAN_CS":                      21,
}

func (x EnGameFrameID) Enum() *EnGameFrameID {
	p := new(EnGameFrameID)
	*p = x
	return p
}

func (x EnGameFrameID) String() string {
	return proto.EnumName(EnGameFrameID_name, int32(x))
}

func (x *EnGameFrameID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnGameFrameID_value, data, "EnGameFrameID")
	if err != nil {
		return err
	}
	*x = EnGameFrameID(value)
	return nil
}

func (EnGameFrameID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{0}
}

type EnGameSubID int32

const (
	EnGameSubID_GAME_SUB_SC_GAME_START             EnGameSubID = 100
	EnGameSubID_GAME_SUB_CS_OPERATE                EnGameSubID = 101
	EnGameSubID_GAME_SUB_SC_OPERATE_RESULT_NOTIFY  EnGameSubID = 102
	EnGameSubID_GAME_SUB_SC_OPERATE_CODE_NOTIFY    EnGameSubID = 103
	EnGameSubID_GAME_SUB_SC_GAME_END               EnGameSubID = 104
	EnGameSubID_GAME_SUB_SENDCARD_SC               EnGameSubID = 105
	EnGameSubID_GAME_SUB_MINGPAI_SC                EnGameSubID = 106
	EnGameSubID_GAME_SUB_SEND_LANDOWNERCARD_SC     EnGameSubID = 107
	EnGameSubID_GAME_SUB_TUOGUAN_SC                EnGameSubID = 108
	EnGameSubID_GAME_SUB_CANCEL_TUOGUAN_SC         EnGameSubID = 109
	EnGameSubID_GAME_SUB_SYNC_BEILV_SC             EnGameSubID = 110
	EnGameSubID_GAME_SUB_SYNC_CARDHOLDER_SC        EnGameSubID = 111
	EnGameSubID_GAME_SUB_SC_ADD_SUPER_BEILV_RESULT EnGameSubID = 112
)

var EnGameSubID_name = map[int32]string{
	100: "GAME_SUB_SC_GAME_START",
	101: "GAME_SUB_CS_OPERATE",
	102: "GAME_SUB_SC_OPERATE_RESULT_NOTIFY",
	103: "GAME_SUB_SC_OPERATE_CODE_NOTIFY",
	104: "GAME_SUB_SC_GAME_END",
	105: "GAME_SUB_SENDCARD_SC",
	106: "GAME_SUB_MINGPAI_SC",
	107: "GAME_SUB_SEND_LANDOWNERCARD_SC",
	108: "GAME_SUB_TUOGUAN_SC",
	109: "GAME_SUB_CANCEL_TUOGUAN_SC",
	110: "GAME_SUB_SYNC_BEILV_SC",
	111: "GAME_SUB_SYNC_CARDHOLDER_SC",
	112: "GAME_SUB_SC_ADD_SUPER_BEILV_RESULT",
}

var EnGameSubID_value = map[string]int32{
	"GAME_SUB_SC_GAME_START":             100,
	"GAME_SUB_CS_OPERATE":                101,
	"GAME_SUB_SC_OPERATE_RESULT_NOTIFY":  102,
	"GAME_SUB_SC_OPERATE_CODE_NOTIFY":    103,
	"GAME_SUB_SC_GAME_END":               104,
	"GAME_SUB_SENDCARD_SC":               105,
	"GAME_SUB_MINGPAI_SC":                106,
	"GAME_SUB_SEND_LANDOWNERCARD_SC":     107,
	"GAME_SUB_TUOGUAN_SC":                108,
	"GAME_SUB_CANCEL_TUOGUAN_SC":         109,
	"GAME_SUB_SYNC_BEILV_SC":             110,
	"GAME_SUB_SYNC_CARDHOLDER_SC":        111,
	"GAME_SUB_SC_ADD_SUPER_BEILV_RESULT": 112,
}

func (x EnGameSubID) Enum() *EnGameSubID {
	p := new(EnGameSubID)
	*p = x
	return p
}

func (x EnGameSubID) String() string {
	return proto.EnumName(EnGameSubID_name, int32(x))
}

func (x *EnGameSubID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnGameSubID_value, data, "EnGameSubID")
	if err != nil {
		return err
	}
	*x = EnGameSubID(value)
	return nil
}

func (EnGameSubID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{1}
}

type EnShuffleType int32

const (
	EnShuffleType_enShuffleType_WENROU EnShuffleType = 1
	EnShuffleType_enShuffleType_BAOLI  EnShuffleType = 2
)

var EnShuffleType_name = map[int32]string{
	1: "enShuffleType_WENROU",
	2: "enShuffleType_BAOLI",
}

var EnShuffleType_value = map[string]int32{
	"enShuffleType_WENROU": 1,
	"enShuffleType_BAOLI":  2,
}

func (x EnShuffleType) Enum() *EnShuffleType {
	p := new(EnShuffleType)
	*p = x
	return p
}

func (x EnShuffleType) String() string {
	return proto.EnumName(EnShuffleType_name, int32(x))
}

func (x *EnShuffleType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnShuffleType_value, data, "EnShuffleType")
	if err != nil {
		return err
	}
	*x = EnShuffleType(value)
	return nil
}

func (EnShuffleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{2}
}

type EnBeiLvType int32

const (
	EnBeiLvType_enBeiLvType_Public     EnBeiLvType = 1
	EnBeiLvType_enBeiLvType_MingPai    EnBeiLvType = 2
	EnBeiLvType_enBeiLvType_Bomb       EnBeiLvType = 3
	EnBeiLvType_enBeiLvType_Spring     EnBeiLvType = 4
	EnBeiLvType_enBeiLvType_BackSpring EnBeiLvType = 5
	EnBeiLvType_enBeiLvType_DZAddBeiLv EnBeiLvType = 6
	EnBeiLvType_enBeiLvType_NMAddBeiLv EnBeiLvType = 7
	EnBeiLvType_enBeiLvType_Start      EnBeiLvType = 8
)

var EnBeiLvType_name = map[int32]string{
	1: "enBeiLvType_Public",
	2: "enBeiLvType_MingPai",
	3: "enBeiLvType_Bomb",
	4: "enBeiLvType_Spring",
	5: "enBeiLvType_BackSpring",
	6: "enBeiLvType_DZAddBeiLv",
	7: "enBeiLvType_NMAddBeiLv",
	8: "enBeiLvType_Start",
}

var EnBeiLvType_value = map[string]int32{
	"enBeiLvType_Public":     1,
	"enBeiLvType_MingPai":    2,
	"enBeiLvType_Bomb":       3,
	"enBeiLvType_Spring":     4,
	"enBeiLvType_BackSpring": 5,
	"enBeiLvType_DZAddBeiLv": 6,
	"enBeiLvType_NMAddBeiLv": 7,
	"enBeiLvType_Start":      8,
}

func (x EnBeiLvType) Enum() *EnBeiLvType {
	p := new(EnBeiLvType)
	*p = x
	return p
}

func (x EnBeiLvType) String() string {
	return proto.EnumName(EnBeiLvType_name, int32(x))
}

func (x *EnBeiLvType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnBeiLvType_value, data, "EnBeiLvType")
	if err != nil {
		return err
	}
	*x = EnBeiLvType(value)
	return nil
}

func (EnBeiLvType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{3}
}

//扑克操作码
type EnSeat_Operate int32

const (
	EnSeat_Operate_enSeat_Operate_NONE            EnSeat_Operate = 0
	EnSeat_Operate_enSeat_Operate_Ask_LandOwner   EnSeat_Operate = 1
	EnSeat_Operate_enSeat_Operate_Qiang_LandOwner EnSeat_Operate = 2
	EnSeat_Operate_enSeat_Operate_AddBeiLv        EnSeat_Operate = 3
	EnSeat_Operate_enSeat_Operate_Discard         EnSeat_Operate = 4
	EnSeat_Operate_enSeate_Operate_ASK_Score      EnSeat_Operate = 5
)

var EnSeat_Operate_name = map[int32]string{
	0: "enSeat_Operate_NONE",
	1: "enSeat_Operate_Ask_LandOwner",
	2: "enSeat_Operate_Qiang_LandOwner",
	3: "enSeat_Operate_AddBeiLv",
	4: "enSeat_Operate_Discard",
	5: "enSeate_Operate_ASK_Score",
}

var EnSeat_Operate_value = map[string]int32{
	"enSeat_Operate_NONE":            0,
	"enSeat_Operate_Ask_LandOwner":   1,
	"enSeat_Operate_Qiang_LandOwner": 2,
	"enSeat_Operate_AddBeiLv":        3,
	"enSeat_Operate_Discard":         4,
	"enSeate_Operate_ASK_Score":      5,
}

func (x EnSeat_Operate) Enum() *EnSeat_Operate {
	p := new(EnSeat_Operate)
	*p = x
	return p
}

func (x EnSeat_Operate) String() string {
	return proto.EnumName(EnSeat_Operate_name, int32(x))
}

func (x *EnSeat_Operate) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnSeat_Operate_value, data, "EnSeat_Operate")
	if err != nil {
		return err
	}
	*x = EnSeat_Operate(value)
	return nil
}

func (EnSeat_Operate) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{4}
}

type EnCardType int32

const (
	EnCardType_enCardType_CT_ERROR               EnCardType = 0
	EnCardType_enCardType_CT_SINGLE              EnCardType = 1
	EnCardType_enCardType_CT_DOUBLE              EnCardType = 2
	EnCardType_enCardType_CT_THREE               EnCardType = 3
	EnCardType_enCardType_CT_SINGLE_LINE         EnCardType = 4
	EnCardType_enCardType_CT_DOUBLE_LINE         EnCardType = 5
	EnCardType_enCardType_CT_THREE_LINE          EnCardType = 6
	EnCardType_enCardType_CT_THREE_TAKE_ONE      EnCardType = 7
	EnCardType_enCardType_CT_THREE_TAKE_ONE_LINE EnCardType = 8
	EnCardType_enCardType_CT_THREE_TAKE_TWO      EnCardType = 9
	EnCardType_enCardType_CT_THREE_TAKE_TWO_LINE EnCardType = 10
	EnCardType_enCardType_CT_FOUR_TAKE_ONE       EnCardType = 11
	EnCardType_enCardType_CT_FOUR_TAKE_ONE_LINE  EnCardType = 12
	EnCardType_enCardType_CT_FOUR_TAKE_TWO       EnCardType = 13
	EnCardType_enCardType_CT_FOUR_TAKE_TWO_LINE  EnCardType = 14
	EnCardType_enCardType_CT_RUAN_BOMB           EnCardType = 15
	EnCardType_enCardType_CT_BOMB_CARD           EnCardType = 16
	EnCardType_enCardType_CT_LAIZI_BOMB          EnCardType = 17
	EnCardType_enCardType_CT_MISSILE_CARD        EnCardType = 18
)

var EnCardType_name = map[int32]string{
	0:  "enCardType_CT_ERROR",
	1:  "enCardType_CT_SINGLE",
	2:  "enCardType_CT_DOUBLE",
	3:  "enCardType_CT_THREE",
	4:  "enCardType_CT_SINGLE_LINE",
	5:  "enCardType_CT_DOUBLE_LINE",
	6:  "enCardType_CT_THREE_LINE",
	7:  "enCardType_CT_THREE_TAKE_ONE",
	8:  "enCardType_CT_THREE_TAKE_ONE_LINE",
	9:  "enCardType_CT_THREE_TAKE_TWO",
	10: "enCardType_CT_THREE_TAKE_TWO_LINE",
	11: "enCardType_CT_FOUR_TAKE_ONE",
	12: "enCardType_CT_FOUR_TAKE_ONE_LINE",
	13: "enCardType_CT_FOUR_TAKE_TWO",
	14: "enCardType_CT_FOUR_TAKE_TWO_LINE",
	15: "enCardType_CT_RUAN_BOMB",
	16: "enCardType_CT_BOMB_CARD",
	17: "enCardType_CT_LAIZI_BOMB",
	18: "enCardType_CT_MISSILE_CARD",
}

var EnCardType_value = map[string]int32{
	"enCardType_CT_ERROR":               0,
	"enCardType_CT_SINGLE":              1,
	"enCardType_CT_DOUBLE":              2,
	"enCardType_CT_THREE":               3,
	"enCardType_CT_SINGLE_LINE":         4,
	"enCardType_CT_DOUBLE_LINE":         5,
	"enCardType_CT_THREE_LINE":          6,
	"enCardType_CT_THREE_TAKE_ONE":      7,
	"enCardType_CT_THREE_TAKE_ONE_LINE": 8,
	"enCardType_CT_THREE_TAKE_TWO":      9,
	"enCardType_CT_THREE_TAKE_TWO_LINE": 10,
	"enCardType_CT_FOUR_TAKE_ONE":       11,
	"enCardType_CT_FOUR_TAKE_ONE_LINE":  12,
	"enCardType_CT_FOUR_TAKE_TWO":       13,
	"enCardType_CT_FOUR_TAKE_TWO_LINE":  14,
	"enCardType_CT_RUAN_BOMB":           15,
	"enCardType_CT_BOMB_CARD":           16,
	"enCardType_CT_LAIZI_BOMB":          17,
	"enCardType_CT_MISSILE_CARD":        18,
}

func (x EnCardType) Enum() *EnCardType {
	p := new(EnCardType)
	*p = x
	return p
}

func (x EnCardType) String() string {
	return proto.EnumName(EnCardType_name, int32(x))
}

func (x *EnCardType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnCardType_value, data, "EnCardType")
	if err != nil {
		return err
	}
	*x = EnCardType(value)
	return nil
}

func (EnCardType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{5}
}

type TableState int32

const (
	TableState_Table_State_Init            TableState = 1
	TableState_Table_State_SendCard        TableState = 2
	TableState_Table_State_EnsureLandOwner TableState = 3
	TableState_Table_State_AddBeiLv        TableState = 4
	TableState_Table_State_OutCard         TableState = 5
	TableState_Table_State_Game_End        TableState = 6
	TableState_Table_State_Dissolve        TableState = 7
	TableState_Table_State_Wait_Dissolve   TableState = 8
)

var TableState_name = map[int32]string{
	1: "Table_State_Init",
	2: "Table_State_SendCard",
	3: "Table_State_EnsureLandOwner",
	4: "Table_State_AddBeiLv",
	5: "Table_State_OutCard",
	6: "Table_State_Game_End",
	7: "Table_State_Dissolve",
	8: "Table_State_Wait_Dissolve",
}

var TableState_value = map[string]int32{
	"Table_State_Init":            1,
	"Table_State_SendCard":        2,
	"Table_State_EnsureLandOwner": 3,
	"Table_State_AddBeiLv":        4,
	"Table_State_OutCard":         5,
	"Table_State_Game_End":        6,
	"Table_State_Dissolve":        7,
	"Table_State_Wait_Dissolve":   8,
}

func (x TableState) Enum() *TableState {
	p := new(TableState)
	*p = x
	return p
}

func (x TableState) String() string {
	return proto.EnumName(TableState_name, int32(x))
}

func (x *TableState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableState_value, data, "TableState")
	if err != nil {
		return err
	}
	*x = TableState(value)
	return nil
}

func (TableState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{6}
}

type UserState int32

const (
	UserState_Mj_User_State_Init           UserState = 1
	UserState_Mj_User_State_Sit            UserState = 2
	UserState_Mj_User_State_Ready          UserState = 3
	UserState_Mj_User_State_ShowCard       UserState = 4
	UserState_Mj_User_State_QiangLandOwner UserState = 5
	UserState_Mj_User_State_AddBeiLv       UserState = 6
	UserState_Mj_User_State_OutCard        UserState = 7
	UserState_Mj_User_State_End            UserState = 8
)

var UserState_name = map[int32]string{
	1: "Mj_User_State_Init",
	2: "Mj_User_State_Sit",
	3: "Mj_User_State_Ready",
	4: "Mj_User_State_ShowCard",
	5: "Mj_User_State_QiangLandOwner",
	6: "Mj_User_State_AddBeiLv",
	7: "Mj_User_State_OutCard",
	8: "Mj_User_State_End",
}

var UserState_value = map[string]int32{
	"Mj_User_State_Init":           1,
	"Mj_User_State_Sit":            2,
	"Mj_User_State_Ready":          3,
	"Mj_User_State_ShowCard":       4,
	"Mj_User_State_QiangLandOwner": 5,
	"Mj_User_State_AddBeiLv":       6,
	"Mj_User_State_OutCard":        7,
	"Mj_User_State_End":            8,
}

func (x UserState) Enum() *UserState {
	p := new(UserState)
	*p = x
	return p
}

func (x UserState) String() string {
	return proto.EnumName(UserState_name, int32(x))
}

func (x *UserState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserState_value, data, "UserState")
	if err != nil {
		return err
	}
	*x = UserState(value)
	return nil
}

func (UserState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{7}
}

type TableFinalDecision int32

const (
	TableFinalDecision_Table_Decision_None     TableFinalDecision = 1
	TableFinalDecision_Table_Decision_Agree    TableFinalDecision = 2
	TableFinalDecision_Table_Decision_Disagree TableFinalDecision = 3
)

var TableFinalDecision_name = map[int32]string{
	1: "Table_Decision_None",
	2: "Table_Decision_Agree",
	3: "Table_Decision_Disagree",
}

var TableFinalDecision_value = map[string]int32{
	"Table_Decision_None":     1,
	"Table_Decision_Agree":    2,
	"Table_Decision_Disagree": 3,
}

func (x TableFinalDecision) Enum() *TableFinalDecision {
	p := new(TableFinalDecision)
	*p = x
	return p
}

func (x TableFinalDecision) String() string {
	return proto.EnumName(TableFinalDecision_name, int32(x))
}

func (x *TableFinalDecision) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableFinalDecision_value, data, "TableFinalDecision")
	if err != nil {
		return err
	}
	*x = TableFinalDecision(value)
	return nil
}

func (TableFinalDecision) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{8}
}

//结算状态
type EnResultState int32

const (
	EnResultState_enResultState_NULL   EnResultState = 0
	EnResultState_enResultState_PoChan EnResultState = 1
	EnResultState_enResultState_Limit  EnResultState = 2
)

var EnResultState_name = map[int32]string{
	0: "enResultState_NULL",
	1: "enResultState_PoChan",
	2: "enResultState_Limit",
}

var EnResultState_value = map[string]int32{
	"enResultState_NULL":   0,
	"enResultState_PoChan": 1,
	"enResultState_Limit":  2,
}

func (x EnResultState) Enum() *EnResultState {
	p := new(EnResultState)
	*p = x
	return p
}

func (x EnResultState) String() string {
	return proto.EnumName(EnResultState_name, int32(x))
}

func (x *EnResultState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnResultState_value, data, "EnResultState")
	if err != nil {
		return err
	}
	*x = EnResultState(value)
	return nil
}

func (EnResultState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{9}
}

type EnWinRes int32

const (
	EnWinRes_enWinRes_NULL       EnWinRes = 0
	EnWinRes_enWinRes_LandOwner  EnWinRes = 1
	EnWinRes_enWinRes_Farmer     EnWinRes = 2
	EnWinRes_enWinRes_Spring     EnWinRes = 4
	EnWinRes_enWinRes_BackSpring EnWinRes = 5
)

var EnWinRes_name = map[int32]string{
	0: "enWinRes_NULL",
	1: "enWinRes_LandOwner",
	2: "enWinRes_Farmer",
	4: "enWinRes_Spring",
	5: "enWinRes_BackSpring",
}

var EnWinRes_value = map[string]int32{
	"enWinRes_NULL":       0,
	"enWinRes_LandOwner":  1,
	"enWinRes_Farmer":     2,
	"enWinRes_Spring":     4,
	"enWinRes_BackSpring": 5,
}

func (x EnWinRes) Enum() *EnWinRes {
	p := new(EnWinRes)
	*p = x
	return p
}

func (x EnWinRes) String() string {
	return proto.EnumName(EnWinRes_name, int32(x))
}

func (x *EnWinRes) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnWinRes_value, data, "EnWinRes")
	if err != nil {
		return err
	}
	*x = EnWinRes(value)
	return nil
}

func (EnWinRes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{10}
}

//GAME_SUB_SC_ADD_SUPER_BEILV_RESULT 超级加倍结果通知-目前只有超级加倍失败才会通知,主要是超级加倍卡不足
type GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG struct {
	IResult              *int32   `protobuf:"varint,1,req,name=iResult" json:"iResult,omitempty"`
	StrMsg               *string  `protobuf:"bytes,2,req,name=strMsg" json:"strMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG) Reset() {
	*m = GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG{}
}
func (m *GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG) ProtoMessage()    {}
func (*GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{0}
}

func (m *GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG.Merge(m, src)
}
func (m *GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG.Size(m)
}
func (m *GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG proto.InternalMessageInfo

func (m *GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG) GetIResult() int32 {
	if m != nil && m.IResult != nil {
		return *m.IResult
	}
	return 0
}

func (m *GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG) GetStrMsg() string {
	if m != nil && m.StrMsg != nil {
		return *m.StrMsg
	}
	return ""
}

type CardHoldUnit struct {
	ICardVal             *int32   `protobuf:"varint,1,req,name=iCardVal" json:"iCardVal,omitempty"`
	ICnt                 *int32   `protobuf:"varint,2,req,name=iCnt" json:"iCnt,omitempty"`
	BIsLaiZi             *bool    `protobuf:"varint,3,req,name=bIsLaiZi" json:"bIsLaiZi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardHoldUnit) Reset()         { *m = CardHoldUnit{} }
func (m *CardHoldUnit) String() string { return proto.CompactTextString(m) }
func (*CardHoldUnit) ProtoMessage()    {}
func (*CardHoldUnit) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{1}
}

func (m *CardHoldUnit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardHoldUnit.Unmarshal(m, b)
}
func (m *CardHoldUnit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardHoldUnit.Marshal(b, m, deterministic)
}
func (m *CardHoldUnit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardHoldUnit.Merge(m, src)
}
func (m *CardHoldUnit) XXX_Size() int {
	return xxx_messageInfo_CardHoldUnit.Size(m)
}
func (m *CardHoldUnit) XXX_DiscardUnknown() {
	xxx_messageInfo_CardHoldUnit.DiscardUnknown(m)
}

var xxx_messageInfo_CardHoldUnit proto.InternalMessageInfo

func (m *CardHoldUnit) GetICardVal() int32 {
	if m != nil && m.ICardVal != nil {
		return *m.ICardVal
	}
	return 0
}

func (m *CardHoldUnit) GetICnt() int32 {
	if m != nil && m.ICnt != nil {
		return *m.ICnt
	}
	return 0
}

func (m *CardHoldUnit) GetBIsLaiZi() bool {
	if m != nil && m.BIsLaiZi != nil {
		return *m.BIsLaiZi
	}
	return false
}

type GAME_SUB_SYNC_CARDHOLDER_SC_MSG struct {
	SzList               []*CardHoldUnit `protobuf:"bytes,1,rep,name=szList" json:"szList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GAME_SUB_SYNC_CARDHOLDER_SC_MSG) Reset()         { *m = GAME_SUB_SYNC_CARDHOLDER_SC_MSG{} }
func (m *GAME_SUB_SYNC_CARDHOLDER_SC_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_SYNC_CARDHOLDER_SC_MSG) ProtoMessage()    {}
func (*GAME_SUB_SYNC_CARDHOLDER_SC_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{2}
}

func (m *GAME_SUB_SYNC_CARDHOLDER_SC_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_SYNC_CARDHOLDER_SC_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_SYNC_CARDHOLDER_SC_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_SYNC_CARDHOLDER_SC_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_SYNC_CARDHOLDER_SC_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_SYNC_CARDHOLDER_SC_MSG.Merge(m, src)
}
func (m *GAME_SUB_SYNC_CARDHOLDER_SC_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_SYNC_CARDHOLDER_SC_MSG.Size(m)
}
func (m *GAME_SUB_SYNC_CARDHOLDER_SC_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_SYNC_CARDHOLDER_SC_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_SYNC_CARDHOLDER_SC_MSG proto.InternalMessageInfo

func (m *GAME_SUB_SYNC_CARDHOLDER_SC_MSG) GetSzList() []*CardHoldUnit {
	if m != nil {
		return m.SzList
	}
	return nil
}

//修改后都会通知客户端
type GAME_SUB_SYNC_BEILV_SC_MSG struct {
	SzList               []*GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit `protobuf:"bytes,1,rep,name=szList" json:"szList,omitempty"`
	NickName             *string                                 `protobuf:"bytes,2,req,name=nickName" json:"nickName,omitempty"`
	IsLandOwner          *bool                                   `protobuf:"varint,3,req,name=isLandOwner" json:"isLandOwner,omitempty"`
	ITotalBeiLv          *int32                                  `protobuf:"varint,4,req,name=iTotalBeiLv" json:"iTotalBeiLv,omitempty"`
	IBeiLvLimit          *int32                                  `protobuf:"varint,5,req,name=iBeiLvLimit" json:"iBeiLvLimit,omitempty"`
	IBaseScore           *int32                                  `protobuf:"varint,6,req,name=iBaseScore" json:"iBaseScore,omitempty"`
	IMaxScore            *int64                                  `protobuf:"varint,7,req,name=iMaxScore" json:"iMaxScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *GAME_SUB_SYNC_BEILV_SC_MSG) Reset()         { *m = GAME_SUB_SYNC_BEILV_SC_MSG{} }
func (m *GAME_SUB_SYNC_BEILV_SC_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_SYNC_BEILV_SC_MSG) ProtoMessage()    {}
func (*GAME_SUB_SYNC_BEILV_SC_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{3}
}

func (m *GAME_SUB_SYNC_BEILV_SC_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_SYNC_BEILV_SC_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_SYNC_BEILV_SC_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_SYNC_BEILV_SC_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_SYNC_BEILV_SC_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_SYNC_BEILV_SC_MSG.Merge(m, src)
}
func (m *GAME_SUB_SYNC_BEILV_SC_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_SYNC_BEILV_SC_MSG.Size(m)
}
func (m *GAME_SUB_SYNC_BEILV_SC_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_SYNC_BEILV_SC_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_SYNC_BEILV_SC_MSG proto.InternalMessageInfo

func (m *GAME_SUB_SYNC_BEILV_SC_MSG) GetSzList() []*GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit {
	if m != nil {
		return m.SzList
	}
	return nil
}

func (m *GAME_SUB_SYNC_BEILV_SC_MSG) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *GAME_SUB_SYNC_BEILV_SC_MSG) GetIsLandOwner() bool {
	if m != nil && m.IsLandOwner != nil {
		return *m.IsLandOwner
	}
	return false
}

func (m *GAME_SUB_SYNC_BEILV_SC_MSG) GetITotalBeiLv() int32 {
	if m != nil && m.ITotalBeiLv != nil {
		return *m.ITotalBeiLv
	}
	return 0
}

func (m *GAME_SUB_SYNC_BEILV_SC_MSG) GetIBeiLvLimit() int32 {
	if m != nil && m.IBeiLvLimit != nil {
		return *m.IBeiLvLimit
	}
	return 0
}

func (m *GAME_SUB_SYNC_BEILV_SC_MSG) GetIBaseScore() int32 {
	if m != nil && m.IBaseScore != nil {
		return *m.IBaseScore
	}
	return 0
}

func (m *GAME_SUB_SYNC_BEILV_SC_MSG) GetIMaxScore() int64 {
	if m != nil && m.IMaxScore != nil {
		return *m.IMaxScore
	}
	return 0
}

type GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit struct {
	IType                *int32   `protobuf:"varint,1,req,name=iType" json:"iType,omitempty"`
	IVal                 *int32   `protobuf:"varint,2,req,name=iVal" json:"iVal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit) Reset()         { *m = GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit{} }
func (m *GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit) ProtoMessage()    {}
func (*GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{3, 0}
}

func (m *GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit.Unmarshal(m, b)
}
func (m *GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit.Merge(m, src)
}
func (m *GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit.Size(m)
}
func (m *GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit proto.InternalMessageInfo

func (m *GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit) GetIType() int32 {
	if m != nil && m.IType != nil {
		return *m.IType
	}
	return 0
}

func (m *GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit) GetIVal() int32 {
	if m != nil && m.IVal != nil {
		return *m.IVal
	}
	return 0
}

type GAME_SUB_TUOGUAN_CS_MSG struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAME_SUB_TUOGUAN_CS_MSG) Reset()         { *m = GAME_SUB_TUOGUAN_CS_MSG{} }
func (m *GAME_SUB_TUOGUAN_CS_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_TUOGUAN_CS_MSG) ProtoMessage()    {}
func (*GAME_SUB_TUOGUAN_CS_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{4}
}

func (m *GAME_SUB_TUOGUAN_CS_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_TUOGUAN_CS_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_TUOGUAN_CS_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_TUOGUAN_CS_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_TUOGUAN_CS_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_TUOGUAN_CS_MSG.Merge(m, src)
}
func (m *GAME_SUB_TUOGUAN_CS_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_TUOGUAN_CS_MSG.Size(m)
}
func (m *GAME_SUB_TUOGUAN_CS_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_TUOGUAN_CS_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_TUOGUAN_CS_MSG proto.InternalMessageInfo

type GAME_SUB_CANCEL_TUOGUAN_CS_MSG struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAME_SUB_CANCEL_TUOGUAN_CS_MSG) Reset()         { *m = GAME_SUB_CANCEL_TUOGUAN_CS_MSG{} }
func (m *GAME_SUB_CANCEL_TUOGUAN_CS_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_CANCEL_TUOGUAN_CS_MSG) ProtoMessage()    {}
func (*GAME_SUB_CANCEL_TUOGUAN_CS_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{5}
}

func (m *GAME_SUB_CANCEL_TUOGUAN_CS_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_CANCEL_TUOGUAN_CS_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_CANCEL_TUOGUAN_CS_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_CANCEL_TUOGUAN_CS_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_CANCEL_TUOGUAN_CS_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_CANCEL_TUOGUAN_CS_MSG.Merge(m, src)
}
func (m *GAME_SUB_CANCEL_TUOGUAN_CS_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_CANCEL_TUOGUAN_CS_MSG.Size(m)
}
func (m *GAME_SUB_CANCEL_TUOGUAN_CS_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_CANCEL_TUOGUAN_CS_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_CANCEL_TUOGUAN_CS_MSG proto.InternalMessageInfo

type GAME_SUB_CANCEL_TUOGUAN_SC_MSG struct {
	ISeatId              *int32   `protobuf:"varint,1,req,name=iSeatId" json:"iSeatId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAME_SUB_CANCEL_TUOGUAN_SC_MSG) Reset()         { *m = GAME_SUB_CANCEL_TUOGUAN_SC_MSG{} }
func (m *GAME_SUB_CANCEL_TUOGUAN_SC_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_CANCEL_TUOGUAN_SC_MSG) ProtoMessage()    {}
func (*GAME_SUB_CANCEL_TUOGUAN_SC_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{6}
}

func (m *GAME_SUB_CANCEL_TUOGUAN_SC_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_CANCEL_TUOGUAN_SC_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_CANCEL_TUOGUAN_SC_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_CANCEL_TUOGUAN_SC_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_CANCEL_TUOGUAN_SC_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_CANCEL_TUOGUAN_SC_MSG.Merge(m, src)
}
func (m *GAME_SUB_CANCEL_TUOGUAN_SC_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_CANCEL_TUOGUAN_SC_MSG.Size(m)
}
func (m *GAME_SUB_CANCEL_TUOGUAN_SC_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_CANCEL_TUOGUAN_SC_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_CANCEL_TUOGUAN_SC_MSG proto.InternalMessageInfo

func (m *GAME_SUB_CANCEL_TUOGUAN_SC_MSG) GetISeatId() int32 {
	if m != nil && m.ISeatId != nil {
		return *m.ISeatId
	}
	return 0
}

type GAME_SUB_TUOGUAN_SC_MSG struct {
	ISeatId              *int32   `protobuf:"varint,1,req,name=iSeatId" json:"iSeatId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAME_SUB_TUOGUAN_SC_MSG) Reset()         { *m = GAME_SUB_TUOGUAN_SC_MSG{} }
func (m *GAME_SUB_TUOGUAN_SC_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_TUOGUAN_SC_MSG) ProtoMessage()    {}
func (*GAME_SUB_TUOGUAN_SC_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{7}
}

func (m *GAME_SUB_TUOGUAN_SC_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_TUOGUAN_SC_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_TUOGUAN_SC_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_TUOGUAN_SC_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_TUOGUAN_SC_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_TUOGUAN_SC_MSG.Merge(m, src)
}
func (m *GAME_SUB_TUOGUAN_SC_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_TUOGUAN_SC_MSG.Size(m)
}
func (m *GAME_SUB_TUOGUAN_SC_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_TUOGUAN_SC_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_TUOGUAN_SC_MSG proto.InternalMessageInfo

func (m *GAME_SUB_TUOGUAN_SC_MSG) GetISeatId() int32 {
	if m != nil && m.ISeatId != nil {
		return *m.ISeatId
	}
	return 0
}

//上家牌
type ForwardCardInfo struct {
	ICardType            *int32   `protobuf:"varint,1,req,name=iCardType" json:"iCardType,omitempty"`
	ISeatId              *int32   `protobuf:"varint,2,req,name=iSeatId" json:"iSeatId,omitempty"`
	SzCardList           []int32  `protobuf:"varint,3,rep,name=szCardList" json:"szCardList,omitempty"`
	SzReplaceList        []int32  `protobuf:"varint,4,rep,name=szReplaceList" json:"szReplaceList,omitempty"`
	BIsPass              *bool    `protobuf:"varint,5,req,name=bIsPass" json:"bIsPass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForwardCardInfo) Reset()         { *m = ForwardCardInfo{} }
func (m *ForwardCardInfo) String() string { return proto.CompactTextString(m) }
func (*ForwardCardInfo) ProtoMessage()    {}
func (*ForwardCardInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{8}
}

func (m *ForwardCardInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForwardCardInfo.Unmarshal(m, b)
}
func (m *ForwardCardInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForwardCardInfo.Marshal(b, m, deterministic)
}
func (m *ForwardCardInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardCardInfo.Merge(m, src)
}
func (m *ForwardCardInfo) XXX_Size() int {
	return xxx_messageInfo_ForwardCardInfo.Size(m)
}
func (m *ForwardCardInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardCardInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardCardInfo proto.InternalMessageInfo

func (m *ForwardCardInfo) GetICardType() int32 {
	if m != nil && m.ICardType != nil {
		return *m.ICardType
	}
	return 0
}

func (m *ForwardCardInfo) GetISeatId() int32 {
	if m != nil && m.ISeatId != nil {
		return *m.ISeatId
	}
	return 0
}

func (m *ForwardCardInfo) GetSzCardList() []int32 {
	if m != nil {
		return m.SzCardList
	}
	return nil
}

func (m *ForwardCardInfo) GetSzReplaceList() []int32 {
	if m != nil {
		return m.SzReplaceList
	}
	return nil
}

func (m *ForwardCardInfo) GetBIsPass() bool {
	if m != nil && m.BIsPass != nil {
		return *m.BIsPass
	}
	return false
}

type MinPaiInfo struct {
	ISeatId              *int32   `protobuf:"varint,1,req,name=iSeatId" json:"iSeatId,omitempty"`
	SzCardList           []uint32 `protobuf:"varint,2,rep,name=szCardList" json:"szCardList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MinPaiInfo) Reset()         { *m = MinPaiInfo{} }
func (m *MinPaiInfo) String() string { return proto.CompactTextString(m) }
func (*MinPaiInfo) ProtoMessage()    {}
func (*MinPaiInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{9}
}

func (m *MinPaiInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinPaiInfo.Unmarshal(m, b)
}
func (m *MinPaiInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinPaiInfo.Marshal(b, m, deterministic)
}
func (m *MinPaiInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinPaiInfo.Merge(m, src)
}
func (m *MinPaiInfo) XXX_Size() int {
	return xxx_messageInfo_MinPaiInfo.Size(m)
}
func (m *MinPaiInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MinPaiInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MinPaiInfo proto.InternalMessageInfo

func (m *MinPaiInfo) GetISeatId() int32 {
	if m != nil && m.ISeatId != nil {
		return *m.ISeatId
	}
	return 0
}

func (m *MinPaiInfo) GetSzCardList() []uint32 {
	if m != nil {
		return m.SzCardList
	}
	return nil
}

type ActorAskLandOwnerInfo struct {
	ISeatId              *int32   `protobuf:"varint,1,req,name=iSeatId" json:"iSeatId,omitempty"`
	IType                *int32   `protobuf:"varint,2,req,name=iType" json:"iType,omitempty"`
	IScore               *int32   `protobuf:"varint,3,opt,name=iScore" json:"iScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActorAskLandOwnerInfo) Reset()         { *m = ActorAskLandOwnerInfo{} }
func (m *ActorAskLandOwnerInfo) String() string { return proto.CompactTextString(m) }
func (*ActorAskLandOwnerInfo) ProtoMessage()    {}
func (*ActorAskLandOwnerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{10}
}

func (m *ActorAskLandOwnerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActorAskLandOwnerInfo.Unmarshal(m, b)
}
func (m *ActorAskLandOwnerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActorAskLandOwnerInfo.Marshal(b, m, deterministic)
}
func (m *ActorAskLandOwnerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActorAskLandOwnerInfo.Merge(m, src)
}
func (m *ActorAskLandOwnerInfo) XXX_Size() int {
	return xxx_messageInfo_ActorAskLandOwnerInfo.Size(m)
}
func (m *ActorAskLandOwnerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ActorAskLandOwnerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ActorAskLandOwnerInfo proto.InternalMessageInfo

func (m *ActorAskLandOwnerInfo) GetISeatId() int32 {
	if m != nil && m.ISeatId != nil {
		return *m.ISeatId
	}
	return 0
}

func (m *ActorAskLandOwnerInfo) GetIType() int32 {
	if m != nil && m.IType != nil {
		return *m.IType
	}
	return 0
}

func (m *ActorAskLandOwnerInfo) GetIScore() int32 {
	if m != nil && m.IScore != nil {
		return *m.IScore
	}
	return 0
}

type GAME_SUB_USER_RELOGIN_SC_MSG struct {
	ITableState          *int32                   `protobuf:"varint,1,req,name=iTableState" json:"iTableState,omitempty"`
	SzHandCardList       []int32                  `protobuf:"varint,2,rep,name=szHandCardList" json:"szHandCardList,omitempty"`
	SzForwordCardInfo    []*ForwardCardInfo       `protobuf:"bytes,3,rep,name=szForwordCardInfo" json:"szForwordCardInfo,omitempty"`
	SzLandOwnerCardList  []int32                  `protobuf:"varint,4,rep,name=szLandOwnerCardList" json:"szLandOwnerCardList,omitempty"`
	ILaiZiCard           *int32                   `protobuf:"varint,5,opt,name=iLaiZiCard" json:"iLaiZiCard,omitempty"`
	BIsTuoGuan           *bool                    `protobuf:"varint,6,opt,name=bIsTuoGuan" json:"bIsTuoGuan,omitempty"`
	BSelfMingPai         *bool                    `protobuf:"varint,7,opt,name=bSelfMingPai" json:"bSelfMingPai,omitempty"`
	SzMinPaiInfoList     []*MinPaiInfo            `protobuf:"bytes,8,rep,name=szMinPaiInfoList" json:"szMinPaiInfoList,omitempty"`
	ICurBei              *int32                   `protobuf:"varint,9,opt,name=iCurBei" json:"iCurBei,omitempty"`
	SzaskInfo            []*ActorAskLandOwnerInfo `protobuf:"bytes,10,rep,name=szaskInfo" json:"szaskInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GAME_SUB_USER_RELOGIN_SC_MSG) Reset()         { *m = GAME_SUB_USER_RELOGIN_SC_MSG{} }
func (m *GAME_SUB_USER_RELOGIN_SC_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_USER_RELOGIN_SC_MSG) ProtoMessage()    {}
func (*GAME_SUB_USER_RELOGIN_SC_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{11}
}

func (m *GAME_SUB_USER_RELOGIN_SC_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_USER_RELOGIN_SC_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_USER_RELOGIN_SC_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_USER_RELOGIN_SC_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_USER_RELOGIN_SC_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_USER_RELOGIN_SC_MSG.Merge(m, src)
}
func (m *GAME_SUB_USER_RELOGIN_SC_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_USER_RELOGIN_SC_MSG.Size(m)
}
func (m *GAME_SUB_USER_RELOGIN_SC_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_USER_RELOGIN_SC_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_USER_RELOGIN_SC_MSG proto.InternalMessageInfo

func (m *GAME_SUB_USER_RELOGIN_SC_MSG) GetITableState() int32 {
	if m != nil && m.ITableState != nil {
		return *m.ITableState
	}
	return 0
}

func (m *GAME_SUB_USER_RELOGIN_SC_MSG) GetSzHandCardList() []int32 {
	if m != nil {
		return m.SzHandCardList
	}
	return nil
}

func (m *GAME_SUB_USER_RELOGIN_SC_MSG) GetSzForwordCardInfo() []*ForwardCardInfo {
	if m != nil {
		return m.SzForwordCardInfo
	}
	return nil
}

func (m *GAME_SUB_USER_RELOGIN_SC_MSG) GetSzLandOwnerCardList() []int32 {
	if m != nil {
		return m.SzLandOwnerCardList
	}
	return nil
}

func (m *GAME_SUB_USER_RELOGIN_SC_MSG) GetILaiZiCard() int32 {
	if m != nil && m.ILaiZiCard != nil {
		return *m.ILaiZiCard
	}
	return 0
}

func (m *GAME_SUB_USER_RELOGIN_SC_MSG) GetBIsTuoGuan() bool {
	if m != nil && m.BIsTuoGuan != nil {
		return *m.BIsTuoGuan
	}
	return false
}

func (m *GAME_SUB_USER_RELOGIN_SC_MSG) GetBSelfMingPai() bool {
	if m != nil && m.BSelfMingPai != nil {
		return *m.BSelfMingPai
	}
	return false
}

func (m *GAME_SUB_USER_RELOGIN_SC_MSG) GetSzMinPaiInfoList() []*MinPaiInfo {
	if m != nil {
		return m.SzMinPaiInfoList
	}
	return nil
}

func (m *GAME_SUB_USER_RELOGIN_SC_MSG) GetICurBei() int32 {
	if m != nil && m.ICurBei != nil {
		return *m.ICurBei
	}
	return 0
}

func (m *GAME_SUB_USER_RELOGIN_SC_MSG) GetSzaskInfo() []*ActorAskLandOwnerInfo {
	if m != nil {
		return m.SzaskInfo
	}
	return nil
}

type GAME_SUB_SEND_LANDOWNERCARD_SC_MSG struct {
	ILandownerSeatId     *int32   `protobuf:"varint,1,req,name=iLandownerSeatId" json:"iLandownerSeatId,omitempty"`
	SzcardList           []uint32 `protobuf:"varint,2,rep,name=szcardList" json:"szcardList,omitempty"`
	LaiZhiCard           *uint32  `protobuf:"varint,3,opt,name=laiZhiCard" json:"laiZhiCard,omitempty"`
	BRand                *bool    `protobuf:"varint,4,opt,name=bRand" json:"bRand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAME_SUB_SEND_LANDOWNERCARD_SC_MSG) Reset()         { *m = GAME_SUB_SEND_LANDOWNERCARD_SC_MSG{} }
func (m *GAME_SUB_SEND_LANDOWNERCARD_SC_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_SEND_LANDOWNERCARD_SC_MSG) ProtoMessage()    {}
func (*GAME_SUB_SEND_LANDOWNERCARD_SC_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{12}
}

func (m *GAME_SUB_SEND_LANDOWNERCARD_SC_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_SEND_LANDOWNERCARD_SC_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_SEND_LANDOWNERCARD_SC_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_SEND_LANDOWNERCARD_SC_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_SEND_LANDOWNERCARD_SC_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_SEND_LANDOWNERCARD_SC_MSG.Merge(m, src)
}
func (m *GAME_SUB_SEND_LANDOWNERCARD_SC_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_SEND_LANDOWNERCARD_SC_MSG.Size(m)
}
func (m *GAME_SUB_SEND_LANDOWNERCARD_SC_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_SEND_LANDOWNERCARD_SC_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_SEND_LANDOWNERCARD_SC_MSG proto.InternalMessageInfo

func (m *GAME_SUB_SEND_LANDOWNERCARD_SC_MSG) GetILandownerSeatId() int32 {
	if m != nil && m.ILandownerSeatId != nil {
		return *m.ILandownerSeatId
	}
	return 0
}

func (m *GAME_SUB_SEND_LANDOWNERCARD_SC_MSG) GetSzcardList() []uint32 {
	if m != nil {
		return m.SzcardList
	}
	return nil
}

func (m *GAME_SUB_SEND_LANDOWNERCARD_SC_MSG) GetLaiZhiCard() uint32 {
	if m != nil && m.LaiZhiCard != nil {
		return *m.LaiZhiCard
	}
	return 0
}

func (m *GAME_SUB_SEND_LANDOWNERCARD_SC_MSG) GetBRand() bool {
	if m != nil && m.BRand != nil {
		return *m.BRand
	}
	return false
}

type GAME_SUB_SENDCARD_SC_MSG struct {
	SzcardList           []uint32 `protobuf:"varint,1,rep,name=szcardList" json:"szcardList,omitempty"`
	SzMinPaiTimes        []int32  `protobuf:"varint,2,rep,name=szMinPaiTimes" json:"szMinPaiTimes,omitempty"`
	SzDiPai              []uint32 `protobuf:"varint,3,rep,name=szDiPai" json:"szDiPai,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAME_SUB_SENDCARD_SC_MSG) Reset()         { *m = GAME_SUB_SENDCARD_SC_MSG{} }
func (m *GAME_SUB_SENDCARD_SC_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_SENDCARD_SC_MSG) ProtoMessage()    {}
func (*GAME_SUB_SENDCARD_SC_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{13}
}

func (m *GAME_SUB_SENDCARD_SC_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_SENDCARD_SC_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_SENDCARD_SC_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_SENDCARD_SC_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_SENDCARD_SC_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_SENDCARD_SC_MSG.Merge(m, src)
}
func (m *GAME_SUB_SENDCARD_SC_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_SENDCARD_SC_MSG.Size(m)
}
func (m *GAME_SUB_SENDCARD_SC_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_SENDCARD_SC_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_SENDCARD_SC_MSG proto.InternalMessageInfo

func (m *GAME_SUB_SENDCARD_SC_MSG) GetSzcardList() []uint32 {
	if m != nil {
		return m.SzcardList
	}
	return nil
}

func (m *GAME_SUB_SENDCARD_SC_MSG) GetSzMinPaiTimes() []int32 {
	if m != nil {
		return m.SzMinPaiTimes
	}
	return nil
}

func (m *GAME_SUB_SENDCARD_SC_MSG) GetSzDiPai() []uint32 {
	if m != nil {
		return m.SzDiPai
	}
	return nil
}

type GAME_SUB_MINGPAI_CS_MSG struct {
	ITimes               *int32   `protobuf:"varint,1,req,name=iTimes" json:"iTimes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAME_SUB_MINGPAI_CS_MSG) Reset()         { *m = GAME_SUB_MINGPAI_CS_MSG{} }
func (m *GAME_SUB_MINGPAI_CS_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_MINGPAI_CS_MSG) ProtoMessage()    {}
func (*GAME_SUB_MINGPAI_CS_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{14}
}

func (m *GAME_SUB_MINGPAI_CS_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_MINGPAI_CS_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_MINGPAI_CS_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_MINGPAI_CS_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_MINGPAI_CS_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_MINGPAI_CS_MSG.Merge(m, src)
}
func (m *GAME_SUB_MINGPAI_CS_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_MINGPAI_CS_MSG.Size(m)
}
func (m *GAME_SUB_MINGPAI_CS_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_MINGPAI_CS_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_MINGPAI_CS_MSG proto.InternalMessageInfo

func (m *GAME_SUB_MINGPAI_CS_MSG) GetITimes() int32 {
	if m != nil && m.ITimes != nil {
		return *m.ITimes
	}
	return 0
}

//广播明牌玩家的牌
type GAME_SUB_MINGPAI_SC_MSG struct {
	ISeatId              *int32   `protobuf:"varint,1,req,name=iSeatId" json:"iSeatId,omitempty"`
	SzcardList           []uint32 `protobuf:"varint,2,rep,name=szcardList" json:"szcardList,omitempty"`
	ITimes               *int32   `protobuf:"varint,3,req,name=iTimes" json:"iTimes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAME_SUB_MINGPAI_SC_MSG) Reset()         { *m = GAME_SUB_MINGPAI_SC_MSG{} }
func (m *GAME_SUB_MINGPAI_SC_MSG) String() string { return proto.CompactTextString(m) }
func (*GAME_SUB_MINGPAI_SC_MSG) ProtoMessage()    {}
func (*GAME_SUB_MINGPAI_SC_MSG) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{15}
}

func (m *GAME_SUB_MINGPAI_SC_MSG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAME_SUB_MINGPAI_SC_MSG.Unmarshal(m, b)
}
func (m *GAME_SUB_MINGPAI_SC_MSG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAME_SUB_MINGPAI_SC_MSG.Marshal(b, m, deterministic)
}
func (m *GAME_SUB_MINGPAI_SC_MSG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAME_SUB_MINGPAI_SC_MSG.Merge(m, src)
}
func (m *GAME_SUB_MINGPAI_SC_MSG) XXX_Size() int {
	return xxx_messageInfo_GAME_SUB_MINGPAI_SC_MSG.Size(m)
}
func (m *GAME_SUB_MINGPAI_SC_MSG) XXX_DiscardUnknown() {
	xxx_messageInfo_GAME_SUB_MINGPAI_SC_MSG.DiscardUnknown(m)
}

var xxx_messageInfo_GAME_SUB_MINGPAI_SC_MSG proto.InternalMessageInfo

func (m *GAME_SUB_MINGPAI_SC_MSG) GetISeatId() int32 {
	if m != nil && m.ISeatId != nil {
		return *m.ISeatId
	}
	return 0
}

func (m *GAME_SUB_MINGPAI_SC_MSG) GetSzcardList() []uint32 {
	if m != nil {
		return m.SzcardList
	}
	return nil
}

func (m *GAME_SUB_MINGPAI_SC_MSG) GetITimes() int32 {
	if m != nil && m.ITimes != nil {
		return *m.ITimes
	}
	return 0
}

//GAME_SUB_CS_OPERATE = 101; //玩家操作
type CS_UserOperate struct {
	MOperateSeatId       *int32   `protobuf:"varint,1,req,name=mOperateSeatId" json:"mOperateSeatId,omitempty"`
	MOperateMask         *int32   `protobuf:"varint,2,req,name=mOperateMask" json:"mOperateMask,omitempty"`
	SzCardList           []int32  `protobuf:"varint,3,rep,name=szCardList" json:"szCardList,omitempty"`
	ICardType            *int32   `protobuf:"varint,4,opt,name=iCardType" json:"iCardType,omitempty"`
	BAskOrQiangLand      *bool    `protobuf:"varint,5,opt,name=bAskOrQiangLand" json:"bAskOrQiangLand,omitempty"`
	ITagVal              *int32   `protobuf:"varint,6,opt,name=iTagVal" json:"iTagVal,omitempty"`
	SzLaiZiReplace       []int32  `protobuf:"varint,7,rep,name=szLaiZiReplace" json:"szLaiZiReplace,omitempty"`
	IBeiLv               *int32   `protobuf:"varint,8,opt,name=iBeiLv" json:"iBeiLv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_UserOperate) Reset()         { *m = CS_UserOperate{} }
func (m *CS_UserOperate) String() string { return proto.CompactTextString(m) }
func (*CS_UserOperate) ProtoMessage()    {}
func (*CS_UserOperate) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{16}
}

func (m *CS_UserOperate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_UserOperate.Unmarshal(m, b)
}
func (m *CS_UserOperate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_UserOperate.Marshal(b, m, deterministic)
}
func (m *CS_UserOperate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_UserOperate.Merge(m, src)
}
func (m *CS_UserOperate) XXX_Size() int {
	return xxx_messageInfo_CS_UserOperate.Size(m)
}
func (m *CS_UserOperate) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_UserOperate.DiscardUnknown(m)
}

var xxx_messageInfo_CS_UserOperate proto.InternalMessageInfo

func (m *CS_UserOperate) GetMOperateSeatId() int32 {
	if m != nil && m.MOperateSeatId != nil {
		return *m.MOperateSeatId
	}
	return 0
}

func (m *CS_UserOperate) GetMOperateMask() int32 {
	if m != nil && m.MOperateMask != nil {
		return *m.MOperateMask
	}
	return 0
}

func (m *CS_UserOperate) GetSzCardList() []int32 {
	if m != nil {
		return m.SzCardList
	}
	return nil
}

func (m *CS_UserOperate) GetICardType() int32 {
	if m != nil && m.ICardType != nil {
		return *m.ICardType
	}
	return 0
}

func (m *CS_UserOperate) GetBAskOrQiangLand() bool {
	if m != nil && m.BAskOrQiangLand != nil {
		return *m.BAskOrQiangLand
	}
	return false
}

func (m *CS_UserOperate) GetITagVal() int32 {
	if m != nil && m.ITagVal != nil {
		return *m.ITagVal
	}
	return 0
}

func (m *CS_UserOperate) GetSzLaiZiReplace() []int32 {
	if m != nil {
		return m.SzLaiZiReplace
	}
	return nil
}

func (m *CS_UserOperate) GetIBeiLv() int32 {
	if m != nil && m.IBeiLv != nil {
		return *m.IBeiLv
	}
	return 0
}

//GAME_SUB_SC_OPERATE_RESULT_NOTIFY = 102; //操作通知
type SC_OperateResultNotify struct {
	MOperateMask         *int32   `protobuf:"varint,1,req,name=mOperateMask" json:"mOperateMask,omitempty"`
	MOperateSeatId       *uint32  `protobuf:"varint,2,req,name=mOperateSeatId" json:"mOperateSeatId,omitempty"`
	SzCardList           []int32  `protobuf:"varint,3,rep,name=szCardList" json:"szCardList,omitempty"`
	ICardType            *int32   `protobuf:"varint,4,opt,name=iCardType" json:"iCardType,omitempty"`
	BAskOrQiangLand      *bool    `protobuf:"varint,5,opt,name=bAskOrQiangLand" json:"bAskOrQiangLand,omitempty"`
	IBeiCount            *int32   `protobuf:"varint,6,opt,name=iBeiCount" json:"iBeiCount,omitempty"`
	ITagVal              *int32   `protobuf:"varint,7,opt,name=iTagVal" json:"iTagVal,omitempty"`
	SzLaiZiReplace       []int32  `protobuf:"varint,8,rep,name=szLaiZiReplace" json:"szLaiZiReplace,omitempty"`
	IBeiLv               *int32   `protobuf:"varint,9,opt,name=iBeiLv" json:"iBeiLv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_OperateResultNotify) Reset()         { *m = SC_OperateResultNotify{} }
func (m *SC_OperateResultNotify) String() string { return proto.CompactTextString(m) }
func (*SC_OperateResultNotify) ProtoMessage()    {}
func (*SC_OperateResultNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{17}
}

func (m *SC_OperateResultNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_OperateResultNotify.Unmarshal(m, b)
}
func (m *SC_OperateResultNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_OperateResultNotify.Marshal(b, m, deterministic)
}
func (m *SC_OperateResultNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_OperateResultNotify.Merge(m, src)
}
func (m *SC_OperateResultNotify) XXX_Size() int {
	return xxx_messageInfo_SC_OperateResultNotify.Size(m)
}
func (m *SC_OperateResultNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_OperateResultNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_OperateResultNotify proto.InternalMessageInfo

func (m *SC_OperateResultNotify) GetMOperateMask() int32 {
	if m != nil && m.MOperateMask != nil {
		return *m.MOperateMask
	}
	return 0
}

func (m *SC_OperateResultNotify) GetMOperateSeatId() uint32 {
	if m != nil && m.MOperateSeatId != nil {
		return *m.MOperateSeatId
	}
	return 0
}

func (m *SC_OperateResultNotify) GetSzCardList() []int32 {
	if m != nil {
		return m.SzCardList
	}
	return nil
}

func (m *SC_OperateResultNotify) GetICardType() int32 {
	if m != nil && m.ICardType != nil {
		return *m.ICardType
	}
	return 0
}

func (m *SC_OperateResultNotify) GetBAskOrQiangLand() bool {
	if m != nil && m.BAskOrQiangLand != nil {
		return *m.BAskOrQiangLand
	}
	return false
}

func (m *SC_OperateResultNotify) GetIBeiCount() int32 {
	if m != nil && m.IBeiCount != nil {
		return *m.IBeiCount
	}
	return 0
}

func (m *SC_OperateResultNotify) GetITagVal() int32 {
	if m != nil && m.ITagVal != nil {
		return *m.ITagVal
	}
	return 0
}

func (m *SC_OperateResultNotify) GetSzLaiZiReplace() []int32 {
	if m != nil {
		return m.SzLaiZiReplace
	}
	return nil
}

func (m *SC_OperateResultNotify) GetIBeiLv() int32 {
	if m != nil && m.IBeiLv != nil {
		return *m.IBeiLv
	}
	return 0
}

type DisCardNotice struct {
	SzCardList           []int32  `protobuf:"varint,1,rep,name=szCardList" json:"szCardList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisCardNotice) Reset()         { *m = DisCardNotice{} }
func (m *DisCardNotice) String() string { return proto.CompactTextString(m) }
func (*DisCardNotice) ProtoMessage()    {}
func (*DisCardNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{18}
}

func (m *DisCardNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisCardNotice.Unmarshal(m, b)
}
func (m *DisCardNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisCardNotice.Marshal(b, m, deterministic)
}
func (m *DisCardNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisCardNotice.Merge(m, src)
}
func (m *DisCardNotice) XXX_Size() int {
	return xxx_messageInfo_DisCardNotice.Size(m)
}
func (m *DisCardNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_DisCardNotice.DiscardUnknown(m)
}

var xxx_messageInfo_DisCardNotice proto.InternalMessageInfo

func (m *DisCardNotice) GetSzCardList() []int32 {
	if m != nil {
		return m.SzCardList
	}
	return nil
}

//GAME_SUB_SC_OPERATE_CODE_NOTIFY = 103;   //操作码通知
type SC_OperateCodeNotify struct {
	MOperateMask         []int32          `protobuf:"varint,1,rep,name=mOperateMask" json:"mOperateMask,omitempty"`
	MWaitSeatId          *uint32          `protobuf:"varint,2,req,name=mWaitSeatId" json:"mWaitSeatId,omitempty"`
	MOperateTimeOut      *uint32          `protobuf:"varint,3,req,name=mOperateTimeOut" json:"mOperateTimeOut,omitempty"`
	SzNoticeList         []*DisCardNotice `protobuf:"bytes,4,rep,name=szNoticeList" json:"szNoticeList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SC_OperateCodeNotify) Reset()         { *m = SC_OperateCodeNotify{} }
func (m *SC_OperateCodeNotify) String() string { return proto.CompactTextString(m) }
func (*SC_OperateCodeNotify) ProtoMessage()    {}
func (*SC_OperateCodeNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{19}
}

func (m *SC_OperateCodeNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_OperateCodeNotify.Unmarshal(m, b)
}
func (m *SC_OperateCodeNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_OperateCodeNotify.Marshal(b, m, deterministic)
}
func (m *SC_OperateCodeNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_OperateCodeNotify.Merge(m, src)
}
func (m *SC_OperateCodeNotify) XXX_Size() int {
	return xxx_messageInfo_SC_OperateCodeNotify.Size(m)
}
func (m *SC_OperateCodeNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_OperateCodeNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_OperateCodeNotify proto.InternalMessageInfo

func (m *SC_OperateCodeNotify) GetMOperateMask() []int32 {
	if m != nil {
		return m.MOperateMask
	}
	return nil
}

func (m *SC_OperateCodeNotify) GetMWaitSeatId() uint32 {
	if m != nil && m.MWaitSeatId != nil {
		return *m.MWaitSeatId
	}
	return 0
}

func (m *SC_OperateCodeNotify) GetMOperateTimeOut() uint32 {
	if m != nil && m.MOperateTimeOut != nil {
		return *m.MOperateTimeOut
	}
	return 0
}

func (m *SC_OperateCodeNotify) GetSzNoticeList() []*DisCardNotice {
	if m != nil {
		return m.SzNoticeList
	}
	return nil
}

//GAME_SUB_CS_USER_DISSOLVE_APPLY = 1;//申请解散桌子
type CS_UserDissolveApply struct {
	MApplySeatId         *uint32  `protobuf:"varint,1,req,name=mApplySeatId" json:"mApplySeatId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_UserDissolveApply) Reset()         { *m = CS_UserDissolveApply{} }
func (m *CS_UserDissolveApply) String() string { return proto.CompactTextString(m) }
func (*CS_UserDissolveApply) ProtoMessage()    {}
func (*CS_UserDissolveApply) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{20}
}

func (m *CS_UserDissolveApply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_UserDissolveApply.Unmarshal(m, b)
}
func (m *CS_UserDissolveApply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_UserDissolveApply.Marshal(b, m, deterministic)
}
func (m *CS_UserDissolveApply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_UserDissolveApply.Merge(m, src)
}
func (m *CS_UserDissolveApply) XXX_Size() int {
	return xxx_messageInfo_CS_UserDissolveApply.Size(m)
}
func (m *CS_UserDissolveApply) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_UserDissolveApply.DiscardUnknown(m)
}

var xxx_messageInfo_CS_UserDissolveApply proto.InternalMessageInfo

func (m *CS_UserDissolveApply) GetMApplySeatId() uint32 {
	if m != nil && m.MApplySeatId != nil {
		return *m.MApplySeatId
	}
	return 0
}

//GAME_SUB_CS_USER_ANSWER_DISSOLVE_APPLY = 2;//应答解散申请
type CS_UserAnswerDissolveApply struct {
	MAnswerApplySeatId   *uint32  `protobuf:"varint,1,req,name=mAnswerApplySeatId" json:"mAnswerApplySeatId,omitempty"`
	MAgree               *bool    `protobuf:"varint,2,req,name=mAgree" json:"mAgree,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_UserAnswerDissolveApply) Reset()         { *m = CS_UserAnswerDissolveApply{} }
func (m *CS_UserAnswerDissolveApply) String() string { return proto.CompactTextString(m) }
func (*CS_UserAnswerDissolveApply) ProtoMessage()    {}
func (*CS_UserAnswerDissolveApply) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{21}
}

func (m *CS_UserAnswerDissolveApply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_UserAnswerDissolveApply.Unmarshal(m, b)
}
func (m *CS_UserAnswerDissolveApply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_UserAnswerDissolveApply.Marshal(b, m, deterministic)
}
func (m *CS_UserAnswerDissolveApply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_UserAnswerDissolveApply.Merge(m, src)
}
func (m *CS_UserAnswerDissolveApply) XXX_Size() int {
	return xxx_messageInfo_CS_UserAnswerDissolveApply.Size(m)
}
func (m *CS_UserAnswerDissolveApply) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_UserAnswerDissolveApply.DiscardUnknown(m)
}

var xxx_messageInfo_CS_UserAnswerDissolveApply proto.InternalMessageInfo

func (m *CS_UserAnswerDissolveApply) GetMAnswerApplySeatId() uint32 {
	if m != nil && m.MAnswerApplySeatId != nil {
		return *m.MAnswerApplySeatId
	}
	return 0
}

func (m *CS_UserAnswerDissolveApply) GetMAgree() bool {
	if m != nil && m.MAgree != nil {
		return *m.MAgree
	}
	return false
}

//GAME_SUB_SC_USER_DISSOLVE_APPLY_NOTIFY = 3;//申请解散通知
type SC_UserDissolveApplyNotify struct {
	MApplySeatId          *uint32             `protobuf:"varint,1,req,name=mApplySeatId" json:"mApplySeatId,omitempty"`
	MAgreeApplySeatIds    []uint32            `protobuf:"varint,2,rep,name=mAgreeApplySeatIds" json:"mAgreeApplySeatIds,omitempty"`
	MDisagreeApplySeatIds []uint32            `protobuf:"varint,3,rep,name=mDisagreeApplySeatIds" json:"mDisagreeApplySeatIds,omitempty"`
	MFinalDecision        *TableFinalDecision `protobuf:"varint,4,req,name=mFinalDecision,enum=DouDiZhu.TableFinalDecision" json:"mFinalDecision,omitempty"`
	MApplyTimeOut         *uint32             `protobuf:"varint,5,req,name=mApplyTimeOut" json:"mApplyTimeOut,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}            `json:"-"`
	XXX_unrecognized      []byte              `json:"-"`
	XXX_sizecache         int32               `json:"-"`
}

func (m *SC_UserDissolveApplyNotify) Reset()         { *m = SC_UserDissolveApplyNotify{} }
func (m *SC_UserDissolveApplyNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserDissolveApplyNotify) ProtoMessage()    {}
func (*SC_UserDissolveApplyNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{22}
}

func (m *SC_UserDissolveApplyNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserDissolveApplyNotify.Unmarshal(m, b)
}
func (m *SC_UserDissolveApplyNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserDissolveApplyNotify.Marshal(b, m, deterministic)
}
func (m *SC_UserDissolveApplyNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserDissolveApplyNotify.Merge(m, src)
}
func (m *SC_UserDissolveApplyNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserDissolveApplyNotify.Size(m)
}
func (m *SC_UserDissolveApplyNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserDissolveApplyNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserDissolveApplyNotify proto.InternalMessageInfo

func (m *SC_UserDissolveApplyNotify) GetMApplySeatId() uint32 {
	if m != nil && m.MApplySeatId != nil {
		return *m.MApplySeatId
	}
	return 0
}

func (m *SC_UserDissolveApplyNotify) GetMAgreeApplySeatIds() []uint32 {
	if m != nil {
		return m.MAgreeApplySeatIds
	}
	return nil
}

func (m *SC_UserDissolveApplyNotify) GetMDisagreeApplySeatIds() []uint32 {
	if m != nil {
		return m.MDisagreeApplySeatIds
	}
	return nil
}

func (m *SC_UserDissolveApplyNotify) GetMFinalDecision() TableFinalDecision {
	if m != nil && m.MFinalDecision != nil {
		return *m.MFinalDecision
	}
	return TableFinalDecision_Table_Decision_None
}

func (m *SC_UserDissolveApplyNotify) GetMApplyTimeOut() uint32 {
	if m != nil && m.MApplyTimeOut != nil {
		return *m.MApplyTimeOut
	}
	return 0
}

//GAME_SUB_CS_USER_TABLE_CHAT = 4;//聊天
type CS_UserTableChatRqst struct {
	MOperateSeatId       *uint32  `protobuf:"varint,1,req,name=mOperateSeatId" json:"mOperateSeatId,omitempty"`
	MTextContent         *string  `protobuf:"bytes,2,opt,name=mTextContent" json:"mTextContent,omitempty"`
	MBinaryContent       []byte   `protobuf:"bytes,3,opt,name=mBinaryContent" json:"mBinaryContent,omitempty"`
	MContentTime         *uint32  `protobuf:"varint,4,opt,name=mContentTime" json:"mContentTime,omitempty"`
	MImageId             *uint32  `protobuf:"varint,5,opt,name=mImageId" json:"mImageId,omitempty"`
	MMediaId             *uint32  `protobuf:"varint,6,opt,name=mMediaId" json:"mMediaId,omitempty"`
	MTargetSeatId        *uint32  `protobuf:"varint,7,opt,name=mTargetSeatId" json:"mTargetSeatId,omitempty"`
	MAnimationId         *uint32  `protobuf:"varint,8,opt,name=mAnimationId" json:"mAnimationId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_UserTableChatRqst) Reset()         { *m = CS_UserTableChatRqst{} }
func (m *CS_UserTableChatRqst) String() string { return proto.CompactTextString(m) }
func (*CS_UserTableChatRqst) ProtoMessage()    {}
func (*CS_UserTableChatRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{23}
}

func (m *CS_UserTableChatRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_UserTableChatRqst.Unmarshal(m, b)
}
func (m *CS_UserTableChatRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_UserTableChatRqst.Marshal(b, m, deterministic)
}
func (m *CS_UserTableChatRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_UserTableChatRqst.Merge(m, src)
}
func (m *CS_UserTableChatRqst) XXX_Size() int {
	return xxx_messageInfo_CS_UserTableChatRqst.Size(m)
}
func (m *CS_UserTableChatRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_UserTableChatRqst.DiscardUnknown(m)
}

var xxx_messageInfo_CS_UserTableChatRqst proto.InternalMessageInfo

func (m *CS_UserTableChatRqst) GetMOperateSeatId() uint32 {
	if m != nil && m.MOperateSeatId != nil {
		return *m.MOperateSeatId
	}
	return 0
}

func (m *CS_UserTableChatRqst) GetMTextContent() string {
	if m != nil && m.MTextContent != nil {
		return *m.MTextContent
	}
	return ""
}

func (m *CS_UserTableChatRqst) GetMBinaryContent() []byte {
	if m != nil {
		return m.MBinaryContent
	}
	return nil
}

func (m *CS_UserTableChatRqst) GetMContentTime() uint32 {
	if m != nil && m.MContentTime != nil {
		return *m.MContentTime
	}
	return 0
}

func (m *CS_UserTableChatRqst) GetMImageId() uint32 {
	if m != nil && m.MImageId != nil {
		return *m.MImageId
	}
	return 0
}

func (m *CS_UserTableChatRqst) GetMMediaId() uint32 {
	if m != nil && m.MMediaId != nil {
		return *m.MMediaId
	}
	return 0
}

func (m *CS_UserTableChatRqst) GetMTargetSeatId() uint32 {
	if m != nil && m.MTargetSeatId != nil {
		return *m.MTargetSeatId
	}
	return 0
}

func (m *CS_UserTableChatRqst) GetMAnimationId() uint32 {
	if m != nil && m.MAnimationId != nil {
		return *m.MAnimationId
	}
	return 0
}

//GAME_SUB_SC_USER_TABLE_CHAT_NOTIFY = 5;//聊天信息通知
type SC_UserTableChatNotify struct {
	MOperateSeatId       *uint32  `protobuf:"varint,1,req,name=mOperateSeatId" json:"mOperateSeatId,omitempty"`
	MTextContent         *string  `protobuf:"bytes,2,opt,name=mTextContent" json:"mTextContent,omitempty"`
	MBinaryContent       []byte   `protobuf:"bytes,3,opt,name=mBinaryContent" json:"mBinaryContent,omitempty"`
	MContentTime         *uint32  `protobuf:"varint,4,opt,name=mContentTime" json:"mContentTime,omitempty"`
	MImageId             *uint32  `protobuf:"varint,5,opt,name=mImageId" json:"mImageId,omitempty"`
	MMediaId             *uint32  `protobuf:"varint,6,opt,name=mMediaId" json:"mMediaId,omitempty"`
	MTargetSeatId        *uint32  `protobuf:"varint,7,opt,name=mTargetSeatId" json:"mTargetSeatId,omitempty"`
	MAnimationId         *uint32  `protobuf:"varint,8,opt,name=mAnimationId" json:"mAnimationId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_UserTableChatNotify) Reset()         { *m = SC_UserTableChatNotify{} }
func (m *SC_UserTableChatNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserTableChatNotify) ProtoMessage()    {}
func (*SC_UserTableChatNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{24}
}

func (m *SC_UserTableChatNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserTableChatNotify.Unmarshal(m, b)
}
func (m *SC_UserTableChatNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserTableChatNotify.Marshal(b, m, deterministic)
}
func (m *SC_UserTableChatNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserTableChatNotify.Merge(m, src)
}
func (m *SC_UserTableChatNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserTableChatNotify.Size(m)
}
func (m *SC_UserTableChatNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserTableChatNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserTableChatNotify proto.InternalMessageInfo

func (m *SC_UserTableChatNotify) GetMOperateSeatId() uint32 {
	if m != nil && m.MOperateSeatId != nil {
		return *m.MOperateSeatId
	}
	return 0
}

func (m *SC_UserTableChatNotify) GetMTextContent() string {
	if m != nil && m.MTextContent != nil {
		return *m.MTextContent
	}
	return ""
}

func (m *SC_UserTableChatNotify) GetMBinaryContent() []byte {
	if m != nil {
		return m.MBinaryContent
	}
	return nil
}

func (m *SC_UserTableChatNotify) GetMContentTime() uint32 {
	if m != nil && m.MContentTime != nil {
		return *m.MContentTime
	}
	return 0
}

func (m *SC_UserTableChatNotify) GetMImageId() uint32 {
	if m != nil && m.MImageId != nil {
		return *m.MImageId
	}
	return 0
}

func (m *SC_UserTableChatNotify) GetMMediaId() uint32 {
	if m != nil && m.MMediaId != nil {
		return *m.MMediaId
	}
	return 0
}

func (m *SC_UserTableChatNotify) GetMTargetSeatId() uint32 {
	if m != nil && m.MTargetSeatId != nil {
		return *m.MTargetSeatId
	}
	return 0
}

func (m *SC_UserTableChatNotify) GetMAnimationId() uint32 {
	if m != nil && m.MAnimationId != nil {
		return *m.MAnimationId
	}
	return 0
}

//GAME_SUB_CS_USER_READY_GAME = 6; //准备游戏
type CS_UserReadyGameRqst struct {
	MReadySeatId         *uint32  `protobuf:"varint,1,req,name=mReadySeatId" json:"mReadySeatId,omitempty"`
	MCards               []uint32 `protobuf:"varint,2,rep,name=mCards" json:"mCards,omitempty"`
	ILaiZiCard           *int32   `protobuf:"varint,3,opt,name=iLaiZiCard" json:"iLaiZiCard,omitempty"`
	BIsMingPai           *bool    `protobuf:"varint,4,opt,name=bIsMingPai" json:"bIsMingPai,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_UserReadyGameRqst) Reset()         { *m = CS_UserReadyGameRqst{} }
func (m *CS_UserReadyGameRqst) String() string { return proto.CompactTextString(m) }
func (*CS_UserReadyGameRqst) ProtoMessage()    {}
func (*CS_UserReadyGameRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{25}
}

func (m *CS_UserReadyGameRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_UserReadyGameRqst.Unmarshal(m, b)
}
func (m *CS_UserReadyGameRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_UserReadyGameRqst.Marshal(b, m, deterministic)
}
func (m *CS_UserReadyGameRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_UserReadyGameRqst.Merge(m, src)
}
func (m *CS_UserReadyGameRqst) XXX_Size() int {
	return xxx_messageInfo_CS_UserReadyGameRqst.Size(m)
}
func (m *CS_UserReadyGameRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_UserReadyGameRqst.DiscardUnknown(m)
}

var xxx_messageInfo_CS_UserReadyGameRqst proto.InternalMessageInfo

func (m *CS_UserReadyGameRqst) GetMReadySeatId() uint32 {
	if m != nil && m.MReadySeatId != nil {
		return *m.MReadySeatId
	}
	return 0
}

func (m *CS_UserReadyGameRqst) GetMCards() []uint32 {
	if m != nil {
		return m.MCards
	}
	return nil
}

func (m *CS_UserReadyGameRqst) GetILaiZiCard() int32 {
	if m != nil && m.ILaiZiCard != nil {
		return *m.ILaiZiCard
	}
	return 0
}

func (m *CS_UserReadyGameRqst) GetBIsMingPai() bool {
	if m != nil && m.BIsMingPai != nil {
		return *m.BIsMingPai
	}
	return false
}

//GAME_SUB_SC_USER_READY_GAME_NOTIFY = 7; //准备游戏通知
type SC_UserReadyGameNotify struct {
	MReadySeatId         *uint32  `protobuf:"varint,1,req,name=mReadySeatId" json:"mReadySeatId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_UserReadyGameNotify) Reset()         { *m = SC_UserReadyGameNotify{} }
func (m *SC_UserReadyGameNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserReadyGameNotify) ProtoMessage()    {}
func (*SC_UserReadyGameNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{26}
}

func (m *SC_UserReadyGameNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserReadyGameNotify.Unmarshal(m, b)
}
func (m *SC_UserReadyGameNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserReadyGameNotify.Marshal(b, m, deterministic)
}
func (m *SC_UserReadyGameNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserReadyGameNotify.Merge(m, src)
}
func (m *SC_UserReadyGameNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserReadyGameNotify.Size(m)
}
func (m *SC_UserReadyGameNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserReadyGameNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserReadyGameNotify proto.InternalMessageInfo

func (m *SC_UserReadyGameNotify) GetMReadySeatId() uint32 {
	if m != nil && m.MReadySeatId != nil {
		return *m.MReadySeatId
	}
	return 0
}

//GAME_SUB_SC_USER_INFO_CHANGE_NOTIFY = 8; //通知玩家基础信息改变
type SC_UseBaseInfoNotify struct {
	MSeatId              *uint32         `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MUserState           *UserState      `protobuf:"varint,2,req,name=mUserState,enum=DouDiZhu.UserState" json:"mUserState,omitempty"`
	MOffLineFlag         *bool           `protobuf:"varint,3,req,name=mOffLineFlag" json:"mOffLineFlag,omitempty"`
	MBaseInfo            *PlayerBaseInfo `protobuf:"bytes,4,req,name=mBaseInfo" json:"mBaseInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SC_UseBaseInfoNotify) Reset()         { *m = SC_UseBaseInfoNotify{} }
func (m *SC_UseBaseInfoNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UseBaseInfoNotify) ProtoMessage()    {}
func (*SC_UseBaseInfoNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{27}
}

func (m *SC_UseBaseInfoNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UseBaseInfoNotify.Unmarshal(m, b)
}
func (m *SC_UseBaseInfoNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UseBaseInfoNotify.Marshal(b, m, deterministic)
}
func (m *SC_UseBaseInfoNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UseBaseInfoNotify.Merge(m, src)
}
func (m *SC_UseBaseInfoNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UseBaseInfoNotify.Size(m)
}
func (m *SC_UseBaseInfoNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UseBaseInfoNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UseBaseInfoNotify proto.InternalMessageInfo

func (m *SC_UseBaseInfoNotify) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *SC_UseBaseInfoNotify) GetMUserState() UserState {
	if m != nil && m.MUserState != nil {
		return *m.MUserState
	}
	return UserState_Mj_User_State_Init
}

func (m *SC_UseBaseInfoNotify) GetMOffLineFlag() bool {
	if m != nil && m.MOffLineFlag != nil {
		return *m.MOffLineFlag
	}
	return false
}

func (m *SC_UseBaseInfoNotify) GetMBaseInfo() *PlayerBaseInfo {
	if m != nil {
		return m.MBaseInfo
	}
	return nil
}

type PlayerBaseInfo struct {
	MUserID              *int32   `protobuf:"varint,1,req,name=mUserID" json:"mUserID,omitempty"`
	MAccid               *int32   `protobuf:"varint,2,req,name=mAccid" json:"mAccid,omitempty"`
	MNickName            *string  `protobuf:"bytes,3,req,name=mNickName" json:"mNickName,omitempty"`
	MFaceID              *string  `protobuf:"bytes,4,req,name=mFaceID" json:"mFaceID,omitempty"`
	MSex                 *int32   `protobuf:"varint,5,req,name=mSex" json:"mSex,omitempty"`
	MUserGold            *int64   `protobuf:"varint,6,req,name=mUserGold" json:"mUserGold,omitempty"`
	MUserDiamond         *int32   `protobuf:"varint,7,req,name=mUserDiamond" json:"mUserDiamond,omitempty"`
	MDescription         *string  `protobuf:"bytes,8,req,name=mDescription,def=" json:"mDescription,omitempty"`
	MVipLevel            *int32   `protobuf:"varint,9,opt,name=mVipLevel" json:"mVipLevel,omitempty"`
	MUserPoint           *int64   `protobuf:"varint,10,req,name=mUserPoint" json:"mUserPoint,omitempty"`
	MUserIp              *string  `protobuf:"bytes,11,req,name=mUserIp" json:"mUserIp,omitempty"`
	MUserLng             *int64   `protobuf:"varint,12,req,name=mUserLng" json:"mUserLng,omitempty"`
	MUserLat             *int64   `protobuf:"varint,13,req,name=mUserLat" json:"mUserLat,omitempty"`
	MVipType             *int32   `protobuf:"varint,14,opt,name=mVipType" json:"mVipType,omitempty"`
	MGameLv              *int32   `protobuf:"varint,15,opt,name=mGameLv" json:"mGameLv,omitempty"`
	MTotalGameCnt        *int32   `protobuf:"varint,16,opt,name=mTotalGameCnt" json:"mTotalGameCnt,omitempty"`
	MGameWinRate         *int32   `protobuf:"varint,17,opt,name=mGameWinRate" json:"mGameWinRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerBaseInfo) Reset()         { *m = PlayerBaseInfo{} }
func (m *PlayerBaseInfo) String() string { return proto.CompactTextString(m) }
func (*PlayerBaseInfo) ProtoMessage()    {}
func (*PlayerBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{28}
}

func (m *PlayerBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerBaseInfo.Unmarshal(m, b)
}
func (m *PlayerBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerBaseInfo.Marshal(b, m, deterministic)
}
func (m *PlayerBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerBaseInfo.Merge(m, src)
}
func (m *PlayerBaseInfo) XXX_Size() int {
	return xxx_messageInfo_PlayerBaseInfo.Size(m)
}
func (m *PlayerBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerBaseInfo proto.InternalMessageInfo

func (m *PlayerBaseInfo) GetMUserID() int32 {
	if m != nil && m.MUserID != nil {
		return *m.MUserID
	}
	return 0
}

func (m *PlayerBaseInfo) GetMAccid() int32 {
	if m != nil && m.MAccid != nil {
		return *m.MAccid
	}
	return 0
}

func (m *PlayerBaseInfo) GetMNickName() string {
	if m != nil && m.MNickName != nil {
		return *m.MNickName
	}
	return ""
}

func (m *PlayerBaseInfo) GetMFaceID() string {
	if m != nil && m.MFaceID != nil {
		return *m.MFaceID
	}
	return ""
}

func (m *PlayerBaseInfo) GetMSex() int32 {
	if m != nil && m.MSex != nil {
		return *m.MSex
	}
	return 0
}

func (m *PlayerBaseInfo) GetMUserGold() int64 {
	if m != nil && m.MUserGold != nil {
		return *m.MUserGold
	}
	return 0
}

func (m *PlayerBaseInfo) GetMUserDiamond() int32 {
	if m != nil && m.MUserDiamond != nil {
		return *m.MUserDiamond
	}
	return 0
}

func (m *PlayerBaseInfo) GetMDescription() string {
	if m != nil && m.MDescription != nil {
		return *m.MDescription
	}
	return ""
}

func (m *PlayerBaseInfo) GetMVipLevel() int32 {
	if m != nil && m.MVipLevel != nil {
		return *m.MVipLevel
	}
	return 0
}

func (m *PlayerBaseInfo) GetMUserPoint() int64 {
	if m != nil && m.MUserPoint != nil {
		return *m.MUserPoint
	}
	return 0
}

func (m *PlayerBaseInfo) GetMUserIp() string {
	if m != nil && m.MUserIp != nil {
		return *m.MUserIp
	}
	return ""
}

func (m *PlayerBaseInfo) GetMUserLng() int64 {
	if m != nil && m.MUserLng != nil {
		return *m.MUserLng
	}
	return 0
}

func (m *PlayerBaseInfo) GetMUserLat() int64 {
	if m != nil && m.MUserLat != nil {
		return *m.MUserLat
	}
	return 0
}

func (m *PlayerBaseInfo) GetMVipType() int32 {
	if m != nil && m.MVipType != nil {
		return *m.MVipType
	}
	return 0
}

func (m *PlayerBaseInfo) GetMGameLv() int32 {
	if m != nil && m.MGameLv != nil {
		return *m.MGameLv
	}
	return 0
}

func (m *PlayerBaseInfo) GetMTotalGameCnt() int32 {
	if m != nil && m.MTotalGameCnt != nil {
		return *m.MTotalGameCnt
	}
	return 0
}

func (m *PlayerBaseInfo) GetMGameWinRate() int32 {
	if m != nil && m.MGameWinRate != nil {
		return *m.MGameWinRate
	}
	return 0
}

type SeatInfo struct {
	MSeatId              *uint32         `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MUserState           *int32          `protobuf:"varint,2,req,name=mUserState" json:"mUserState,omitempty"`
	MOffLineFlag         *bool           `protobuf:"varint,3,req,name=mOffLineFlag" json:"mOffLineFlag,omitempty"`
	MBaseInfo            *PlayerBaseInfo `protobuf:"bytes,4,opt,name=mBaseInfo" json:"mBaseInfo,omitempty"`
	IRemaindCardCount    *int32          `protobuf:"varint,5,req,name=iRemaindCardCount" json:"iRemaindCardCount,omitempty"`
	ITimes               *int32          `protobuf:"varint,6,req,name=iTimes" json:"iTimes,omitempty"`
	IHaveTotalWin        *int32          `protobuf:"varint,7,req,name=iHaveTotalWin" json:"iHaveTotalWin,omitempty"`
	IAddBeiLv            *int32          `protobuf:"varint,8,req,name=iAddBeiLv" json:"iAddBeiLv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SeatInfo) Reset()         { *m = SeatInfo{} }
func (m *SeatInfo) String() string { return proto.CompactTextString(m) }
func (*SeatInfo) ProtoMessage()    {}
func (*SeatInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{29}
}

func (m *SeatInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeatInfo.Unmarshal(m, b)
}
func (m *SeatInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeatInfo.Marshal(b, m, deterministic)
}
func (m *SeatInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeatInfo.Merge(m, src)
}
func (m *SeatInfo) XXX_Size() int {
	return xxx_messageInfo_SeatInfo.Size(m)
}
func (m *SeatInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SeatInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SeatInfo proto.InternalMessageInfo

func (m *SeatInfo) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *SeatInfo) GetMUserState() int32 {
	if m != nil && m.MUserState != nil {
		return *m.MUserState
	}
	return 0
}

func (m *SeatInfo) GetMOffLineFlag() bool {
	if m != nil && m.MOffLineFlag != nil {
		return *m.MOffLineFlag
	}
	return false
}

func (m *SeatInfo) GetMBaseInfo() *PlayerBaseInfo {
	if m != nil {
		return m.MBaseInfo
	}
	return nil
}

func (m *SeatInfo) GetIRemaindCardCount() int32 {
	if m != nil && m.IRemaindCardCount != nil {
		return *m.IRemaindCardCount
	}
	return 0
}

func (m *SeatInfo) GetITimes() int32 {
	if m != nil && m.ITimes != nil {
		return *m.ITimes
	}
	return 0
}

func (m *SeatInfo) GetIHaveTotalWin() int32 {
	if m != nil && m.IHaveTotalWin != nil {
		return *m.IHaveTotalWin
	}
	return 0
}

func (m *SeatInfo) GetIAddBeiLv() int32 {
	if m != nil && m.IAddBeiLv != nil {
		return *m.IAddBeiLv
	}
	return 0
}

type StTableAttribute struct {
	GameCurrencyType       *int32   `protobuf:"varint,1,req,name=GameCurrencyType" json:"GameCurrencyType,omitempty"`
	PayRoomRateType        *int32   `protobuf:"varint,2,req,name=PayRoomRateType" json:"PayRoomRateType,omitempty"`
	PlanGameCount          *int32   `protobuf:"varint,3,req,name=PlanGameCount" json:"PlanGameCount,omitempty"`
	DiZhu                  *int64   `protobuf:"varint,4,req,name=DiZhu" json:"DiZhu,omitempty"`
	EnterScore             *int64   `protobuf:"varint,5,req,name=EnterScore" json:"EnterScore,omitempty"`
	LeaveScore             *int64   `protobuf:"varint,6,req,name=LeaveScore" json:"LeaveScore,omitempty"`
	BeiShuLimit            *int64   `protobuf:"varint,7,req,name=BeiShuLimit" json:"BeiShuLimit,omitempty"`
	ChairCount             *int32   `protobuf:"varint,8,req,name=ChairCount" json:"ChairCount,omitempty"`
	IsAllowEnterAfterStart *int32   `protobuf:"varint,9,req,name=IsAllowEnterAfterStart" json:"IsAllowEnterAfterStart,omitempty"`
	TableType              *int64   `protobuf:"varint,10,req,name=TableType" json:"TableType,omitempty"`
	RoomRate               *int64   `protobuf:"varint,11,req,name=RoomRate" json:"RoomRate,omitempty"`
	ServerRate             *int64   `protobuf:"varint,12,req,name=ServerRate" json:"ServerRate,omitempty"`
	MGameType              *int32   `protobuf:"varint,13,req,name=mGameType" json:"mGameType,omitempty"`
	IconfirmLandownerType  *int32   `protobuf:"varint,14,req,name=iconfirmLandownerType" json:"iconfirmLandownerType,omitempty"`
	MOwnerUserId           *int64   `protobuf:"varint,15,req,name=mOwnerUserId" json:"mOwnerUserId,omitempty"`
	TableAdvanceParam      *string  `protobuf:"bytes,16,req,name=TableAdvanceParam" json:"TableAdvanceParam,omitempty"`
	MTableName             *string  `protobuf:"bytes,17,req,name=mTableName" json:"mTableName,omitempty"`
	MRoomId                *int32   `protobuf:"varint,18,req,name=mRoomId" json:"mRoomId,omitempty"`
	MTableId               *int32   `protobuf:"varint,19,req,name=mTableId" json:"mTableId,omitempty"`
	MKindId                *int32   `protobuf:"varint,20,req,name=mKindId" json:"mKindId,omitempty"`
	MClubId                *int32   `protobuf:"varint,21,req,name=mClubId" json:"mClubId,omitempty"`
	MIsIpWarn              *int32   `protobuf:"varint,22,req,name=mIsIpWarn" json:"mIsIpWarn,omitempty"`
	MIsGpsWarn             *int32   `protobuf:"varint,23,req,name=mIsGpsWarn" json:"mIsGpsWarn,omitempty"`
	ClubName               *string  `protobuf:"bytes,24,opt,name=clubName" json:"clubName,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *StTableAttribute) Reset()         { *m = StTableAttribute{} }
func (m *StTableAttribute) String() string { return proto.CompactTextString(m) }
func (*StTableAttribute) ProtoMessage()    {}
func (*StTableAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{30}
}

func (m *StTableAttribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StTableAttribute.Unmarshal(m, b)
}
func (m *StTableAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StTableAttribute.Marshal(b, m, deterministic)
}
func (m *StTableAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StTableAttribute.Merge(m, src)
}
func (m *StTableAttribute) XXX_Size() int {
	return xxx_messageInfo_StTableAttribute.Size(m)
}
func (m *StTableAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_StTableAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_StTableAttribute proto.InternalMessageInfo

func (m *StTableAttribute) GetGameCurrencyType() int32 {
	if m != nil && m.GameCurrencyType != nil {
		return *m.GameCurrencyType
	}
	return 0
}

func (m *StTableAttribute) GetPayRoomRateType() int32 {
	if m != nil && m.PayRoomRateType != nil {
		return *m.PayRoomRateType
	}
	return 0
}

func (m *StTableAttribute) GetPlanGameCount() int32 {
	if m != nil && m.PlanGameCount != nil {
		return *m.PlanGameCount
	}
	return 0
}

func (m *StTableAttribute) GetDiZhu() int64 {
	if m != nil && m.DiZhu != nil {
		return *m.DiZhu
	}
	return 0
}

func (m *StTableAttribute) GetEnterScore() int64 {
	if m != nil && m.EnterScore != nil {
		return *m.EnterScore
	}
	return 0
}

func (m *StTableAttribute) GetLeaveScore() int64 {
	if m != nil && m.LeaveScore != nil {
		return *m.LeaveScore
	}
	return 0
}

func (m *StTableAttribute) GetBeiShuLimit() int64 {
	if m != nil && m.BeiShuLimit != nil {
		return *m.BeiShuLimit
	}
	return 0
}

func (m *StTableAttribute) GetChairCount() int32 {
	if m != nil && m.ChairCount != nil {
		return *m.ChairCount
	}
	return 0
}

func (m *StTableAttribute) GetIsAllowEnterAfterStart() int32 {
	if m != nil && m.IsAllowEnterAfterStart != nil {
		return *m.IsAllowEnterAfterStart
	}
	return 0
}

func (m *StTableAttribute) GetTableType() int64 {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return 0
}

func (m *StTableAttribute) GetRoomRate() int64 {
	if m != nil && m.RoomRate != nil {
		return *m.RoomRate
	}
	return 0
}

func (m *StTableAttribute) GetServerRate() int64 {
	if m != nil && m.ServerRate != nil {
		return *m.ServerRate
	}
	return 0
}

func (m *StTableAttribute) GetMGameType() int32 {
	if m != nil && m.MGameType != nil {
		return *m.MGameType
	}
	return 0
}

func (m *StTableAttribute) GetIconfirmLandownerType() int32 {
	if m != nil && m.IconfirmLandownerType != nil {
		return *m.IconfirmLandownerType
	}
	return 0
}

func (m *StTableAttribute) GetMOwnerUserId() int64 {
	if m != nil && m.MOwnerUserId != nil {
		return *m.MOwnerUserId
	}
	return 0
}

func (m *StTableAttribute) GetTableAdvanceParam() string {
	if m != nil && m.TableAdvanceParam != nil {
		return *m.TableAdvanceParam
	}
	return ""
}

func (m *StTableAttribute) GetMTableName() string {
	if m != nil && m.MTableName != nil {
		return *m.MTableName
	}
	return ""
}

func (m *StTableAttribute) GetMRoomId() int32 {
	if m != nil && m.MRoomId != nil {
		return *m.MRoomId
	}
	return 0
}

func (m *StTableAttribute) GetMTableId() int32 {
	if m != nil && m.MTableId != nil {
		return *m.MTableId
	}
	return 0
}

func (m *StTableAttribute) GetMKindId() int32 {
	if m != nil && m.MKindId != nil {
		return *m.MKindId
	}
	return 0
}

func (m *StTableAttribute) GetMClubId() int32 {
	if m != nil && m.MClubId != nil {
		return *m.MClubId
	}
	return 0
}

func (m *StTableAttribute) GetMIsIpWarn() int32 {
	if m != nil && m.MIsIpWarn != nil {
		return *m.MIsIpWarn
	}
	return 0
}

func (m *StTableAttribute) GetMIsGpsWarn() int32 {
	if m != nil && m.MIsGpsWarn != nil {
		return *m.MIsGpsWarn
	}
	return 0
}

func (m *StTableAttribute) GetClubName() string {
	if m != nil && m.ClubName != nil {
		return *m.ClubName
	}
	return ""
}

type TableInfo struct {
	MTableAttribute      *StTableAttribute `protobuf:"bytes,1,req,name=mTableAttribute" json:"mTableAttribute,omitempty"`
	MLandOwnerSeatId     *int32            `protobuf:"varint,2,req,name=mLandOwnerSeatId" json:"mLandOwnerSeatId,omitempty"`
	MTableState          *int32            `protobuf:"varint,3,req,name=mTableState" json:"mTableState,omitempty"`
	SzSeatInfos          []*SeatInfo       `protobuf:"bytes,4,rep,name=szSeatInfos" json:"szSeatInfos,omitempty"`
	MGameCount           *uint32           `protobuf:"varint,5,req,name=mGameCount" json:"mGameCount,omitempty"`
	MWaitReadyTime       *int64            `protobuf:"varint,6,req,name=mWaitReadyTime" json:"mWaitReadyTime,omitempty"`
	MWaitEndTime         *int64            `protobuf:"varint,7,req,name=mWaitEndTime" json:"mWaitEndTime,omitempty"`
	MAllWaitOperateTime  *int64            `protobuf:"varint,8,req,name=mAllWaitOperateTime" json:"mAllWaitOperateTime,omitempty"`
	BShowCardHolder      *bool             `protobuf:"varint,9,opt,name=bShowCardHolder" json:"bShowCardHolder,omitempty"`
	MIStuffleCardType    *int32            `protobuf:"varint,10,opt,name=mIStuffleCardType" json:"mIStuffleCardType,omitempty"`
	BIsSanDaBiZhua       *bool             `protobuf:"varint,11,opt,name=bIsSanDaBiZhua" json:"bIsSanDaBiZhua,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TableInfo) Reset()         { *m = TableInfo{} }
func (m *TableInfo) String() string { return proto.CompactTextString(m) }
func (*TableInfo) ProtoMessage()    {}
func (*TableInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{31}
}

func (m *TableInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableInfo.Unmarshal(m, b)
}
func (m *TableInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableInfo.Marshal(b, m, deterministic)
}
func (m *TableInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableInfo.Merge(m, src)
}
func (m *TableInfo) XXX_Size() int {
	return xxx_messageInfo_TableInfo.Size(m)
}
func (m *TableInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TableInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TableInfo proto.InternalMessageInfo

func (m *TableInfo) GetMTableAttribute() *StTableAttribute {
	if m != nil {
		return m.MTableAttribute
	}
	return nil
}

func (m *TableInfo) GetMLandOwnerSeatId() int32 {
	if m != nil && m.MLandOwnerSeatId != nil {
		return *m.MLandOwnerSeatId
	}
	return 0
}

func (m *TableInfo) GetMTableState() int32 {
	if m != nil && m.MTableState != nil {
		return *m.MTableState
	}
	return 0
}

func (m *TableInfo) GetSzSeatInfos() []*SeatInfo {
	if m != nil {
		return m.SzSeatInfos
	}
	return nil
}

func (m *TableInfo) GetMGameCount() uint32 {
	if m != nil && m.MGameCount != nil {
		return *m.MGameCount
	}
	return 0
}

func (m *TableInfo) GetMWaitReadyTime() int64 {
	if m != nil && m.MWaitReadyTime != nil {
		return *m.MWaitReadyTime
	}
	return 0
}

func (m *TableInfo) GetMWaitEndTime() int64 {
	if m != nil && m.MWaitEndTime != nil {
		return *m.MWaitEndTime
	}
	return 0
}

func (m *TableInfo) GetMAllWaitOperateTime() int64 {
	if m != nil && m.MAllWaitOperateTime != nil {
		return *m.MAllWaitOperateTime
	}
	return 0
}

func (m *TableInfo) GetBShowCardHolder() bool {
	if m != nil && m.BShowCardHolder != nil {
		return *m.BShowCardHolder
	}
	return false
}

func (m *TableInfo) GetMIStuffleCardType() int32 {
	if m != nil && m.MIStuffleCardType != nil {
		return *m.MIStuffleCardType
	}
	return 0
}

func (m *TableInfo) GetBIsSanDaBiZhua() bool {
	if m != nil && m.BIsSanDaBiZhua != nil {
		return *m.BIsSanDaBiZhua
	}
	return false
}

//GAME_SUB_SC_USER_TABLE_NOTIFY = 9; //桌子信息
type SC_TableInfoNotify struct {
	MTableInfo           *TableInfo `protobuf:"bytes,1,req,name=mTableInfo" json:"mTableInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SC_TableInfoNotify) Reset()         { *m = SC_TableInfoNotify{} }
func (m *SC_TableInfoNotify) String() string { return proto.CompactTextString(m) }
func (*SC_TableInfoNotify) ProtoMessage()    {}
func (*SC_TableInfoNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{32}
}

func (m *SC_TableInfoNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_TableInfoNotify.Unmarshal(m, b)
}
func (m *SC_TableInfoNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_TableInfoNotify.Marshal(b, m, deterministic)
}
func (m *SC_TableInfoNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_TableInfoNotify.Merge(m, src)
}
func (m *SC_TableInfoNotify) XXX_Size() int {
	return xxx_messageInfo_SC_TableInfoNotify.Size(m)
}
func (m *SC_TableInfoNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_TableInfoNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_TableInfoNotify proto.InternalMessageInfo

func (m *SC_TableInfoNotify) GetMTableInfo() *TableInfo {
	if m != nil {
		return m.MTableInfo
	}
	return nil
}

//GAME_SUB_SC_TABLE_DISMISS_NOTIFY = 10; //通知桌子解散
//通知座子解散
type SC_UserTableDIsmissNotify struct {
	BIsGameEndDismiss    *bool    `protobuf:"varint,1,req,name=bIsGameEndDismiss" json:"bIsGameEndDismiss,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_UserTableDIsmissNotify) Reset()         { *m = SC_UserTableDIsmissNotify{} }
func (m *SC_UserTableDIsmissNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserTableDIsmissNotify) ProtoMessage()    {}
func (*SC_UserTableDIsmissNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{33}
}

func (m *SC_UserTableDIsmissNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserTableDIsmissNotify.Unmarshal(m, b)
}
func (m *SC_UserTableDIsmissNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserTableDIsmissNotify.Marshal(b, m, deterministic)
}
func (m *SC_UserTableDIsmissNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserTableDIsmissNotify.Merge(m, src)
}
func (m *SC_UserTableDIsmissNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserTableDIsmissNotify.Size(m)
}
func (m *SC_UserTableDIsmissNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserTableDIsmissNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserTableDIsmissNotify proto.InternalMessageInfo

func (m *SC_UserTableDIsmissNotify) GetBIsGameEndDismiss() bool {
	if m != nil && m.BIsGameEndDismiss != nil {
		return *m.BIsGameEndDismiss
	}
	return false
}

//GAME_SUB_CS_USER_DISMISS_TABLE = 12;//解散桌子(强制解散)
//通知座子解散
type CS_UserDismissTable struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_UserDismissTable) Reset()         { *m = CS_UserDismissTable{} }
func (m *CS_UserDismissTable) String() string { return proto.CompactTextString(m) }
func (*CS_UserDismissTable) ProtoMessage()    {}
func (*CS_UserDismissTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{34}
}

func (m *CS_UserDismissTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_UserDismissTable.Unmarshal(m, b)
}
func (m *CS_UserDismissTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_UserDismissTable.Marshal(b, m, deterministic)
}
func (m *CS_UserDismissTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_UserDismissTable.Merge(m, src)
}
func (m *CS_UserDismissTable) XXX_Size() int {
	return xxx_messageInfo_CS_UserDismissTable.Size(m)
}
func (m *CS_UserDismissTable) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_UserDismissTable.DiscardUnknown(m)
}

var xxx_messageInfo_CS_UserDismissTable proto.InternalMessageInfo

type TotalRecord struct {
	IMaxMutipler         *int32   `protobuf:"varint,1,req,name=iMaxMutipler" json:"iMaxMutipler,omitempty"`
	IBoomCnt             *int32   `protobuf:"varint,2,req,name=iBoomCnt" json:"iBoomCnt,omitempty"`
	IWinTimes            *int32   `protobuf:"varint,3,req,name=iWinTimes" json:"iWinTimes,omitempty"`
	ISpringTimes         *int32   `protobuf:"varint,4,req,name=iSpringTimes" json:"iSpringTimes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TotalRecord) Reset()         { *m = TotalRecord{} }
func (m *TotalRecord) String() string { return proto.CompactTextString(m) }
func (*TotalRecord) ProtoMessage()    {}
func (*TotalRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{35}
}

func (m *TotalRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalRecord.Unmarshal(m, b)
}
func (m *TotalRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalRecord.Marshal(b, m, deterministic)
}
func (m *TotalRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalRecord.Merge(m, src)
}
func (m *TotalRecord) XXX_Size() int {
	return xxx_messageInfo_TotalRecord.Size(m)
}
func (m *TotalRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalRecord.DiscardUnknown(m)
}

var xxx_messageInfo_TotalRecord proto.InternalMessageInfo

func (m *TotalRecord) GetIMaxMutipler() int32 {
	if m != nil && m.IMaxMutipler != nil {
		return *m.IMaxMutipler
	}
	return 0
}

func (m *TotalRecord) GetIBoomCnt() int32 {
	if m != nil && m.IBoomCnt != nil {
		return *m.IBoomCnt
	}
	return 0
}

func (m *TotalRecord) GetIWinTimes() int32 {
	if m != nil && m.IWinTimes != nil {
		return *m.IWinTimes
	}
	return 0
}

func (m *TotalRecord) GetISpringTimes() int32 {
	if m != nil && m.ISpringTimes != nil {
		return *m.ISpringTimes
	}
	return 0
}

type PokerUserWinDetail struct {
	MSeatId              *uint32      `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MUserId              *uint32      `protobuf:"varint,2,req,name=mUserId" json:"mUserId,omitempty"`
	MWinScore            *int64       `protobuf:"varint,3,req,name=mWinScore" json:"mWinScore,omitempty"`
	MTotalRecord         *TotalRecord `protobuf:"bytes,4,opt,name=mTotalRecord" json:"mTotalRecord,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PokerUserWinDetail) Reset()         { *m = PokerUserWinDetail{} }
func (m *PokerUserWinDetail) String() string { return proto.CompactTextString(m) }
func (*PokerUserWinDetail) ProtoMessage()    {}
func (*PokerUserWinDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{36}
}

func (m *PokerUserWinDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PokerUserWinDetail.Unmarshal(m, b)
}
func (m *PokerUserWinDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PokerUserWinDetail.Marshal(b, m, deterministic)
}
func (m *PokerUserWinDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PokerUserWinDetail.Merge(m, src)
}
func (m *PokerUserWinDetail) XXX_Size() int {
	return xxx_messageInfo_PokerUserWinDetail.Size(m)
}
func (m *PokerUserWinDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_PokerUserWinDetail.DiscardUnknown(m)
}

var xxx_messageInfo_PokerUserWinDetail proto.InternalMessageInfo

func (m *PokerUserWinDetail) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *PokerUserWinDetail) GetMUserId() uint32 {
	if m != nil && m.MUserId != nil {
		return *m.MUserId
	}
	return 0
}

func (m *PokerUserWinDetail) GetMWinScore() int64 {
	if m != nil && m.MWinScore != nil {
		return *m.MWinScore
	}
	return 0
}

func (m *PokerUserWinDetail) GetMTotalRecord() *TotalRecord {
	if m != nil {
		return m.MTotalRecord
	}
	return nil
}

//GAME_SUB_SC_TABLE_TOTAL_WIN_NOTIFY = 15;//比赛所有输赢汇总通知
type SC_TAbleTotalWinNotify struct {
	MUserWinDetail       []*PokerUserWinDetail `protobuf:"bytes,1,rep,name=mUserWinDetail" json:"mUserWinDetail,omitempty"`
	StrVideoData         []byte                `protobuf:"bytes,2,opt,name=strVideoData" json:"strVideoData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SC_TAbleTotalWinNotify) Reset()         { *m = SC_TAbleTotalWinNotify{} }
func (m *SC_TAbleTotalWinNotify) String() string { return proto.CompactTextString(m) }
func (*SC_TAbleTotalWinNotify) ProtoMessage()    {}
func (*SC_TAbleTotalWinNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{37}
}

func (m *SC_TAbleTotalWinNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_TAbleTotalWinNotify.Unmarshal(m, b)
}
func (m *SC_TAbleTotalWinNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_TAbleTotalWinNotify.Marshal(b, m, deterministic)
}
func (m *SC_TAbleTotalWinNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_TAbleTotalWinNotify.Merge(m, src)
}
func (m *SC_TAbleTotalWinNotify) XXX_Size() int {
	return xxx_messageInfo_SC_TAbleTotalWinNotify.Size(m)
}
func (m *SC_TAbleTotalWinNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_TAbleTotalWinNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_TAbleTotalWinNotify proto.InternalMessageInfo

func (m *SC_TAbleTotalWinNotify) GetMUserWinDetail() []*PokerUserWinDetail {
	if m != nil {
		return m.MUserWinDetail
	}
	return nil
}

func (m *SC_TAbleTotalWinNotify) GetStrVideoData() []byte {
	if m != nil {
		return m.StrVideoData
	}
	return nil
}

//GAME_SUB_SC_GAME_START = 100; //游戏开始
type SC_GameStart struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_GameStart) Reset()         { *m = SC_GameStart{} }
func (m *SC_GameStart) String() string { return proto.CompactTextString(m) }
func (*SC_GameStart) ProtoMessage()    {}
func (*SC_GameStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{38}
}

func (m *SC_GameStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_GameStart.Unmarshal(m, b)
}
func (m *SC_GameStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_GameStart.Marshal(b, m, deterministic)
}
func (m *SC_GameStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_GameStart.Merge(m, src)
}
func (m *SC_GameStart) XXX_Size() int {
	return xxx_messageInfo_SC_GameStart.Size(m)
}
func (m *SC_GameStart) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_GameStart.DiscardUnknown(m)
}

var xxx_messageInfo_SC_GameStart proto.InternalMessageInfo

type PokerSettlementDetail struct {
	IWinType             *int32   `protobuf:"varint,1,req,name=iWinType" json:"iWinType,omitempty"`
	MSeatId              *uint32  `protobuf:"varint,2,req,name=mSeatId" json:"mSeatId,omitempty"`
	MValue               *int32   `protobuf:"varint,3,req,name=mValue" json:"mValue,omitempty"`
	ITotalBeiLv          *int32   `protobuf:"varint,4,opt,name=iTotalBeiLv" json:"iTotalBeiLv,omitempty"`
	IBaseScore           *int32   `protobuf:"varint,5,opt,name=iBaseScore" json:"iBaseScore,omitempty"`
	MState               *int32   `protobuf:"varint,6,req,name=mState" json:"mState,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PokerSettlementDetail) Reset()         { *m = PokerSettlementDetail{} }
func (m *PokerSettlementDetail) String() string { return proto.CompactTextString(m) }
func (*PokerSettlementDetail) ProtoMessage()    {}
func (*PokerSettlementDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{39}
}

func (m *PokerSettlementDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PokerSettlementDetail.Unmarshal(m, b)
}
func (m *PokerSettlementDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PokerSettlementDetail.Marshal(b, m, deterministic)
}
func (m *PokerSettlementDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PokerSettlementDetail.Merge(m, src)
}
func (m *PokerSettlementDetail) XXX_Size() int {
	return xxx_messageInfo_PokerSettlementDetail.Size(m)
}
func (m *PokerSettlementDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_PokerSettlementDetail.DiscardUnknown(m)
}

var xxx_messageInfo_PokerSettlementDetail proto.InternalMessageInfo

func (m *PokerSettlementDetail) GetIWinType() int32 {
	if m != nil && m.IWinType != nil {
		return *m.IWinType
	}
	return 0
}

func (m *PokerSettlementDetail) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *PokerSettlementDetail) GetMValue() int32 {
	if m != nil && m.MValue != nil {
		return *m.MValue
	}
	return 0
}

func (m *PokerSettlementDetail) GetITotalBeiLv() int32 {
	if m != nil && m.ITotalBeiLv != nil {
		return *m.ITotalBeiLv
	}
	return 0
}

func (m *PokerSettlementDetail) GetIBaseScore() int32 {
	if m != nil && m.IBaseScore != nil {
		return *m.IBaseScore
	}
	return 0
}

func (m *PokerSettlementDetail) GetMState() int32 {
	if m != nil && m.MState != nil {
		return *m.MState
	}
	return 0
}

type SeatRes struct {
	MSeatId              *uint32  `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MHandCards           []uint32 `protobuf:"varint,2,rep,name=mHandCards" json:"mHandCards,omitempty"`
	MWinScore            *int32   `protobuf:"varint,3,req,name=mWinScore" json:"mWinScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeatRes) Reset()         { *m = SeatRes{} }
func (m *SeatRes) String() string { return proto.CompactTextString(m) }
func (*SeatRes) ProtoMessage()    {}
func (*SeatRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{40}
}

func (m *SeatRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeatRes.Unmarshal(m, b)
}
func (m *SeatRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeatRes.Marshal(b, m, deterministic)
}
func (m *SeatRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeatRes.Merge(m, src)
}
func (m *SeatRes) XXX_Size() int {
	return xxx_messageInfo_SeatRes.Size(m)
}
func (m *SeatRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SeatRes.DiscardUnknown(m)
}

var xxx_messageInfo_SeatRes proto.InternalMessageInfo

func (m *SeatRes) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *SeatRes) GetMHandCards() []uint32 {
	if m != nil {
		return m.MHandCards
	}
	return nil
}

func (m *SeatRes) GetMWinScore() int32 {
	if m != nil && m.MWinScore != nil {
		return *m.MWinScore
	}
	return 0
}

type SeatFightRes struct {
	ISeatId              *int32   `protobuf:"varint,1,req,name=iSeatId" json:"iSeatId,omitempty"`
	IDiZhu               *int32   `protobuf:"varint,2,req,name=iDiZhu" json:"iDiZhu,omitempty"`
	IBeiCount            *int32   `protobuf:"varint,3,req,name=iBeiCount" json:"iBeiCount,omitempty"`
	WinScore             *int64   `protobuf:"varint,4,req,name=WinScore" json:"WinScore,omitempty"`
	IState               *int32   `protobuf:"varint,5,req,name=iState" json:"iState,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeatFightRes) Reset()         { *m = SeatFightRes{} }
func (m *SeatFightRes) String() string { return proto.CompactTextString(m) }
func (*SeatFightRes) ProtoMessage()    {}
func (*SeatFightRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{41}
}

func (m *SeatFightRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeatFightRes.Unmarshal(m, b)
}
func (m *SeatFightRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeatFightRes.Marshal(b, m, deterministic)
}
func (m *SeatFightRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeatFightRes.Merge(m, src)
}
func (m *SeatFightRes) XXX_Size() int {
	return xxx_messageInfo_SeatFightRes.Size(m)
}
func (m *SeatFightRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SeatFightRes.DiscardUnknown(m)
}

var xxx_messageInfo_SeatFightRes proto.InternalMessageInfo

func (m *SeatFightRes) GetISeatId() int32 {
	if m != nil && m.ISeatId != nil {
		return *m.ISeatId
	}
	return 0
}

func (m *SeatFightRes) GetIDiZhu() int32 {
	if m != nil && m.IDiZhu != nil {
		return *m.IDiZhu
	}
	return 0
}

func (m *SeatFightRes) GetIBeiCount() int32 {
	if m != nil && m.IBeiCount != nil {
		return *m.IBeiCount
	}
	return 0
}

func (m *SeatFightRes) GetWinScore() int64 {
	if m != nil && m.WinScore != nil {
		return *m.WinScore
	}
	return 0
}

func (m *SeatFightRes) GetIState() int32 {
	if m != nil && m.IState != nil {
		return *m.IState
	}
	return 0
}

//游戏等级和星级信息
type GameStarInfo struct {
	IGameLv              *int32   `protobuf:"varint,1,opt,name=iGameLv" json:"iGameLv,omitempty"`
	IGameExp             *int32   `protobuf:"varint,2,opt,name=iGameExp" json:"iGameExp,omitempty"`
	IAddGameExp          *int32   `protobuf:"varint,3,opt,name=iAddGameExp" json:"iAddGameExp,omitempty"`
	IStarLv              *int32   `protobuf:"varint,4,opt,name=iStarLv" json:"iStarLv,omitempty"`
	IStarExp             *int32   `protobuf:"varint,5,opt,name=iStarExp" json:"iStarExp,omitempty"`
	IAddStarExp          *int32   `protobuf:"varint,6,opt,name=iAddStarExp" json:"iAddStarExp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameStarInfo) Reset()         { *m = GameStarInfo{} }
func (m *GameStarInfo) String() string { return proto.CompactTextString(m) }
func (*GameStarInfo) ProtoMessage()    {}
func (*GameStarInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{42}
}

func (m *GameStarInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStarInfo.Unmarshal(m, b)
}
func (m *GameStarInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStarInfo.Marshal(b, m, deterministic)
}
func (m *GameStarInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStarInfo.Merge(m, src)
}
func (m *GameStarInfo) XXX_Size() int {
	return xxx_messageInfo_GameStarInfo.Size(m)
}
func (m *GameStarInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStarInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GameStarInfo proto.InternalMessageInfo

func (m *GameStarInfo) GetIGameLv() int32 {
	if m != nil && m.IGameLv != nil {
		return *m.IGameLv
	}
	return 0
}

func (m *GameStarInfo) GetIGameExp() int32 {
	if m != nil && m.IGameExp != nil {
		return *m.IGameExp
	}
	return 0
}

func (m *GameStarInfo) GetIAddGameExp() int32 {
	if m != nil && m.IAddGameExp != nil {
		return *m.IAddGameExp
	}
	return 0
}

func (m *GameStarInfo) GetIStarLv() int32 {
	if m != nil && m.IStarLv != nil {
		return *m.IStarLv
	}
	return 0
}

func (m *GameStarInfo) GetIStarExp() int32 {
	if m != nil && m.IStarExp != nil {
		return *m.IStarExp
	}
	return 0
}

func (m *GameStarInfo) GetIAddStarExp() int32 {
	if m != nil && m.IAddStarExp != nil {
		return *m.IAddStarExp
	}
	return 0
}

type SC_GameEnd struct {
	MTableState          *int32          `protobuf:"varint,1,req,name=mTableState" json:"mTableState,omitempty"`
	IWin                 *int32          `protobuf:"varint,2,req,name=iWin" json:"iWin,omitempty"`
	SzSeatRes            []*SeatRes      `protobuf:"bytes,3,rep,name=szSeatRes" json:"szSeatRes,omitempty"`
	SzResultList         []*SeatFightRes `protobuf:"bytes,4,rep,name=szResultList" json:"szResultList,omitempty"`
	IBackGold            *int64          `protobuf:"varint,5,opt,name=iBackGold" json:"iBackGold,omitempty"`
	IBackExpire          *int32          `protobuf:"varint,6,opt,name=iBackExpire" json:"iBackExpire,omitempty"`
	StGameStarInfo       *GameStarInfo   `protobuf:"bytes,7,opt,name=stGameStarInfo" json:"stGameStarInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SC_GameEnd) Reset()         { *m = SC_GameEnd{} }
func (m *SC_GameEnd) String() string { return proto.CompactTextString(m) }
func (*SC_GameEnd) ProtoMessage()    {}
func (*SC_GameEnd) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{43}
}

func (m *SC_GameEnd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_GameEnd.Unmarshal(m, b)
}
func (m *SC_GameEnd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_GameEnd.Marshal(b, m, deterministic)
}
func (m *SC_GameEnd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_GameEnd.Merge(m, src)
}
func (m *SC_GameEnd) XXX_Size() int {
	return xxx_messageInfo_SC_GameEnd.Size(m)
}
func (m *SC_GameEnd) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_GameEnd.DiscardUnknown(m)
}

var xxx_messageInfo_SC_GameEnd proto.InternalMessageInfo

func (m *SC_GameEnd) GetMTableState() int32 {
	if m != nil && m.MTableState != nil {
		return *m.MTableState
	}
	return 0
}

func (m *SC_GameEnd) GetIWin() int32 {
	if m != nil && m.IWin != nil {
		return *m.IWin
	}
	return 0
}

func (m *SC_GameEnd) GetSzSeatRes() []*SeatRes {
	if m != nil {
		return m.SzSeatRes
	}
	return nil
}

func (m *SC_GameEnd) GetSzResultList() []*SeatFightRes {
	if m != nil {
		return m.SzResultList
	}
	return nil
}

func (m *SC_GameEnd) GetIBackGold() int64 {
	if m != nil && m.IBackGold != nil {
		return *m.IBackGold
	}
	return 0
}

func (m *SC_GameEnd) GetIBackExpire() int32 {
	if m != nil && m.IBackExpire != nil {
		return *m.IBackExpire
	}
	return 0
}

func (m *SC_GameEnd) GetStGameStarInfo() *GameStarInfo {
	if m != nil {
		return m.StGameStarInfo
	}
	return nil
}

//录像回放桌位信息
type MVideotapeSeatInfo struct {
	MSeatId              *uint32         `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MBaseInfos           *PlayerBaseInfo `protobuf:"bytes,2,req,name=mBaseInfos" json:"mBaseInfos,omitempty"`
	MCards               []uint32        `protobuf:"varint,3,rep,name=mCards" json:"mCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MVideotapeSeatInfo) Reset()         { *m = MVideotapeSeatInfo{} }
func (m *MVideotapeSeatInfo) String() string { return proto.CompactTextString(m) }
func (*MVideotapeSeatInfo) ProtoMessage()    {}
func (*MVideotapeSeatInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{44}
}

func (m *MVideotapeSeatInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MVideotapeSeatInfo.Unmarshal(m, b)
}
func (m *MVideotapeSeatInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MVideotapeSeatInfo.Marshal(b, m, deterministic)
}
func (m *MVideotapeSeatInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MVideotapeSeatInfo.Merge(m, src)
}
func (m *MVideotapeSeatInfo) XXX_Size() int {
	return xxx_messageInfo_MVideotapeSeatInfo.Size(m)
}
func (m *MVideotapeSeatInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MVideotapeSeatInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MVideotapeSeatInfo proto.InternalMessageInfo

func (m *MVideotapeSeatInfo) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *MVideotapeSeatInfo) GetMBaseInfos() *PlayerBaseInfo {
	if m != nil {
		return m.MBaseInfos
	}
	return nil
}

func (m *MVideotapeSeatInfo) GetMCards() []uint32 {
	if m != nil {
		return m.MCards
	}
	return nil
}

type MingPaiInfo struct {
	ISeatId              *int32   `protobuf:"varint,1,req,name=iSeatId" json:"iSeatId,omitempty"`
	SzCardList           []uint32 `protobuf:"varint,2,rep,name=szCardList" json:"szCardList,omitempty"`
	ITimes               *int32   `protobuf:"varint,3,req,name=iTimes" json:"iTimes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MingPaiInfo) Reset()         { *m = MingPaiInfo{} }
func (m *MingPaiInfo) String() string { return proto.CompactTextString(m) }
func (*MingPaiInfo) ProtoMessage()    {}
func (*MingPaiInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{45}
}

func (m *MingPaiInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MingPaiInfo.Unmarshal(m, b)
}
func (m *MingPaiInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MingPaiInfo.Marshal(b, m, deterministic)
}
func (m *MingPaiInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MingPaiInfo.Merge(m, src)
}
func (m *MingPaiInfo) XXX_Size() int {
	return xxx_messageInfo_MingPaiInfo.Size(m)
}
func (m *MingPaiInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MingPaiInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MingPaiInfo proto.InternalMessageInfo

func (m *MingPaiInfo) GetISeatId() int32 {
	if m != nil && m.ISeatId != nil {
		return *m.ISeatId
	}
	return 0
}

func (m *MingPaiInfo) GetSzCardList() []uint32 {
	if m != nil {
		return m.SzCardList
	}
	return nil
}

func (m *MingPaiInfo) GetITimes() int32 {
	if m != nil && m.ITimes != nil {
		return *m.ITimes
	}
	return 0
}

//单局游戏录像回放数据
type MGameVideotapeInfo struct {
	MTableAttribute        *StTableAttribute         `protobuf:"bytes,1,req,name=mTableAttribute" json:"mTableAttribute,omitempty"`
	MLandOwnerSeatId       *uint32                   `protobuf:"varint,2,req,name=mLandOwnerSeatId" json:"mLandOwnerSeatId,omitempty"`
	MVideoSeatInfo         []*MVideotapeSeatInfo     `protobuf:"bytes,3,rep,name=mVideoSeatInfo" json:"mVideoSeatInfo,omitempty"`
	MOperateRecords        []*SC_OperateResultNotify `protobuf:"bytes,4,rep,name=mOperateRecords" json:"mOperateRecords,omitempty"`
	MTotalSettlementDetail []*PokerSettlementDetail  `protobuf:"bytes,5,rep,name=mTotalSettlementDetail" json:"mTotalSettlementDetail,omitempty"`
	SzLandOwnerCardList    []uint32                  `protobuf:"varint,6,rep,name=szLandOwnerCardList" json:"szLandOwnerCardList,omitempty"`
	ILaiZiCard             *int32                    `protobuf:"varint,7,opt,name=iLaiZiCard" json:"iLaiZiCard,omitempty"`
	SzMingPaiList          []*MingPaiInfo            `protobuf:"bytes,8,rep,name=szMingPaiList" json:"szMingPaiList,omitempty"`
	ICurTurnVal            *int32                    `protobuf:"varint,9,opt,name=iCurTurnVal" json:"iCurTurnVal,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                  `json:"-"`
	XXX_unrecognized       []byte                    `json:"-"`
	XXX_sizecache          int32                     `json:"-"`
}

func (m *MGameVideotapeInfo) Reset()         { *m = MGameVideotapeInfo{} }
func (m *MGameVideotapeInfo) String() string { return proto.CompactTextString(m) }
func (*MGameVideotapeInfo) ProtoMessage()    {}
func (*MGameVideotapeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{46}
}

func (m *MGameVideotapeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MGameVideotapeInfo.Unmarshal(m, b)
}
func (m *MGameVideotapeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MGameVideotapeInfo.Marshal(b, m, deterministic)
}
func (m *MGameVideotapeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MGameVideotapeInfo.Merge(m, src)
}
func (m *MGameVideotapeInfo) XXX_Size() int {
	return xxx_messageInfo_MGameVideotapeInfo.Size(m)
}
func (m *MGameVideotapeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MGameVideotapeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MGameVideotapeInfo proto.InternalMessageInfo

func (m *MGameVideotapeInfo) GetMTableAttribute() *StTableAttribute {
	if m != nil {
		return m.MTableAttribute
	}
	return nil
}

func (m *MGameVideotapeInfo) GetMLandOwnerSeatId() uint32 {
	if m != nil && m.MLandOwnerSeatId != nil {
		return *m.MLandOwnerSeatId
	}
	return 0
}

func (m *MGameVideotapeInfo) GetMVideoSeatInfo() []*MVideotapeSeatInfo {
	if m != nil {
		return m.MVideoSeatInfo
	}
	return nil
}

func (m *MGameVideotapeInfo) GetMOperateRecords() []*SC_OperateResultNotify {
	if m != nil {
		return m.MOperateRecords
	}
	return nil
}

func (m *MGameVideotapeInfo) GetMTotalSettlementDetail() []*PokerSettlementDetail {
	if m != nil {
		return m.MTotalSettlementDetail
	}
	return nil
}

func (m *MGameVideotapeInfo) GetSzLandOwnerCardList() []uint32 {
	if m != nil {
		return m.SzLandOwnerCardList
	}
	return nil
}

func (m *MGameVideotapeInfo) GetILaiZiCard() int32 {
	if m != nil && m.ILaiZiCard != nil {
		return *m.ILaiZiCard
	}
	return 0
}

func (m *MGameVideotapeInfo) GetSzMingPaiList() []*MingPaiInfo {
	if m != nil {
		return m.SzMingPaiList
	}
	return nil
}

func (m *MGameVideotapeInfo) GetICurTurnVal() int32 {
	if m != nil && m.ICurTurnVal != nil {
		return *m.ICurTurnVal
	}
	return 0
}

type MWinDetailInfo struct {
	MSeatId              *int32   `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MWinScore            *int64   `protobuf:"varint,2,req,name=mWinScore" json:"mWinScore,omitempty"`
	MUserID              *int32   `protobuf:"varint,3,req,name=mUserID" json:"mUserID,omitempty"`
	MAccid               *int32   `protobuf:"varint,4,req,name=mAccid" json:"mAccid,omitempty"`
	MNickName            *string  `protobuf:"bytes,5,req,name=mNickName" json:"mNickName,omitempty"`
	MFaceID              *string  `protobuf:"bytes,6,req,name=mFaceID" json:"mFaceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MWinDetailInfo) Reset()         { *m = MWinDetailInfo{} }
func (m *MWinDetailInfo) String() string { return proto.CompactTextString(m) }
func (*MWinDetailInfo) ProtoMessage()    {}
func (*MWinDetailInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{47}
}

func (m *MWinDetailInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MWinDetailInfo.Unmarshal(m, b)
}
func (m *MWinDetailInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MWinDetailInfo.Marshal(b, m, deterministic)
}
func (m *MWinDetailInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MWinDetailInfo.Merge(m, src)
}
func (m *MWinDetailInfo) XXX_Size() int {
	return xxx_messageInfo_MWinDetailInfo.Size(m)
}
func (m *MWinDetailInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MWinDetailInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MWinDetailInfo proto.InternalMessageInfo

func (m *MWinDetailInfo) GetMSeatId() int32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *MWinDetailInfo) GetMWinScore() int64 {
	if m != nil && m.MWinScore != nil {
		return *m.MWinScore
	}
	return 0
}

func (m *MWinDetailInfo) GetMUserID() int32 {
	if m != nil && m.MUserID != nil {
		return *m.MUserID
	}
	return 0
}

func (m *MWinDetailInfo) GetMAccid() int32 {
	if m != nil && m.MAccid != nil {
		return *m.MAccid
	}
	return 0
}

func (m *MWinDetailInfo) GetMNickName() string {
	if m != nil && m.MNickName != nil {
		return *m.MNickName
	}
	return ""
}

func (m *MWinDetailInfo) GetMFaceID() string {
	if m != nil && m.MFaceID != nil {
		return *m.MFaceID
	}
	return ""
}

//GAME_SUB_CS_TABLE_LAST_WIN_DETAIL = 16;//桌子最上局比赛输赢记录
type CS_TableLastWinDetail struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_TableLastWinDetail) Reset()         { *m = CS_TableLastWinDetail{} }
func (m *CS_TableLastWinDetail) String() string { return proto.CompactTextString(m) }
func (*CS_TableLastWinDetail) ProtoMessage()    {}
func (*CS_TableLastWinDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{48}
}

func (m *CS_TableLastWinDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_TableLastWinDetail.Unmarshal(m, b)
}
func (m *CS_TableLastWinDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_TableLastWinDetail.Marshal(b, m, deterministic)
}
func (m *CS_TableLastWinDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_TableLastWinDetail.Merge(m, src)
}
func (m *CS_TableLastWinDetail) XXX_Size() int {
	return xxx_messageInfo_CS_TableLastWinDetail.Size(m)
}
func (m *CS_TableLastWinDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_TableLastWinDetail.DiscardUnknown(m)
}

var xxx_messageInfo_CS_TableLastWinDetail proto.InternalMessageInfo

//GAME_SUB_SC_TABLE_LAST_WIN_DETAIL_NOTIFY = 17;//桌子最上局比赛输赢记录通知
type SC_TableLastWinDetailNotify struct {
	MLastWinDetailInfo   []*MWinDetailInfo `protobuf:"bytes,1,rep,name=mLastWinDetailInfo" json:"mLastWinDetailInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SC_TableLastWinDetailNotify) Reset()         { *m = SC_TableLastWinDetailNotify{} }
func (m *SC_TableLastWinDetailNotify) String() string { return proto.CompactTextString(m) }
func (*SC_TableLastWinDetailNotify) ProtoMessage()    {}
func (*SC_TableLastWinDetailNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_6742b00de4385fde, []int{49}
}

func (m *SC_TableLastWinDetailNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_TableLastWinDetailNotify.Unmarshal(m, b)
}
func (m *SC_TableLastWinDetailNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_TableLastWinDetailNotify.Marshal(b, m, deterministic)
}
func (m *SC_TableLastWinDetailNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_TableLastWinDetailNotify.Merge(m, src)
}
func (m *SC_TableLastWinDetailNotify) XXX_Size() int {
	return xxx_messageInfo_SC_TableLastWinDetailNotify.Size(m)
}
func (m *SC_TableLastWinDetailNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_TableLastWinDetailNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_TableLastWinDetailNotify proto.InternalMessageInfo

func (m *SC_TableLastWinDetailNotify) GetMLastWinDetailInfo() []*MWinDetailInfo {
	if m != nil {
		return m.MLastWinDetailInfo
	}
	return nil
}

func init() {
	proto.RegisterEnum("DouDiZhu.EnGameFrameID", EnGameFrameID_name, EnGameFrameID_value)
	proto.RegisterEnum("DouDiZhu.EnGameSubID", EnGameSubID_name, EnGameSubID_value)
	proto.RegisterEnum("DouDiZhu.EnShuffleType", EnShuffleType_name, EnShuffleType_value)
	proto.RegisterEnum("DouDiZhu.EnBeiLvType", EnBeiLvType_name, EnBeiLvType_value)
	proto.RegisterEnum("DouDiZhu.EnSeat_Operate", EnSeat_Operate_name, EnSeat_Operate_value)
	proto.RegisterEnum("DouDiZhu.EnCardType", EnCardType_name, EnCardType_value)
	proto.RegisterEnum("DouDiZhu.TableState", TableState_name, TableState_value)
	proto.RegisterEnum("DouDiZhu.UserState", UserState_name, UserState_value)
	proto.RegisterEnum("DouDiZhu.TableFinalDecision", TableFinalDecision_name, TableFinalDecision_value)
	proto.RegisterEnum("DouDiZhu.EnResultState", EnResultState_name, EnResultState_value)
	proto.RegisterEnum("DouDiZhu.EnWinRes", EnWinRes_name, EnWinRes_value)
	proto.RegisterType((*GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG)(nil), "DouDiZhu.GAME_SUB_SC_ADD_SUPER_BEILV_RESULT_MSG")
	proto.RegisterType((*CardHoldUnit)(nil), "DouDiZhu.CardHoldUnit")
	proto.RegisterType((*GAME_SUB_SYNC_CARDHOLDER_SC_MSG)(nil), "DouDiZhu.GAME_SUB_SYNC_CARDHOLDER_SC_MSG")
	proto.RegisterType((*GAME_SUB_SYNC_BEILV_SC_MSG)(nil), "DouDiZhu.GAME_SUB_SYNC_BEILV_SC_MSG")
	proto.RegisterType((*GAME_SUB_SYNC_BEILV_SC_MSG_BeiLvUnit)(nil), "DouDiZhu.GAME_SUB_SYNC_BEILV_SC_MSG.BeiLvUnit")
	proto.RegisterType((*GAME_SUB_TUOGUAN_CS_MSG)(nil), "DouDiZhu.GAME_SUB_TUOGUAN_CS_MSG")
	proto.RegisterType((*GAME_SUB_CANCEL_TUOGUAN_CS_MSG)(nil), "DouDiZhu.GAME_SUB_CANCEL_TUOGUAN_CS_MSG")
	proto.RegisterType((*GAME_SUB_CANCEL_TUOGUAN_SC_MSG)(nil), "DouDiZhu.GAME_SUB_CANCEL_TUOGUAN_SC_MSG")
	proto.RegisterType((*GAME_SUB_TUOGUAN_SC_MSG)(nil), "DouDiZhu.GAME_SUB_TUOGUAN_SC_MSG")
	proto.RegisterType((*ForwardCardInfo)(nil), "DouDiZhu.ForwardCardInfo")
	proto.RegisterType((*MinPaiInfo)(nil), "DouDiZhu.MinPaiInfo")
	proto.RegisterType((*ActorAskLandOwnerInfo)(nil), "DouDiZhu.ActorAskLandOwnerInfo")
	proto.RegisterType((*GAME_SUB_USER_RELOGIN_SC_MSG)(nil), "DouDiZhu.GAME_SUB_USER_RELOGIN_SC_MSG")
	proto.RegisterType((*GAME_SUB_SEND_LANDOWNERCARD_SC_MSG)(nil), "DouDiZhu.GAME_SUB_SEND_LANDOWNERCARD_SC_MSG")
	proto.RegisterType((*GAME_SUB_SENDCARD_SC_MSG)(nil), "DouDiZhu.GAME_SUB_SENDCARD_SC_MSG")
	proto.RegisterType((*GAME_SUB_MINGPAI_CS_MSG)(nil), "DouDiZhu.GAME_SUB_MINGPAI_CS_MSG")
	proto.RegisterType((*GAME_SUB_MINGPAI_SC_MSG)(nil), "DouDiZhu.GAME_SUB_MINGPAI_SC_MSG")
	proto.RegisterType((*CS_UserOperate)(nil), "DouDiZhu.CS_UserOperate")
	proto.RegisterType((*SC_OperateResultNotify)(nil), "DouDiZhu.SC_OperateResultNotify")
	proto.RegisterType((*DisCardNotice)(nil), "DouDiZhu.DisCardNotice")
	proto.RegisterType((*SC_OperateCodeNotify)(nil), "DouDiZhu.SC_OperateCodeNotify")
	proto.RegisterType((*CS_UserDissolveApply)(nil), "DouDiZhu.CS_UserDissolveApply")
	proto.RegisterType((*CS_UserAnswerDissolveApply)(nil), "DouDiZhu.CS_UserAnswerDissolveApply")
	proto.RegisterType((*SC_UserDissolveApplyNotify)(nil), "DouDiZhu.SC_UserDissolveApplyNotify")
	proto.RegisterType((*CS_UserTableChatRqst)(nil), "DouDiZhu.CS_UserTableChatRqst")
	proto.RegisterType((*SC_UserTableChatNotify)(nil), "DouDiZhu.SC_UserTableChatNotify")
	proto.RegisterType((*CS_UserReadyGameRqst)(nil), "DouDiZhu.CS_UserReadyGameRqst")
	proto.RegisterType((*SC_UserReadyGameNotify)(nil), "DouDiZhu.SC_UserReadyGameNotify")
	proto.RegisterType((*SC_UseBaseInfoNotify)(nil), "DouDiZhu.SC_UseBaseInfoNotify")
	proto.RegisterType((*PlayerBaseInfo)(nil), "DouDiZhu.PlayerBaseInfo")
	proto.RegisterType((*SeatInfo)(nil), "DouDiZhu.SeatInfo")
	proto.RegisterType((*StTableAttribute)(nil), "DouDiZhu.stTableAttribute")
	proto.RegisterType((*TableInfo)(nil), "DouDiZhu.TableInfo")
	proto.RegisterType((*SC_TableInfoNotify)(nil), "DouDiZhu.SC_TableInfoNotify")
	proto.RegisterType((*SC_UserTableDIsmissNotify)(nil), "DouDiZhu.SC_UserTableDIsmissNotify")
	proto.RegisterType((*CS_UserDismissTable)(nil), "DouDiZhu.CS_UserDismissTable")
	proto.RegisterType((*TotalRecord)(nil), "DouDiZhu.TotalRecord")
	proto.RegisterType((*PokerUserWinDetail)(nil), "DouDiZhu.PokerUserWinDetail")
	proto.RegisterType((*SC_TAbleTotalWinNotify)(nil), "DouDiZhu.SC_TAbleTotalWinNotify")
	proto.RegisterType((*SC_GameStart)(nil), "DouDiZhu.SC_GameStart")
	proto.RegisterType((*PokerSettlementDetail)(nil), "DouDiZhu.PokerSettlementDetail")
	proto.RegisterType((*SeatRes)(nil), "DouDiZhu.SeatRes")
	proto.RegisterType((*SeatFightRes)(nil), "DouDiZhu.SeatFightRes")
	proto.RegisterType((*GameStarInfo)(nil), "DouDiZhu.GameStarInfo")
	proto.RegisterType((*SC_GameEnd)(nil), "DouDiZhu.SC_GameEnd")
	proto.RegisterType((*MVideotapeSeatInfo)(nil), "DouDiZhu.MVideotapeSeatInfo")
	proto.RegisterType((*MingPaiInfo)(nil), "DouDiZhu.MingPaiInfo")
	proto.RegisterType((*MGameVideotapeInfo)(nil), "DouDiZhu.MGameVideotapeInfo")
	proto.RegisterType((*MWinDetailInfo)(nil), "DouDiZhu.MWinDetailInfo")
	proto.RegisterType((*CS_TableLastWinDetail)(nil), "DouDiZhu.CS_TableLastWinDetail")
	proto.RegisterType((*SC_TableLastWinDetailNotify)(nil), "DouDiZhu.SC_TableLastWinDetailNotify")
}

func init() { proto.RegisterFile("CmdDouDiZhu.proto", fileDescriptor_6742b00de4385fde) }

var fileDescriptor_6742b00de4385fde = []byte{
	// 4019 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5a, 0x4f, 0x6f, 0x24, 0x49,
	0x56, 0xdf, 0xaa, 0x72, 0xd9, 0xe5, 0xf0, 0x9f, 0x4e, 0x67, 0xdb, 0xee, 0xea, 0x9e, 0xd9, 0x19,
	0x6f, 0xee, 0x30, 0x58, 0xd6, 0xa8, 0x77, 0xe9, 0x59, 0x56, 0x30, 0x0b, 0x88, 0x72, 0x55, 0xd9,
	0x9d, 0x4c, 0xb9, 0xca, 0x1b, 0x59, 0x6e, 0x6b, 0xfa, 0x92, 0x0a, 0x57, 0xa5, 0xed, 0x58, 0x57,
	0x66, 0x9a, 0xcc, 0xac, 0xfe, 0xe3, 0x13, 0xe2, 0xc0, 0x15, 0x69, 0xef, 0x20, 0xc1, 0x01, 0x09,
	0x2e, 0xa0, 0xfd, 0x00, 0x20, 0x58, 0x24, 0x3e, 0x02, 0x07, 0x0e, 0x48, 0x20, 0xf1, 0x05, 0xf8,
	0x02, 0xe8, 0xbd, 0x88, 0xc8, 0x8c, 0xc8, 0x2c, 0xbb, 0x47, 0x5a, 0x69, 0x4f, 0xdc, 0xf2, 0xfd,
	0xde, 0x8b, 0x17, 0x11, 0xef, 0x5f, 0xfc, 0x4b, 0xb2, 0xd5, 0x0d, 0xa7, 0xbd, 0x78, 0xde, 0xe3,
	0xaf, 0xaf, 0xe7, 0xcf, 0x6f, 0x93, 0x38, 0x8b, 0xed, 0x96, 0xa2, 0x9d, 0xd7, 0xe4, 0xf3, 0xe3,
	0xce, 0x49, 0xdf, 0xf7, 0xce, 0x0e, 0x7d, 0xaf, 0xeb, 0x77, 0x7a, 0x3d, 0xdf, 0x3b, 0x3b, 0xed,
	0x53, 0xff, 0xb0, 0xef, 0x0e, 0x5e, 0xf9, 0xb4, 0xef, 0x9d, 0x0d, 0xc6, 0xfe, 0x89, 0x77, 0x6c,
	0xb7, 0xc9, 0x0a, 0xa7, 0x41, 0x3a, 0x9f, 0x65, 0xed, 0xda, 0x5e, 0x7d, 0xbf, 0x49, 0x15, 0x69,
	0xef, 0x92, 0xe5, 0x34, 0x4b, 0x4e, 0xd2, 0xab, 0x76, 0x7d, 0xaf, 0xbe, 0xbf, 0x4a, 0x25, 0xe5,
	0xbc, 0x26, 0xeb, 0x5d, 0x96, 0x4c, 0x5f, 0xc6, 0xb3, 0xe9, 0x59, 0xc4, 0x33, 0xfb, 0x19, 0x69,
	0x71, 0x00, 0x5e, 0xb1, 0x99, 0x54, 0x91, 0xd3, 0xb6, 0x4d, 0x96, 0x78, 0x37, 0xca, 0x50, 0x43,
	0x93, 0xe2, 0x37, 0xc8, 0x5f, 0xb8, 0xe9, 0x80, 0xf1, 0xd7, 0xbc, 0xdd, 0xd8, 0xab, 0xef, 0xb7,
	0x68, 0x4e, 0x3b, 0x3f, 0x25, 0x9f, 0x16, 0xe3, 0xfe, 0x66, 0xd8, 0xf5, 0xbb, 0x1d, 0xda, 0x7b,
	0x39, 0x1a, 0xf4, 0xfa, 0x14, 0xe6, 0x01, 0x03, 0x7e, 0x4e, 0x96, 0xd3, 0xbb, 0x01, 0x4f, 0x61,
	0xbc, 0x8d, 0xfd, 0xb5, 0x17, 0xbb, 0xcf, 0x73, 0x2b, 0xe8, 0xc3, 0xa2, 0x52, 0xca, 0xf9, 0x8f,
	0x3a, 0x79, 0x66, 0xea, 0x14, 0x36, 0x90, 0xea, 0x8e, 0x4a, 0xea, 0x9e, 0x17, 0xea, 0xee, 0x6f,
	0xf5, 0xfc, 0x30, 0xe0, 0x83, 0x37, 0x7a, 0x37, 0x30, 0xab, 0x88, 0x4f, 0x6e, 0x86, 0x2c, 0x0c,
	0xa4, 0xbd, 0x72, 0xda, 0xde, 0x23, 0x6b, 0x3c, 0x1d, 0xb0, 0x68, 0x3a, 0x7a, 0x1b, 0x05, 0x89,
	0x9c, 0xb4, 0x0e, 0xa1, 0xc4, 0x38, 0xce, 0xd8, 0x0c, 0x15, 0xb7, 0x97, 0xd0, 0x5c, 0x3a, 0x84,
	0x12, 0xf8, 0x35, 0xe0, 0x21, 0xcf, 0xda, 0x4d, 0x29, 0x51, 0x40, 0xf6, 0x27, 0x84, 0xf0, 0x43,
	0x96, 0x06, 0xde, 0x24, 0x4e, 0x82, 0xf6, 0x32, 0x0a, 0x68, 0x88, 0xfd, 0x31, 0x59, 0xe5, 0x27,
	0xec, 0x9d, 0x60, 0xaf, 0xec, 0xd5, 0xf7, 0x1b, 0xb4, 0x00, 0x9e, 0xfd, 0x36, 0x59, 0xcd, 0x27,
	0x65, 0x6f, 0x93, 0x26, 0x1f, 0xbf, 0xbf, 0x0d, 0xa4, 0x3f, 0x05, 0x81, 0xce, 0x04, 0x27, 0x2b,
	0x67, 0xbe, 0x62, 0x33, 0xe7, 0x29, 0x79, 0x92, 0x9b, 0x69, 0x7c, 0x36, 0x3a, 0x3e, 0xeb, 0x0c,
	0xfd, 0xae, 0x07, 0x36, 0x72, 0xf6, 0xc8, 0x27, 0x39, 0xab, 0xdb, 0x19, 0x76, 0xfb, 0x83, 0xb2,
	0xc4, 0x57, 0xf7, 0x4b, 0x48, 0xef, 0x40, 0x74, 0x7a, 0x01, 0xcb, 0xdc, 0x69, 0x1e, 0x9d, 0x82,
	0x74, 0xbe, 0x5c, 0xd0, 0xf1, 0x07, 0x1b, 0xfd, 0x6d, 0x8d, 0x3c, 0x3a, 0x8a, 0x93, 0xb7, 0x2c,
	0x99, 0x42, 0xac, 0xb8, 0xd1, 0x65, 0x8c, 0x66, 0x01, 0x42, 0x9b, 0x6f, 0x01, 0xe8, 0xba, 0xea,
	0x86, 0x2e, 0x30, 0x77, 0x7a, 0x07, 0x72, 0x18, 0x3c, 0x8d, 0xbd, 0x06, 0x98, 0xbb, 0x40, 0xec,
	0xcf, 0xc8, 0x46, 0x7a, 0x47, 0x83, 0xdb, 0x19, 0x9b, 0x04, 0x28, 0xb2, 0x84, 0x22, 0x26, 0x08,
	0xfa, 0x2f, 0xdc, 0xf4, 0x94, 0xa5, 0x29, 0xba, 0xb4, 0x45, 0x15, 0xe9, 0x1c, 0x11, 0x72, 0xc2,
	0xa3, 0x53, 0xc6, 0x71, 0x94, 0xf7, 0xce, 0xa9, 0x34, 0x8e, 0xfa, 0x5e, 0x63, 0x7f, 0x43, 0x1f,
	0x87, 0xe3, 0x93, 0x9d, 0xce, 0x24, 0x8b, 0x93, 0x4e, 0x7a, 0x93, 0xc7, 0xdb, 0x07, 0x54, 0xe6,
	0xee, 0xaf, 0xeb, 0xee, 0xdf, 0x25, 0xcb, 0x5c, 0x04, 0x4f, 0x63, 0xaf, 0xb6, 0xdf, 0xa4, 0x92,
	0x72, 0xfe, 0xab, 0x41, 0x3e, 0xce, 0x5d, 0x71, 0xe6, 0xf5, 0xa9, 0x4f, 0xfb, 0x83, 0xd1, 0xb1,
	0x9b, 0xfb, 0x03, 0x83, 0x9b, 0x5d, 0xcc, 0x02, 0x2f, 0x63, 0x99, 0xb2, 0xb1, 0x0e, 0xd9, 0x9f,
	0x93, 0xcd, 0xf4, 0xee, 0x25, 0x8b, 0xa6, 0xc6, 0x3c, 0x9a, 0xb4, 0x84, 0xda, 0xc7, 0x64, 0x2b,
	0xbd, 0x03, 0x07, 0xc6, 0x85, 0x03, 0xd1, 0xf4, 0x6b, 0x2f, 0x9e, 0x16, 0x79, 0x5b, 0xf2, 0x30,
	0xad, 0xb6, 0xb1, 0x7f, 0x48, 0x1e, 0xa7, 0x77, 0xb9, 0x39, 0xf2, 0x5e, 0x85, 0x8b, 0x16, 0xb1,
	0x30, 0xbb, 0xb0, 0x46, 0x01, 0xd2, 0x6e, 0xa2, 0x05, 0x34, 0x04, 0xf8, 0x17, 0x6e, 0x3a, 0x9e,
	0xc7, 0xc7, 0x73, 0x16, 0xb5, 0x97, 0xf7, 0x6a, 0xfb, 0x2d, 0xaa, 0x21, 0xb6, 0x43, 0xd6, 0x2f,
	0xbc, 0x60, 0x76, 0x79, 0xc2, 0xa3, 0xab, 0x53, 0xc6, 0xdb, 0x2b, 0x28, 0x61, 0x60, 0xf6, 0x1f,
	0x12, 0x2b, 0xbd, 0x2b, 0x9c, 0x8e, 0x43, 0x6a, 0xe1, 0xec, 0xb6, 0x8b, 0xd9, 0x15, 0x7c, 0x5a,
	0x91, 0x46, 0x9f, 0x76, 0xe7, 0xc9, 0x61, 0xc0, 0xdb, 0xab, 0x38, 0x44, 0x45, 0xda, 0xbf, 0x4f,
	0x56, 0xd3, 0x3b, 0x96, 0xde, 0xa0, 0xc9, 0x08, 0x2a, 0xfd, 0xb4, 0x50, 0xba, 0x30, 0x42, 0x68,
	0xd1, 0xc2, 0xf9, 0x9b, 0x1a, 0x71, 0x8a, 0x7a, 0xd8, 0x1f, 0xf6, 0xfc, 0x41, 0x67, 0xd8, 0x1b,
	0x9d, 0x0f, 0xfb, 0x14, 0x4a, 0xb4, 0x72, 0xf5, 0x01, 0xb1, 0x38, 0xe8, 0x88, 0x41, 0x87, 0x11,
	0x5c, 0x15, 0x5c, 0x04, 0xee, 0xa4, 0x12, 0xb8, 0x13, 0xcd, 0xe2, 0x33, 0xc6, 0x5f, 0x5f, 0x0b,
	0x8b, 0x43, 0xcc, 0x6d, 0x50, 0x0d, 0x81, 0x28, 0xbd, 0xa0, 0x2c, 0x9a, 0xb6, 0x97, 0xd0, 0x94,
	0x82, 0x70, 0xee, 0x48, 0xdb, 0x18, 0xa7, 0x3e, 0x3a, 0xb3, 0xc7, 0x5a, 0xa5, 0x47, 0x4c, 0x59,
	0x61, 0xd1, 0x31, 0x0f, 0x83, 0x54, 0x46, 0xa1, 0x09, 0x82, 0x8d, 0xd3, 0xbb, 0x1e, 0x07, 0x27,
	0x36, 0x50, 0x85, 0x22, 0x9d, 0xdf, 0xd2, 0x6a, 0xd2, 0x89, 0x3b, 0x3c, 0x3e, 0xed, 0xb8, 0xb2,
	0xd4, 0x61, 0xf2, 0x08, 0x9d, 0xc2, 0x1c, 0x92, 0x72, 0x6e, 0x16, 0x34, 0xf9, 0x50, 0x19, 0xfb,
	0xa0, 0xe5, 0x8a, 0xce, 0x1a, 0x46, 0x67, 0x7f, 0x59, 0x27, 0x9b, 0x5d, 0xcf, 0x3f, 0x4b, 0x83,
	0x64, 0x74, 0x1b, 0x24, 0x32, 0xf3, 0x42, 0xf9, 0x6d, 0xf4, 0x55, 0x42, 0x21, 0x7c, 0x15, 0x72,
	0xc2, 0xd2, 0x1b, 0x59, 0x19, 0x0c, 0xec, 0x83, 0x15, 0xd1, 0xa8, 0xb4, 0x4b, 0x18, 0x9e, 0x5a,
	0xa5, 0xdd, 0x27, 0x8f, 0x2e, 0x3a, 0xe9, 0xcd, 0x28, 0xf9, 0x29, 0x67, 0xd1, 0x15, 0x04, 0x0b,
	0x66, 0x59, 0x8b, 0x96, 0x61, 0x34, 0xcc, 0x98, 0x5d, 0xc1, 0x52, 0xb4, 0x2c, 0x83, 0x5c, 0x90,
	0xa2, 0x8e, 0x60, 0x4e, 0xca, 0x1a, 0xdb, 0x5e, 0x51, 0x75, 0x44, 0x47, 0xd1, 0x40, 0x62, 0xa5,
	0x6d, 0xc9, 0x52, 0x86, 0x94, 0xf3, 0xaf, 0x75, 0xb2, 0xeb, 0x75, 0x7d, 0x39, 0x29, 0xb1, 0x0f,
	0x1a, 0xc6, 0x19, 0xbf, 0x7c, 0x5f, 0x31, 0x40, 0x6d, 0x81, 0x01, 0xaa, 0xc6, 0x04, 0x33, 0x6d,
	0x54, 0x8c, 0xf9, 0xeb, 0x32, 0x14, 0xe8, 0x39, 0x0c, 0x78, 0x37, 0x9e, 0x47, 0x99, 0x34, 0x55,
	0x01, 0xe8, 0x66, 0x5c, 0xf9, 0x90, 0x19, 0x5b, 0x1f, 0x30, 0xe3, 0xaa, 0x61, 0xc6, 0x1f, 0x90,
	0x8d, 0x1e, 0x4f, 0x61, 0xc0, 0x60, 0xbc, 0x49, 0x50, 0x9a, 0x70, 0xad, 0x3c, 0x61, 0xe7, 0x97,
	0x35, 0xb2, 0x5d, 0xd8, 0xbd, 0x1b, 0x4f, 0x83, 0x7b, 0xad, 0xde, 0xa8, 0x58, 0x7d, 0x8f, 0xac,
	0x85, 0xe7, 0x8c, 0x67, 0x86, 0xc9, 0x75, 0x08, 0x2c, 0xa6, 0x5a, 0x40, 0x22, 0x8c, 0xe6, 0x19,
	0x26, 0xc6, 0x06, 0x2d, 0xc3, 0xf6, 0x4f, 0xc8, 0x7a, 0x7a, 0x27, 0x06, 0x9d, 0x2f, 0x08, 0x6b,
	0x2f, 0x9e, 0x14, 0x85, 0xd2, 0x98, 0x17, 0x35, 0x84, 0x9d, 0xaf, 0xc8, 0xb6, 0xcc, 0xae, 0x1e,
	0x4f, 0xd3, 0x78, 0xf6, 0x26, 0xe8, 0xdc, 0xde, 0xce, 0xc4, 0x24, 0xf0, 0x4b, 0xcb, 0xb0, 0x0d,
	0x6a, 0x60, 0xce, 0x94, 0x3c, 0x93, 0x6d, 0x3b, 0x51, 0xfa, 0xb6, 0xac, 0xe1, 0x39, 0xb1, 0x43,
	0x81, 0x57, 0xf5, 0x2c, 0xe0, 0x80, 0x63, 0xc2, 0xce, 0x55, 0x12, 0x88, 0x15, 0xbc, 0x45, 0x25,
	0xe5, 0xfc, 0xbc, 0x4e, 0x9e, 0x79, 0xdd, 0xea, 0x10, 0x35, 0x6b, 0x7f, 0x60, 0xa0, 0x62, 0x28,
	0xa0, 0x4c, 0x03, 0x53, 0x59, 0x83, 0x16, 0x70, 0xec, 0x1f, 0x91, 0x9d, 0xb0, 0xc7, 0x53, 0x56,
	0x69, 0x22, 0x6a, 0xe7, 0x62, 0xa6, 0xdd, 0x23, 0x9b, 0xe1, 0x11, 0x8f, 0xd8, 0xac, 0x17, 0x4c,
	0x78, 0xca, 0xe3, 0x08, 0xb7, 0xc4, 0x9b, 0x2f, 0x3e, 0x2e, 0x3c, 0x81, 0xdb, 0x07, 0x43, 0x86,
	0x96, 0xda, 0x40, 0x3d, 0x17, 0x63, 0x57, 0x5e, 0x6f, 0xe2, 0x84, 0x4c, 0xd0, 0xf9, 0x87, 0x7a,
	0xee, 0x37, 0xd4, 0xd9, 0xbd, 0x66, 0x19, 0xfd, 0xe3, 0x34, 0xbb, 0xa7, 0x36, 0x6e, 0x2c, 0xac,
	0x8d, 0xe3, 0xe0, 0x5d, 0xd6, 0x8d, 0xa3, 0x2c, 0xc0, 0xc3, 0x4e, 0x6d, 0x7f, 0x95, 0x1a, 0x18,
	0xea, 0x3a, 0xe4, 0x11, 0x4b, 0xde, 0x2b, 0x29, 0x58, 0xd0, 0xd6, 0x69, 0x09, 0x45, 0x5d, 0xf2,
	0x1b, 0xc6, 0x87, 0xd9, 0x0f, 0x2e, 0xd0, 0x30, 0x38, 0x6a, 0x84, 0x6e, 0xc8, 0xae, 0x02, 0x57,
	0x64, 0xfe, 0x06, 0xcd, 0x69, 0xe4, 0x9d, 0x04, 0x53, 0xce, 0xdc, 0x29, 0x66, 0x3c, 0xf0, 0x24,
	0x8d, 0xe6, 0x18, 0xb3, 0xe4, 0x2a, 0x50, 0xa9, 0xb2, 0x82, 0x02, 0x26, 0x28, 0x82, 0x20, 0xe2,
	0x21, 0xcb, 0x78, 0x1c, 0xb9, 0x53, 0xac, 0x90, 0x18, 0x04, 0x05, 0xe6, 0xfc, 0x42, 0xd4, 0x49,
	0xc3, 0x64, 0x32, 0x86, 0xfe, 0xdf, 0x68, 0xf7, 0x19, 0xed, 0xe7, 0xb5, 0x3c, 0xce, 0x68, 0xc0,
	0xa6, 0xef, 0x8f, 0x59, 0x18, 0x60, 0x9c, 0x41, 0x63, 0x44, 0x4a, 0x69, 0xa7, 0x61, 0x98, 0xd1,
	0x50, 0x78, 0x54, 0xaa, 0x49, 0xaa, 0xb4, 0x2d, 0x6d, 0xdc, 0xb3, 0x2d, 0x55, 0x9b, 0xce, 0xa5,
	0x7c, 0x5b, 0x2a, 0x11, 0xe7, 0xf7, 0x72, 0x47, 0xe6, 0x63, 0xd2, 0x8a, 0xc1, 0x07, 0x46, 0xe5,
	0xfc, 0xb3, 0xa8, 0xdb, 0x67, 0x69, 0x00, 0xc7, 0x4c, 0xd8, 0x28, 0xca, 0xc6, 0x6d, 0xb2, 0x12,
	0x1a, 0xed, 0x14, 0x69, 0x7f, 0x49, 0x48, 0x08, 0xdd, 0x89, 0xb3, 0x40, 0x1d, 0xb3, 0xfa, 0x71,
	0x91, 0xd5, 0x39, 0x8b, 0x6a, 0x62, 0x62, 0x19, 0xb8, 0xbc, 0x1c, 0xf0, 0x28, 0x38, 0x9a, 0xb1,
	0x2b, 0x79, 0x82, 0x36, 0x30, 0xfb, 0xc7, 0x64, 0x35, 0x54, 0xa3, 0xc0, 0x6a, 0xb1, 0xf6, 0xa2,
	0x5d, 0xe8, 0x3d, 0x9d, 0xb1, 0xf7, 0x41, 0xa2, 0xf8, 0xb4, 0x10, 0x75, 0xfe, 0x6c, 0x89, 0x6c,
	0x9a, 0x5c, 0x1c, 0x3d, 0x74, 0xee, 0xf6, 0xd4, 0xce, 0x4b, 0x92, 0xa2, 0xb0, 0x4e, 0x26, 0x5c,
	0x9d, 0x06, 0x25, 0x05, 0x2b, 0x6d, 0x38, 0x54, 0xc7, 0xff, 0x06, 0x1e, 0xff, 0x0b, 0x00, 0xf5,
	0x1d, 0xb1, 0x49, 0xe0, 0xf6, 0x70, 0x60, 0xab, 0x54, 0x91, 0x70, 0xa4, 0x0e, 0xbd, 0xe0, 0x9d,
	0x3c, 0xce, 0xe3, 0x37, 0xea, 0x82, 0xee, 0x8e, 0xe3, 0xd9, 0x14, 0x8f, 0xf1, 0x0d, 0x5a, 0x00,
	0x68, 0x0a, 0x51, 0xbf, 0x59, 0x18, 0x47, 0x53, 0x3c, 0xc8, 0xc3, 0x8a, 0xa8, 0x61, 0xf6, 0x67,
	0x64, 0x3d, 0xec, 0x05, 0xe9, 0x24, 0xe1, 0xb7, 0x10, 0x7b, 0xed, 0x16, 0x74, 0xfa, 0xd5, 0x77,
	0xa8, 0x81, 0x62, 0x3f, 0xaf, 0xf8, 0xed, 0x20, 0x78, 0x13, 0xcc, 0xe4, 0x02, 0x5e, 0x00, 0x10,
	0x38, 0xa8, 0xf3, 0x34, 0xe6, 0x51, 0xd6, 0x26, 0x38, 0x0c, 0x0d, 0x29, 0x6c, 0x74, 0xdb, 0x5e,
	0x93, 0x73, 0x12, 0x24, 0x66, 0x13, 0x7c, 0x0e, 0xa2, 0xab, 0xf6, 0x3a, 0xb6, 0xcb, 0xe9, 0x82,
	0xc7, 0xb2, 0xf6, 0x86, 0xce, 0x63, 0x78, 0x83, 0x02, 0xdd, 0xe3, 0xa6, 0x67, 0x13, 0x87, 0x93,
	0xd3, 0xd8, 0x1b, 0xc4, 0xe6, 0xe0, 0x4d, 0xfb, 0x91, 0xd8, 0xab, 0x48, 0x52, 0xe4, 0x67, 0x9c,
	0xb1, 0x19, 0xd0, 0xdd, 0x28, 0x6b, 0x5b, 0xc8, 0x37, 0x41, 0xb4, 0x1a, 0x7c, 0x9f, 0xf3, 0x88,
	0x42, 0xdc, 0x6d, 0xa1, 0x90, 0x81, 0x39, 0x7f, 0x57, 0x27, 0x2d, 0x0c, 0x52, 0x15, 0x02, 0x8b,
	0x03, 0xf8, 0x93, 0x4a, 0x00, 0x37, 0x7f, 0xd5, 0x58, 0xad, 0x7d, 0xcb, 0x58, 0xb5, 0xbf, 0x20,
	0x5b, 0x9c, 0x06, 0x21, 0xe3, 0xe2, 0x4c, 0x2c, 0x36, 0x76, 0x22, 0x76, 0xaa, 0x0c, 0xed, 0x18,
	0xb0, 0xac, 0x1f, 0x03, 0xc0, 0x64, 0xfc, 0x25, 0x7b, 0x13, 0xa0, 0x85, 0xce, 0x79, 0x24, 0x63,
	0xc8, 0x04, 0x71, 0xf3, 0xd8, 0x99, 0x4e, 0xd5, 0x36, 0x59, 0xdc, 0x8b, 0x28, 0xc0, 0xf9, 0x97,
	0x65, 0x62, 0xa5, 0x19, 0x16, 0xff, 0x4e, 0x96, 0x25, 0xfc, 0x62, 0x9e, 0x05, 0x70, 0xfa, 0x43,
	0x83, 0xcf, 0x93, 0x24, 0x88, 0x26, 0xef, 0xb5, 0x1b, 0x95, 0x0a, 0x0e, 0x7b, 0xb2, 0x53, 0xf6,
	0x9e, 0xc6, 0x71, 0x08, 0xc6, 0xd7, 0x6e, 0x1b, 0xca, 0x30, 0x0c, 0xf7, 0x74, 0xc6, 0x22, 0xd4,
	0x80, 0x13, 0x16, 0x87, 0x1a, 0x13, 0x84, 0xd3, 0x20, 0x5a, 0x0f, 0x33, 0xac, 0x41, 0x05, 0x01,
	0xce, 0xea, 0x47, 0x59, 0x90, 0x88, 0x7b, 0x8b, 0xa6, 0x88, 0xe2, 0x02, 0x01, 0xfe, 0x20, 0x60,
	0x6f, 0xb4, 0x3b, 0xb3, 0x06, 0xd5, 0x10, 0xd8, 0x5b, 0x1e, 0x06, 0xdc, 0xbb, 0x9e, 0x8b, 0x5b,
	0x37, 0x71, 0x6b, 0xa6, 0x43, 0xa0, 0xa1, 0x7b, 0xcd, 0x78, 0x22, 0x86, 0x26, 0xec, 0xa4, 0x21,
	0xf6, 0x8f, 0xc9, 0xae, 0x9b, 0x76, 0x66, 0xb3, 0xf8, 0x2d, 0x76, 0xdb, 0xb9, 0xcc, 0x30, 0x50,
	0x92, 0xac, 0xbd, 0x8a, 0xb2, 0xf7, 0x70, 0xc1, 0xfc, 0x68, 0x5d, 0xb4, 0x8c, 0x48, 0xbf, 0x02,
	0x80, 0x5c, 0x51, 0x36, 0xc2, 0xf4, 0x6b, 0xd0, 0x9c, 0x86, 0x11, 0x79, 0x41, 0xf2, 0x26, 0x48,
	0x90, 0x2b, 0x32, 0x50, 0x43, 0x30, 0xef, 0xc1, 0x6e, 0xa8, 0x79, 0x43, 0x38, 0x36, 0x07, 0x60,
	0xbf, 0xc6, 0x27, 0x71, 0x74, 0xc9, 0x93, 0x30, 0x3f, 0xb0, 0xcb, 0x94, 0x04, 0xc9, 0xc5, 0x4c,
	0x11, 0xf4, 0x40, 0x61, 0x0d, 0x98, 0xb6, 0x1f, 0x61, 0xaf, 0x06, 0x06, 0xc1, 0x2b, 0xe2, 0x65,
	0xfa, 0x86, 0x45, 0x93, 0xe0, 0x94, 0x25, 0x2c, 0x6c, 0x5b, 0x58, 0x3b, 0xaa, 0x0c, 0x4c, 0x33,
	0x44, 0xb1, 0xa4, 0x6e, 0xa1, 0x98, 0x86, 0x60, 0x82, 0xc2, 0x94, 0xdd, 0x69, 0xdb, 0x96, 0x35,
	0x5a, 0x90, 0x58, 0x47, 0x50, 0xce, 0x9d, 0xb6, 0x1f, 0x8b, 0xfb, 0x68, 0x45, 0x63, 0xab, 0xaf,
	0x79, 0x34, 0x75, 0xa7, 0xed, 0x6d, 0xd9, 0x4a, 0x90, 0xc8, 0xe9, 0xce, 0xe6, 0x17, 0xee, 0xb4,
	0xbd, 0x23, 0x39, 0x82, 0x44, 0x7b, 0xb9, 0xa9, 0x7b, 0x7b, 0xce, 0x92, 0xa8, 0xbd, 0x2b, 0xed,
	0xa5, 0x00, 0x1c, 0xa7, 0x9b, 0x1e, 0xdf, 0xa6, 0xc8, 0x7e, 0x22, 0xcb, 0x41, 0x8e, 0xc0, 0x68,
	0x26, 0xb3, 0xf9, 0x05, 0xce, 0xa2, 0x8d, 0x7b, 0x9c, 0x9c, 0x76, 0xfe, 0xb7, 0x21, 0x9d, 0x8c,
	0xc9, 0xdd, 0x23, 0x8f, 0x42, 0x33, 0xa1, 0x30, 0x79, 0xd6, 0x5e, 0x3c, 0x2b, 0x4a, 0x43, 0x39,
	0xe5, 0x68, 0xb9, 0x09, 0xe4, 0x60, 0x98, 0xdf, 0xe2, 0x18, 0x37, 0x97, 0x15, 0x1c, 0x4f, 0x4e,
	0xda, 0xc5, 0x9c, 0xc8, 0x2b, 0x1d, 0xb2, 0x7f, 0x44, 0xd6, 0xd2, 0x3b, 0x55, 0x14, 0x53, 0x79,
	0x1c, 0xb2, 0x8b, 0xf1, 0x28, 0x16, 0xd5, 0xc5, 0xd0, 0x26, 0x45, 0xba, 0x8a, 0x4d, 0xb7, 0x86,
	0xe0, 0xbe, 0x0e, 0x8e, 0x67, 0xb8, 0x95, 0xc0, 0x1d, 0x9b, 0xc8, 0xbc, 0x12, 0x8a, 0x51, 0x05,
	0x48, 0x3f, 0x9a, 0xa2, 0xd4, 0x8a, 0x8c, 0x2a, 0x0d, 0xb3, 0x7f, 0x48, 0x1e, 0x87, 0x9d, 0xd9,
	0x0c, 0x20, 0xed, 0x2c, 0x87, 0x89, 0xd8, 0xa0, 0x8b, 0x58, 0x78, 0x7e, 0xf6, 0xae, 0xe3, 0xb7,
	0xea, 0xb5, 0x20, 0x48, 0x70, 0xf5, 0x83, 0xf3, 0xb3, 0x09, 0x43, 0xc4, 0x86, 0xae, 0x97, 0xcd,
	0x2f, 0x2f, 0x67, 0x41, 0x7e, 0x1e, 0x27, 0xb8, 0x74, 0x54, 0x19, 0x30, 0xab, 0x0b, 0x37, 0xf5,
	0x58, 0xd4, 0x63, 0x87, 0x60, 0x1c, 0xd6, 0x5e, 0x43, 0xb5, 0x25, 0xd4, 0x71, 0x89, 0xed, 0x75,
	0xfd, 0xdc, 0xef, 0x72, 0xc7, 0xf4, 0xa5, 0x8a, 0x77, 0x5c, 0x13, 0x84, 0xe3, 0x1f, 0x97, 0x4e,
	0x3b, 0x68, 0x69, 0x4d, 0xcc, 0x71, 0xc9, 0x53, 0x7d, 0x1b, 0xde, 0x73, 0xd3, 0x90, 0xa7, 0xa9,
	0xd4, 0xf8, 0x05, 0xd9, 0xba, 0x70, 0x53, 0xb0, 0x7a, 0x3f, 0x9a, 0xf6, 0x38, 0xb2, 0x50, 0x71,
	0x8b, 0x56, 0x19, 0xce, 0x0e, 0x79, 0x5c, 0x1c, 0x5e, 0x01, 0x41, 0x8d, 0xce, 0x9f, 0xd7, 0xc8,
	0x1a, 0x2e, 0x09, 0x34, 0x98, 0xc4, 0x09, 0x6e, 0x3f, 0xf8, 0x09, 0x7b, 0x77, 0x32, 0xcf, 0xf8,
	0xed, 0x2c, 0x48, 0xd4, 0x35, 0x88, 0x8e, 0xe1, 0x83, 0xd0, 0x61, 0x1c, 0x87, 0xc5, 0xc3, 0x4f,
	0x4e, 0xe3, 0xaa, 0x72, 0xce, 0x23, 0xfd, 0x76, 0xaa, 0x00, 0x50, 0xbb, 0x77, 0x9b, 0xf0, 0xe8,
	0x4a, 0x08, 0x2c, 0x49, 0xed, 0x1a, 0xe6, 0xfc, 0x55, 0x8d, 0xd8, 0xa7, 0xf1, 0x8d, 0x28, 0x2b,
	0xe7, 0x3c, 0xea, 0x05, 0x19, 0xe3, 0xb3, 0x07, 0x16, 0xec, 0x7c, 0xa7, 0xa2, 0xee, 0x06, 0x14,
	0x89, 0x99, 0x7d, 0xce, 0x23, 0x75, 0xa9, 0x2d, 0x76, 0x5a, 0x0a, 0xb0, 0x7f, 0x17, 0x4e, 0x28,
	0xc5, 0xd4, 0xe5, 0x3a, 0xbd, 0xa3, 0xf9, 0xa4, 0x60, 0x52, 0x43, 0xd4, 0xf9, 0xd3, 0x1a, 0x6e,
	0xab, 0xc7, 0x1d, 0xa8, 0xd7, 0x72, 0x41, 0x95, 0x5e, 0x81, 0x93, 0xad, 0x31, 0x72, 0xf9, 0xee,
	0xa4, 0x9d, 0x6c, 0xab, 0xb3, 0xa3, 0xa5, 0x36, 0x60, 0xa8, 0x34, 0x4b, 0x5e, 0xf1, 0x69, 0x10,
	0xf7, 0x58, 0xc6, 0xf0, 0xf4, 0xb4, 0x4e, 0x0d, 0xcc, 0xd9, 0x24, 0xeb, 0x5e, 0xd7, 0x07, 0x37,
	0xe3, 0x8a, 0xe2, 0xfc, 0x53, 0x8d, 0xec, 0xa0, 0x6a, 0x2f, 0xc8, 0xb2, 0x59, 0x10, 0x06, 0x51,
	0x26, 0xb5, 0x81, 0xc3, 0xc0, 0x07, 0xc5, 0x7a, 0x9d, 0xd3, 0xba, 0x5d, 0xeb, 0xa6, 0x5d, 0x61,
	0x2f, 0xfc, 0x8a, 0xcd, 0xe6, 0xaa, 0x70, 0x48, 0xaa, 0xfa, 0x96, 0x55, 0x2b, 0xbf, 0x65, 0x99,
	0x2f, 0x55, 0xea, 0x2e, 0xbd, 0x78, 0xa9, 0x02, 0xcd, 0xa2, 0x24, 0xc9, 0x8d, 0x8b, 0xa0, 0x1c,
	0x46, 0x56, 0xa0, 0x6f, 0x2a, 0x2e, 0x61, 0x1f, 0xd8, 0x9f, 0xa9, 0x47, 0x03, 0x75, 0x5a, 0xd2,
	0x90, 0xaa, 0xd3, 0x9b, 0x9a, 0xd3, 0xe1, 0x90, 0xb6, 0x0e, 0x8a, 0x8e, 0xf8, 0xd5, 0xb5, 0xea,
	0xe8, 0x9e, 0x5b, 0x58, 0xd8, 0x5e, 0x89, 0x2d, 0x87, 0x3c, 0x0b, 0x08, 0xca, 0xbc, 0x75, 0x53,
	0x21, 0x9e, 0xdf, 0xba, 0x3d, 0x23, 0xad, 0xbc, 0x77, 0xb1, 0x55, 0xc9, 0x69, 0xf1, 0xc2, 0x82,
	0xf3, 0x6e, 0x4a, 0x8d, 0x62, 0xde, 0xff, 0x58, 0x23, 0xeb, 0xca, 0x8f, 0xf9, 0xd3, 0x8d, 0xdc,
	0x0e, 0xd7, 0xe4, 0xd5, 0x9d, 0xdc, 0x0e, 0x83, 0x2b, 0x31, 0xb3, 0xdf, 0xdd, 0x62, 0x50, 0x80,
	0x2b, 0x25, 0x8d, 0x8e, 0xe9, 0x4c, 0xa7, 0x8a, 0xdd, 0x90, 0x8e, 0x29, 0x20, 0x31, 0xd9, 0x8c,
	0x25, 0xb9, 0xdb, 0x14, 0x89, 0x7a, 0xe1, 0x13, 0x1a, 0x36, 0xa5, 0x5e, 0x49, 0x2b, 0xbd, 0x8a,
	0xbd, 0x5c, 0xe8, 0x95, 0x90, 0xf3, 0xf7, 0x75, 0x42, 0x64, 0x2c, 0xf6, 0xa3, 0xca, 0xba, 0x53,
	0xab, 0xae, 0x3b, 0x36, 0x59, 0x82, 0x08, 0xcc, 0x9f, 0x1a, 0x61, 0x43, 0xfa, 0x03, 0xb2, 0x2a,
	0x16, 0x19, 0x1a, 0xa4, 0xf2, 0xd1, 0x67, 0xcb, 0x5c, 0x89, 0x68, 0x90, 0xd2, 0x42, 0xc6, 0xfe,
	0x8a, 0xac, 0xa7, 0x77, 0xe2, 0x12, 0x57, 0xbb, 0xcc, 0xdb, 0x35, 0xdb, 0x28, 0x47, 0x53, 0x43,
	0x56, 0x38, 0x91, 0x4d, 0x6e, 0xf0, 0x10, 0x06, 0x13, 0x6e, 0xd0, 0x02, 0x10, 0x8f, 0xb1, 0x6c,
	0x72, 0xd3, 0x7f, 0x77, 0xcb, 0x71, 0xdf, 0x28, 0x66, 0x5c, 0x40, 0xf6, 0x1f, 0x90, 0xcd, 0x34,
	0xd3, 0x7d, 0x86, 0xf7, 0x06, 0x46, 0xef, 0x3a, 0x97, 0x96, 0xa4, 0x9d, 0x3f, 0xa9, 0x11, 0xfb,
	0x04, 0x73, 0x39, 0x63, 0xb7, 0xc1, 0xb7, 0x38, 0x96, 0xfc, 0x0e, 0x21, 0xf9, 0x39, 0x21, 0x45,
	0xbb, 0x3d, 0x74, 0xa6, 0xd0, 0x64, 0xb5, 0xab, 0x85, 0x86, 0x7e, 0xb5, 0xe0, 0xf8, 0x64, 0x4d,
	0xde, 0x12, 0xfc, 0x6a, 0x2f, 0x90, 0xf7, 0x3e, 0x47, 0xfc, 0xf5, 0x12, 0xb1, 0x4f, 0x60, 0xd6,
	0xf9, 0x3c, 0x7f, 0x0d, 0xfb, 0xa0, 0x8d, 0x05, 0xfb, 0x20, 0xa8, 0xc9, 0x38, 0x06, 0x65, 0x67,
	0x19, 0x5e, 0x5a, 0x4d, 0xae, 0xfa, 0x82, 0x96, 0xda, 0xd8, 0x7f, 0x54, 0xdc, 0x32, 0x8b, 0x65,
	0x40, 0xed, 0x97, 0xf6, 0xb4, 0x88, 0x5b, 0xf8, 0xb8, 0x40, 0xcb, 0x0d, 0xed, 0x73, 0xb2, 0x2b,
	0x16, 0x94, 0x72, 0xad, 0x6e, 0x37, 0xcb, 0x4f, 0x77, 0x0b, 0x4b, 0x3a, 0xbd, 0xa7, 0xf9, 0x7d,
	0x0f, 0x9f, 0xcb, 0xe8, 0xb4, 0x6f, 0xf1, 0xf0, 0xb9, 0x52, 0xb9, 0x61, 0xfa, 0x89, 0x7c, 0x34,
	0x83, 0x40, 0xd1, 0x5e, 0x2c, 0x77, 0x8c, 0x17, 0x4b, 0x15, 0x45, 0xd4, 0x94, 0xc5, 0x44, 0xea,
	0xce, 0x93, 0xf1, 0x3c, 0x89, 0x5e, 0x31, 0x75, 0x0b, 0xa1, 0x43, 0xce, 0x2f, 0x6a, 0x64, 0xf3,
	0x24, 0x5f, 0xf8, 0x16, 0x25, 0x41, 0xb3, 0x48, 0x02, 0xa3, 0xb6, 0xd7, 0xcb, 0x0b, 0xba, 0x76,
	0xad, 0xd3, 0xb8, 0xef, 0x5a, 0x67, 0xe9, 0xfe, 0x6b, 0x9d, 0xe6, 0x03, 0xd7, 0x3a, 0xcb, 0xc6,
	0xb5, 0x8e, 0xf3, 0x84, 0xec, 0x74, 0x3d, 0xb1, 0xc5, 0x1b, 0xb0, 0x34, 0xcb, 0x87, 0xef, 0x5c,
	0x91, 0x8f, 0xd4, 0xde, 0xcf, 0x60, 0xc8, 0xcd, 0xc1, 0x4b, 0x62, 0x87, 0x06, 0x2e, 0x37, 0x83,
	0x0d, 0x33, 0x99, 0x4d, 0x7b, 0xd0, 0x05, 0x6d, 0x0e, 0x7e, 0xd9, 0x24, 0x1b, 0x01, 0x1e, 0x8f,
	0x8f, 0x12, 0x16, 0x06, 0x6e, 0xcf, 0xfe, 0xbe, 0xf6, 0x6b, 0x0d, 0xec, 0xf4, 0xbc, 0x3e, 0xf5,
	0x7b, 0xae, 0xe7, 0x8d, 0x06, 0xaf, 0xfa, 0x7e, 0xe7, 0xf4, 0x74, 0xf0, 0x8d, 0x55, 0xb3, 0x0f,
	0xb4, 0xff, 0x86, 0x94, 0x50, 0x67, 0xe8, 0x9d, 0x57, 0x65, 0xeb, 0x86, 0x2c, 0xec, 0x42, 0xab,
	0x0a, 0xfd, 0xe1, 0x68, 0xec, 0x1e, 0x7d, 0x63, 0x35, 0xec, 0x4f, 0xc9, 0x47, 0x15, 0xbd, 0xe3,
	0xce, 0xe1, 0xa0, 0xef, 0x77, 0x5f, 0x76, 0xc6, 0xd6, 0x92, 0xfd, 0xb9, 0xfe, 0xbc, 0xdc, 0x2d,
	0x0b, 0x28, 0x45, 0xcd, 0x85, 0x8a, 0x68, 0xbf, 0xd3, 0xfb, 0xc6, 0x07, 0xd8, 0x5a, 0x5e, 0xa8,
	0xa8, 0x10, 0x50, 0x8a, 0x56, 0xec, 0xdf, 0x24, 0xdf, 0xaf, 0xc8, 0xb9, 0xc3, 0xa3, 0x11, 0xf4,
	0x37, 0x3c, 0xce, 0x05, 0x5b, 0xf6, 0xf7, 0xc8, 0x77, 0xef, 0x19, 0x99, 0x14, 0x59, 0xb5, 0x3f,
	0x23, 0x7b, 0xba, 0x88, 0xe0, 0xf6, 0x5c, 0xef, 0xc4, 0xf5, 0x3c, 0x25, 0x45, 0xec, 0x3d, 0xed,
	0x37, 0x09, 0xa5, 0x08, 0x5f, 0xa7, 0xa5, 0xc4, 0x9a, 0xed, 0xe8, 0xff, 0xc3, 0x14, 0x2e, 0x42,
	0x35, 0xa8, 0xd4, 0x5a, 0x2f, 0xcf, 0x4f, 0xf4, 0x35, 0x1e, 0x8d, 0x3b, 0x03, 0xff, 0xdc, 0x1d,
	0x2a, 0x5d, 0x8f, 0xec, 0xdf, 0x20, 0xdf, 0xd3, 0x75, 0x09, 0xb9, 0x41, 0xc7, 0x1b, 0xa3, 0x58,
	0xaf, 0x3f, 0xee, 0xb8, 0x03, 0xcb, 0xb2, 0xbf, 0x20, 0xfb, 0x55, 0x75, 0x25, 0x31, 0xa5, 0x74,
	0xcb, 0x7e, 0x42, 0x1e, 0x2f, 0x78, 0xe0, 0xb6, 0x6c, 0xfb, 0x63, 0xed, 0xd5, 0xbd, 0xf4, 0x0b,
	0x88, 0xf5, 0xd8, 0xfe, 0x44, 0xfb, 0x03, 0xab, 0xf2, 0x27, 0x90, 0xb5, 0x6d, 0xa8, 0xd5, 0x18,
	0x3b, 0x07, 0x7f, 0xd1, 0x20, 0x6b, 0x22, 0x8a, 0xbd, 0xf9, 0x85, 0xdb, 0xb3, 0x9f, 0x91, 0x5d,
	0x7d, 0xb4, 0xe2, 0x7b, 0xdc, 0xa1, 0x63, 0x6b, 0x6a, 0x28, 0xe9, 0x7a, 0xfe, 0xe8, 0xb4, 0x4f,
	0x3b, 0xe3, 0xbe, 0x15, 0x18, 0x96, 0x80, 0xfa, 0x2b, 0x18, 0xea, 0x1f, 0x38, 0x39, 0xb7, 0x4b,
	0x23, 0x3f, 0x34, 0xb1, 0xee, 0xa8, 0x97, 0x7b, 0xfa, 0xca, 0x6e, 0x93, 0xed, 0xca, 0x00, 0xfa,
	0xc3, 0x9e, 0x75, 0x6d, 0x72, 0x8a, 0xff, 0x0e, 0x2c, 0xbe, 0xd0, 0x68, 0x5e, 0xd7, 0xfa, 0x99,
	0xe1, 0xee, 0x85, 0xbf, 0x54, 0x58, 0x37, 0x0b, 0x4d, 0xe3, 0x75, 0xad, 0xd9, 0x43, 0x36, 0xf5,
	0xba, 0x56, 0x68, 0x9a, 0x4a, 0xff, 0x7f, 0xcd, 0x8a, 0x8c, 0x24, 0xaa, 0xfe, 0x65, 0x67, 0xc5,
	0xe5, 0x20, 0x5b, 0xfc, 0xfb, 0xa0, 0x75, 0x7b, 0x70, 0x08, 0x45, 0xc6, 0xbb, 0xc6, 0x73, 0xb0,
	0x3c, 0x2d, 0x6c, 0x1b, 0x80, 0x7f, 0xde, 0x1f, 0xd2, 0xd1, 0x99, 0x55, 0x83, 0x89, 0x98, 0x9c,
	0xc3, 0xce, 0x68, 0xe0, 0x5a, 0xf5, 0x83, 0x7f, 0xaf, 0x81, 0x8f, 0xf1, 0x60, 0x20, 0x7f, 0x33,
	0xb2, 0x35, 0xd2, 0x3f, 0x9d, 0x5f, 0xcc, 0xf8, 0x44, 0x29, 0x28, 0x70, 0xb9, 0x8a, 0x58, 0x75,
	0x7b, 0x9b, 0x58, 0x3a, 0xe3, 0x30, 0x0e, 0x2f, 0xac, 0x46, 0x59, 0x8d, 0x38, 0x41, 0x5a, 0x4b,
	0x60, 0x17, 0x43, 0x9a, 0x4d, 0x6e, 0x24, 0xaf, 0x59, 0xe6, 0xf5, 0x5e, 0xab, 0xeb, 0x4e, 0x6b,
	0xb9, 0xcc, 0x1b, 0x9e, 0xe4, 0xbc, 0x15, 0x7b, 0x87, 0x6c, 0x19, 0x7d, 0xc1, 0x71, 0xcb, 0x6a,
	0x1d, 0xfc, 0x5b, 0x8d, 0x6c, 0x06, 0x11, 0x2c, 0x4d, 0x6a, 0xd1, 0x97, 0x56, 0xd0, 0x10, 0x7f,
	0x38, 0x1a, 0xf6, 0xad, 0xef, 0x40, 0x71, 0x28, 0x31, 0x3a, 0xe9, 0x8d, 0x9f, 0xaf, 0xc6, 0x56,
	0x0d, 0xa2, 0xa5, 0x24, 0x81, 0x0f, 0xfd, 0x9a, 0x4c, 0xdd, 0xfe, 0x88, 0x3c, 0x29, 0x6b, 0x51,
	0xa3, 0x6c, 0x88, 0x19, 0x18, 0xcc, 0x1e, 0x4f, 0x27, 0x2c, 0x99, 0x5a, 0x4b, 0xf6, 0x77, 0xc9,
	0x53, 0xc1, 0x0b, 0x8a, 0x96, 0xde, 0xd7, 0x3e, 0xae, 0x9b, 0x56, 0xf3, 0xe0, 0x7f, 0x96, 0x08,
	0x09, 0xa2, 0xfc, 0xa6, 0x03, 0x67, 0xa1, 0x28, 0xbf, 0x3b, 0xf6, 0xfb, 0x94, 0x8e, 0xa8, 0xf5,
	0x1d, 0xe1, 0x7e, 0x9d, 0xe1, 0xb9, 0xc3, 0xe3, 0x41, 0xdf, 0xaa, 0x55, 0x39, 0xbd, 0xd1, 0x19,
	0x14, 0xb4, 0x7a, 0x55, 0xd9, 0xf8, 0x25, 0xed, 0xf7, 0xad, 0x86, 0x18, 0x53, 0x55, 0x99, 0x3f,
	0x70, 0x87, 0x7d, 0x35, 0xe4, 0xaa, 0x46, 0xc1, 0x6e, 0x42, 0x45, 0x5a, 0xa0, 0x56, 0x70, 0x97,
	0x85, 0xb9, 0xab, 0xdc, 0x71, 0xe7, 0xeb, 0xbe, 0x0f, 0x0e, 0x59, 0x81, 0xaa, 0xf1, 0x90, 0x84,
	0x50, 0xd4, 0x7a, 0x50, 0xd1, 0xf8, 0x7c, 0x64, 0xad, 0x3e, 0xa8, 0x68, 0x7c, 0x3e, 0x12, 0x8a,
	0x08, 0xe4, 0xa4, 0x29, 0x76, 0x34, 0x3a, 0xa3, 0xc5, 0x80, 0xd6, 0x60, 0x91, 0x79, 0x40, 0x40,
	0xa8, 0x59, 0x7f, 0x48, 0x0d, 0x0c, 0x67, 0xe3, 0x21, 0x35, 0xf9, 0x68, 0x36, 0x45, 0x20, 0xe9,
	0x52, 0x14, 0x0a, 0xcb, 0xe1, 0xe8, 0xe4, 0xd0, 0x7a, 0x54, 0x65, 0x02, 0x8e, 0x35, 0xc4, 0xb2,
	0xaa, 0x76, 0x1f, 0x74, 0xdc, 0xd7, 0xae, 0x68, 0xba, 0x05, 0x55, 0xcb, 0xe4, 0xc2, 0xda, 0xe6,
	0xc2, 0x2a, 0x0f, 0xad, 0xed, 0x83, 0xff, 0xae, 0x11, 0xa2, 0x1d, 0x03, 0xb7, 0x89, 0x85, 0x94,
	0x8f, 0xa4, 0xef, 0x46, 0x3c, 0x13, 0xb1, 0xa4, 0xa3, 0x5e, 0x20, 0x8e, 0xf6, 0x56, 0x1d, 0x66,
	0xaf, 0x73, 0xfa, 0x51, 0x3a, 0x4f, 0x82, 0x22, 0x41, 0x1a, 0xe5, 0xa6, 0x79, 0x76, 0x2c, 0x41,
	0x18, 0xea, 0x9c, 0xd1, 0x3c, 0x43, 0x9d, 0xcd, 0x72, 0x13, 0x58, 0x8c, 0xfc, 0x7e, 0x34, 0xb5,
	0x96, 0xcb, 0x1c, 0xf5, 0x47, 0x85, 0xb5, 0x02, 0xb1, 0xa9, 0x73, 0xce, 0x19, 0xcf, 0x0a, 0x76,
	0xeb, 0xe0, 0x3f, 0x6b, 0x64, 0xb5, 0x78, 0x30, 0xda, 0x25, 0xf6, 0xc9, 0xcf, 0xf0, 0xe6, 0xcd,
	0x9c, 0xe6, 0x0e, 0xd9, 0x32, 0x71, 0x8f, 0x67, 0x22, 0x5f, 0x4c, 0x18, 0xef, 0x4b, 0x45, 0x7e,
	0x97, 0xe4, 0xe5, 0x6d, 0xa6, 0xb5, 0x04, 0x61, 0x6a, 0xf2, 0xf2, 0x9f, 0x84, 0x84, 0x65, 0x9a,
	0xd5, 0xd6, 0x5a, 0xed, 0x7b, 0x4a, 0x76, 0x4c, 0x9e, 0xb2, 0xce, 0x4a, 0x75, 0x90, 0x60, 0x9a,
	0xd6, 0xc1, 0x94, 0xd8, 0xd5, 0xff, 0x33, 0x0a, 0x1b, 0x2b, 0xc4, 0x1f, 0xc6, 0x51, 0xa0, 0x7b,
	0x34, 0x67, 0xe0, 0x8f, 0x24, 0xa2, 0xa2, 0x95, 0x38, 0xea, 0x7f, 0x11, 0xab, 0x71, 0xf0, 0x1a,
	0x96, 0x1f, 0x71, 0x90, 0xca, 0x4d, 0x69, 0x00, 0xfe, 0xf0, 0x6c, 0x30, 0x50, 0x75, 0x49, 0xc7,
	0x4f, 0xe3, 0xee, 0x35, 0x8b, 0xd4, 0xaa, 0xa2, 0x73, 0xf0, 0x55, 0xc7, 0xaa, 0x1f, 0xbc, 0x23,
	0xad, 0x20, 0x3a, 0xe7, 0xc0, 0xb3, 0xb7, 0xa0, 0x1f, 0xf1, 0xad, 0x34, 0x62, 0x4f, 0x12, 0xd2,
	0xab, 0xf4, 0x63, 0xf2, 0x28, 0xc7, 0x8f, 0x58, 0x12, 0x62, 0x59, 0xd6, 0xc1, 0x7c, 0x21, 0xc2,
	0x9e, 0x25, 0xa8, 0xaf, 0x42, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0x08, 0xd2, 0x18, 0x58, 0xd9,
	0x2f, 0x00, 0x00,
}
