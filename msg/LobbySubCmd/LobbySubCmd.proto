syntax = "proto2";
package LobbySubCmd;
// 主消息号 Lobby_MAIN_CMD 对应子消息号定义

enum enSubCmdID
{
	USER_MAIN_INFO_SUB_CMD                               = 1;	//服务器发送大厅用户主要信息给客户端
	GAME_KIND_INFO_SUB_CMD                               = 2;	//服务器发送可用游戏类型给客户端
	REQUEST_GAME_ROOM_SUB_CMD                            = 3;	//客户端请求指定游戏类型的所有房间
	THE_GAME_ROOMS_INFO_SUB_CMD                          = 4;   //服务器发送指定类型游戏所有房间给客户端
	REQUEST_ENTER_ROOM_SUB_CMD                           = 5;   //客户端请求到指定房间
	IN_LOBBY_WORLD_CHAT_SUB_CMD                          = 6;   //大厅玩家世界消息
	UPDATE_USER_ATT_SUB_CMD                              = 7;    //更新玩家属性数据
	LOBBY_SC_VIPINFO_SUB_CMD							 = 8;	//通知玩家的VIP信息有变化
	LOBBY_CS_ACCEPT_VIP_PRESENT_SUB_CMD					 = 9;	//领取VIP礼包
	LOBBY_SC_NOTIFY_VIP_STATUS_SUB_CMD					 = 10;	//通知VIP状态信息
	LOBBY_SC_NOTIFY_ENTER_ROOM_FAIL						 = 11;	//进入游戏房间失败
	USER_REQUEST_JOIN_MATCH_SUB_CMD                     = 12;        // 请求报名比赛
	USER_REQUEST_QUIT_MATCH_SUB_CMD                     = 13;        // 请求退出比赛
	RETURN_JOIN_MATCH_RESULT_SUB_CMD                    = 14;        // 报名奖励结果
	RETURN_QUIT_MATCH_RESULT_SUB_CMD                    = 15;        // 退出比赛结果
	REQUEST_IAP_PURCHASE_SUB_CMD                        = 16;        // 客户端充值成功后发的消息
	LOBBY_GET_RELIEF_GLOD_SUB_CMD						= 17;	//领取救济金	
	LOBBY_GET_RELIEF_GLOD_RESULT						= 18;	//领取救济金返回结果
	LOBBY_SC_NOTIFY_FREE_AWARD							= 19;	//通知免费抽奖次数
	LOBBY_CS_REQUEST_AWARD								= 20;	//客户端请求抽奖	
	LOBBY_SC_RESPONSE_AWARD								= 21;	//服务器返回抽奖结果
	LOBBY_SC_NOTIFY_REFRESH_AWARD						= 22;	//服务器通知某种抽奖的候选道具
	LOBBY_CS_REQUEST_REFRESH_AWARD						= 23;	//客户端请求抽奖候选道具
	LOBBY_UPDATE_ONLINE_AWARD_SUB_CMD					= 24;	//刷新在线奖励数据
	LOBBY_GET_ONLINE_AWARD_SUB_CMD						= 25;	//领取在线奖励
	LOBBY_CS_REQUEST_GODMAN                             = 26;   //客户端请求敬财神
	LOBBY_SC_RESPONSE_GODMAN                            = 27;   //服务器返回敬财神结果
	LOBBY_SC_NOTIFY_GODMAN_PROGRESS                     = 28;   //服务器通知敬财神进度
	RETURN_IAP_GIVE_DIAMOND_SUB_CMD                     = 29;   // 通知客户端 充值加钻石	
	LOBBY_CS_REQUEST_GAME_WININFO						= 30;	//客户端请求某个游戏的胜率信息
	LOBBY_SC_RESPONSE_GAME_WININFO						= 31;	//服务器返回某个游戏的胜率信息	
	LOBBY_CS_REQUEST_GODMAN_RECORD						= 32;	//客户端请求最近的敬财神记录
	LOBBY_SC_NOTIFY_GODMAN_RECORD						= 33;	//服务器通知当前最近的敬财神记录
	LOBBY_SC_NOTIFY_VIP_PRESENT							= 34;	//通知VIP礼包具体道具
	CS_REQUEST_SIGN_ENTER_MATCH                         = 35;   //客户端请求报名并立即进入房间	
	SC_RETURN_SIGN_ENTER_MATCH                          = 36;   // 报名直接进入房间返回	
	RETURN_ENTER_ROOM_RESULT_SUB_CMD                    = 37;       //客户端请求指定房间错误返回 只有不成功才返回 
	LOBBY_SC_UPDATEACHIEVEMENT							= 38;	//更新成就数据
	LOBBY_CS_GETACHIEVEMENTREWARD						= 39;	//领取成就奖励
	LOBBY_SC_KICK_ROOM_LIST								= 40;	//服务器通知进入房间列表
	SC_NOTITY_HIDE_URL_ADDRESS	     					= 41;	//发送一个url给客户端
	LOBBY_CS_REQUEST_CREATE_TABLE   					= 42;    //用户请求创建桌子
    LOBBY_SC_CREATE_TABLE_RESULT    					= 43;   //创建桌子结果	
	CS_REQUEST_PLAY_MATCH_AGAIN	                        = 44;   // 再来一局比赛
	LOBBY_SC_UPDATETASK									= 45;	//更新任务数据
	LOBBY_CS_GETTASKREWARD								= 46;	//领取任务奖励
	LOBBY_CS_GETTASKINFO								= 47;	//获取任务数据
	LOBBY_CS_GETPROPEXCHANGERECORD						= 48;	//获取实物兑换记录
	LOBBY_SC_RETURNPROPEXCHANGERECORD					= 49;	//返回实物兑换记录

	LOBBY_GIVE_GIFT_SUB_CMD								= 50;	//客户端赠送礼物
	LOBBY_GIVE_GIFT_RECORD								= 51;	//客户端请求赠送礼物记录
	LOBBY_SEARCH_USER_INFO								= 52;	//通过用户ID 查找用户数据{昵称，性别，faceID，年龄，等级，VIP等级} 以后需要更多数据 请往后面添加
	LOBBY_SEND_GAME_CONFIG_INFO							= 53;	//发送游戏配置信息
	REQUEST_CS_GAME_ROOM_JACKPOTGOLD                    = 54;   //请求房间奖池信息	
	REQUEST_SC_GAME_ROOM_JACKPOTGOLD                    = 55;   //发送房间奖池信息	
	
	LOBBY_CS_CREATE_SCORE_TABLE                         = 56;   //用户请求创建积分场桌子
	LOBBY_SC_CREATE_SCORE_TABLE                         = 57;   //创建积分场桌子结果
	LOBBY_CS_ENTER_SCORE_TABLE                          = 58;   //进入积分场桌子
	LOBBY_SC_ENTER_SCORE_TABLE							= 59;	//进入积分场桌子返回
	//LOBBY_CS_LEAVE_SCORE_TABLE                          = 60;   //离开积分场桌子
	LOBBY_SC_LEAVE_SCORE_TABLE                          = 61;   //离开积分场桌子结果
	LOBBY_SC_NOTIFY_AGREE_SCORE_TABLE_DISMISS			= 62;   //通知是否同意解散房间
	LOBBY_CS_DISMISS_SCORE_TABLE_AGREE					= 63;	//同意是否解散房间
    LOBBY_SC_SOCRE_TABLE_RESULT							= 64;   //积分场房间结算
	LOBBY_SC_SCORE_TABLE_INFO							= 65;   //积分场房间信息
	LOBBY_CS_GETFREECREATESCORETABLETIMES				= 66;	//获取每日免费创建房间的次数
	LOBBY_SC_GETFREECREATESCORETABLETIMES				= 67;   //返回每日免费创建房间的次数
	//LOBBY_CS_DISMISS_SCORE_TABLE						= 68;   //游戏达到局数后发送解散房间
	LOBBY_SC_NOEXIST_SCORE_TABLE						= 69;   //通知客户端积分场房间不存在
	
	LOBBY_CS_USEREDEEMCODE								= 70;	//使用兑换码
	LOBBY_SC_USEREDEEMCODERST							= 71;	//使用兑换码结果
	LOBBY_SC_BUSINESS_INFO								= 72;	//通知客户端商人等级信息
	
	LOBBY_CS_REQUEST_SCORE_TABLE_INFO					= 80;	//请求PP房间信息
	LOBBY_CS_REQUEST_PPROOM_INVITE_FRIEND				= 81;	//PP邀请好友	
	LOBBY_CS_REQUEST_DISMISS_PPROOM						= 82;	//申请解散房间
	LOBBY_SC_NOTIFY_DISSMISS_PPROOM						= 83;	//有人申请解散通知其他人
	LOBBY_CS_RESPONSE_DISMISS_PPROOM					= 84;	//玩家对申请解散的反馈
	LOBBY_SC_RESPONSE_DISMISS_PPROOM					= 85;	//玩家同意结果返回给客户端
	LOBBY_CS_REQUEST_PPRESULT_INFO						= 86;	//请求PP房间结算信息
	LOBBY_SC_ROOM_CARD_COUNT							= 87;	//发送房卡的数量
	REQUEST_GAME_ROOM_USER_INFO                         = 88;	//请求房间玩家信息
	RETURN_GAME_ROOM_USER_INFO                          = 89;   //返回房间玩家信息
	REQUEST_DIAMOND_TO_GOLD_SUB_CMD						=90;    //请求砖石换金币
	RETURN_DIAMOND_TO_GOLD_SUB_CMD						=91;    //请求砖石换金币结果。
	RETURN_SEARCH_USER_INFO								=92;	//搜索用户信息返回
	LOBBY_SC_MAIL_CHANGE_SUB_CMD						= 93;	//通知玩家邮件信息有变化
	LOBBY_CS_SIGN_RED_CMD								= 94;	//签到领红包
	LOBBY_SC_SIGN_RED_CMD							= 95;	//签到领红包返回
	
	LOBBY_CS_REALNAME_AUTHENTICATION_CMD		= 96;	//实名认证请求
	LOBBY_SC_REALNAME_AUTHENTICATION_CMD		= 97;	//实名认证返回
	
	REQUEST_WX_PURCHASE_SUB_CMD						=98;    //请求威信购买钻石
	RETURN_WX_PURCHASE_SUB_CMD						   =99;    //返回威信购买钻石结果。
	
	REQUEST_WX_SGAME_PURCHASE_SUB_CMD						=100;    //请求威信小游戏-米大师购买钻石
	RETURN_WX_SGAME_PURCHASE_SUB_CMD						   =101;    //返回威信小游戏-米大师购买钻石结果。
	
	TEST_SUB_CMD                           				= 200;       //test
}

//USER_MAIN_INFO_SUB_CMD                      	              = 1;	//服务器发送大厅用户主要信息给客户端
//登陆成功
message SC_Logon_Success
{
	required string szNickName = 1;	             							//昵称
	required string iFaceID = 2;									//头像索引
	required int32 iGender = 3;									//用户性别(0保密, 1男, 2女)
	required int32 iUserID = 5;									//用户 ID
	required int32 iAccid = 6 ;	        						//用户别名id，用于显示
    required int32 iTicket = 9;								        //用户彩票
	required int64 iGold = 11;									//金币数量
	required int32 iDiamond = 13;									//用户钻石
	required int64 i64RegistDate = 14;								//注册日期
	required string szDescription = 17 [default = ""];                                              //个人说明
	required string szImage = 18 [default = ""];                                                   //头像
	required string szMobile = 19 [default = ""];                                                   //手机号
	repeated int32 iKindID = 26;							                //游戏ID列表
	required int64 iServerTime = 27;						        	//当前服务器时间(utc时间)
	required string szLocal = 34;                                                                   //所在地
	required string szLastLogonIP = 35;								 //最后登录IP
	optional int32 iScoreRoomID = 44;								 //创建房间的ID
	required int64 iInsureGold = 45;													 	//保险箱金币
	required int32 iModifyNickTimes = 46;					 	//修改昵称次数
	required int32 iGetRelifTimes = 47;							//今日已领取的救济金次数
	required int32 iGetRelifTotalTimes = 48;					//总共领取的救济金次数
	required int32 iMaxGetRelifTimes = 49;					//用户最大可领取次数
	optional int32 iFirstRecharge = 50;					//用户是否有第一次充值 1 没有充值过 2 已经失去首充奖励机会 其它无效 
	optional int64 SignCount  = 51;  //签到次数
	optional int64 LastSignTime	  = 52;  //最后一次签到时间
	optional int32 SignEnable  = 53;  //签到功能开关,1 开启，0 关闭。
	optional int32 RechargeFirstEnable  = 54;  //首充功能开关,1 开启，0 关闭。
	optional int32 RechargeExtraEnable  = 55;  //额外赠送功能开关,1 开启，0 关闭。
	optional int32 iVipLv  = 56;  //玩家VIP等级
	optional string strRealName  = 57;  //玩家真实姓名
	optional string strIDCard  = 58;  //玩家身份证号
}


//GAME_KIND_INFO_SUB_CMD                                      = 2;	//服务器发送可用游戏类型给客户端
message GameKindInfo_Repeat
{
	required int32 iKindId				= 1 [default = 0];										//游戏类型ID
	required int32 iMainType			= 2 [default = 0];										//大类  1-棋牌类 2-赛事类 3-休闲娱乐类
	required int32 iSubType				= 3 [default = 0];										//子类  1-纸牌类 2-麻将类 3-棋类
}

message SC_Send_GameKind_Info
{
	repeated GameKindInfo_Repeat   mKindInfo	= 1;

}



//REQUEST_GAME_ROOM_SUB_CMD                                    = 3;	//客户端请求指定游戏类型的所有房间
message CS_Game_RoomList
{
	required int32 iKindID    = 1;													    	//游戏类型
	required int32 iRoomType  = 2;													    	//2 普通场   3 比赛场
}



//THE_GAME_ROOMS_INFO_SUB_CMD                             = 4;       //服务器发送指定类型游戏所有房间给客户端
//房间信息
message RoomInfo_Repeat
{
	required int32 iKindID = 1 [default = 0];												//kindID
	required string szGameName = 2 [default = ""];											//游戏名称
	required string szRoomName = 3;															//房间名称
	required string szRoomDesc = 4;															//房间描述
	required int32  iCellGold = 5;															//底注
	required int32  iLessGold = 6;															//入场最低金币
	required int32  iMaxGold = 7;															//入场最高金币
//	required int32  iServerAddr = 8;														//IP
//	required int32  iServerPort = 9;														//PORT
	optional int32  iUserLevel = 10;														//用户等级需求
	optional int32	iVipLevel = 11;															//VIP需求
	optional int32	iOnLineCount = 12;														//房间人数
	optional int32	iFullCount = 13;														//房间人数
	optional int32	iSortID = 14;															//客户端房间显示排序ID
	required int32  iRoomID = 15;															//房间唯一ID
	repeated int64  iCustomValue= 16;                                                       //自定数据
	optional string szCustomString=17[default = ""];                                        //自定数据
	required int32 iBaseID  =      18;													    	//房间基本ID   客户端用此来拍讯显示 
	required int32 iRoomType  =    19;													    	//2 普通场   3 比赛场
	optional int32 iMatchID = 20;                                                                                                                  //比赛ID
	optional int32 iFreeRoom = 21;															//是否是自由场
	required int64 llJackpotGold = 22;														//奖池金额
	optional int64 llFirstJackpotGold = 23;														//第一奖池金额
	optional int64 llSecondJackpotGold = 24;														//第二奖池金额
	optional int64 llThirdJackpotGold = 25;														//第三奖池金额
	optional int64 llFourthJackpotGold = 26;														//第四奖池金额	
}


message SC_Game_RoomList
{	
	repeated RoomInfo_Repeat mRoomList = 1;														//房间列表
	optional int32 iRoomType		= 2;													//房间类型
}

// REQUEST_ENTER_ROOM_SUB_CMD                           = 5;       //客户端请求到指定房间
message CS_EnterRommInfo
{
	required int32 iRoomID  = 1;													    	//房间ID
}


//IN_LOBBY_WORLD_CHAT_SUB_CMD                          = 6;       //大厅玩家世界消息
message SC_LobbyWorldChat
{
	required  string     fromUser                  = 1;       // 发言玩家
	required  string     content                   = 2;  	  // 发言内容

}


//UPDATE_USER_ATT_SUB_CMD                              = 7;       //更新玩家属性数据
message SC_Update_User_Att
{
	required int32 iDiamond  = 6;																//用户Level
        required int32 iTicket = 9;															//用户彩票
	required int64 iGold = 11;																//金币数量
	required string mobile = 17;												//绑定的手机号
	required int64 iInsureGold = 18;													 	//保险箱金币
}

//LOBBY_NOTIFY_USER_VIPINFO_SUB_CMD
message SC_Lobby_Notify_VipInfo
{
	optional int32 iVipLv		= 1;															//当前VIP等级
	optional int64 lVipExp		= 2;															//当前VIP经验
	optional int64 lVipEndTime	= 3;															//VIP到期时间
	optional int64 lVipTodayExp = 4;															//今日已获得VIP经验
}

//LOBBY_SC_NOTIFY_VIP_STATUS_SUB_CMD
message SC_Lobby_Notify_Vip_Status
{
	optional int32 iDayPresent = 1;						//0-不可以领取 1-已经领取 2-可领取还未领
	optional int32 iLvPresent  = 2;						//0-不可以领取 1-已经领取 2-可领取还未领
}

//LOBBY_SC_NOTIFY_ENTER_ROOM_FAIL
message SC_User_Enter_Room_Fail
{
	optional string szDesc = 1;                                 //进入房间失败的描述
}


//USER_REQUEST_JOIN_MATCH_SUB_CMD                     = 12;        // 请求报名比赛
message CS_Request_Json_Match
{
	required int32 matchID   = 1;  // 比赛id   取竞赛场的 roomid
}



//USER_REQUEST_QUIT_MATCH_SUB_CMD                     = 13;        // 请求退出比赛
message CS_Request_Quit_Match
{
	required int32 matchID   = 1;  // 比赛id
}


//RETURN_JOIN_MATCH_RESULT_SUB_CMD                    = 14;        // 报名奖励结果
message SC_Return_Join_Match_Result
{
	required int32 matchID   = 1;  // 比赛id
	required int32 ret       = 2;  // 结果 0 成功 1 失败
}


//RETURN_QUIT_MATCH_RESULT_SUB_CMD                    = 15;        // 退出比赛结果
message SC_Return_Quit_Match_Result
{
	required int32 matchID   = 1;  // 比赛id
	required int32 ret       = 2;  // 结果 0 成功 1 失败
}

//REQUEST_IAP_PURCHASE_SUB_CMD                        = 16;        // 客户端充值成功后发的消息	
message CS_Request_IAP_Purchase 
{
	required int32 userID 			  = 1;  // 玩家id
	required string  product_id   		  = 2;  // 商品id
	required string  transaction_id  	  = 3;  // 交易id
	required string  recipt_data   		  = 4;  // 收据
	required int32   id      	          = 5;  // 商品编号
	optional string packageflag      	= 6;                        // 包标识 	
}

//LOBBY_GET_RELIEF_GLOD_SUB_CMD							= 17;        //  客户端领取救济金
message CS_Get_relief_glod
{
	
}

//LOBBY_GET_RELIEF_GLOD_RESULT							= 18;        //  服务器领取救济金返回
message SC_Get_relief_glod
{	required int32 iSuccess = 1;		//是否领取成功  1 领取成功 0 领取失败
	required int32 iGetRelifTimes = 2;		//总的领取次数
	required int32 iGetRelifTotalTimes = 3;		//已经领取次数
	required int64 iGlod = 4;			//领取金币数量
	optional string sDescription = 5;	//失败和成功描述信息
}


//LOBBY_UPDATE_ONLINE_AWARD_SUB_CMD						= 25;        //请求刷新在线奖励数据
message CS_Update_Online_Award 
{
	
}
	
//LOBBY_UPDATE_ONLINE_AWARD_SUB_CMD						= 24;		//服务器刷新在线奖励
message SC_Update_Online_Award 
{
	required int32 iCanGetTimes = 1;	//可以领取的档次 -1当前没有可领取数据 
	required int32 iLastGetTimes = 2;	//上次领取的档次 -1表示没有领取过
	required int64 iLeftTime = 3;		//下次领取的倒计时 秒 -1 表示没有倒计时了 表示今天所有档次都领取了
}

//LOBBY_GET_ONLINE_AWARD_SUB_CMD						= 25;        //  客户端领取在线奖励
message SC_Get_Online_Award
{	
	required int64 iGlodNum  = 1;		//领取的金币数量 0 表示领取失败	
	optional string sDescription = 2;	//失败和成功描述信息
}

//LOBBY_GET_ONLINE_AWARD_SUB_CMD						= 25;        //  客户端领取在线奖励返回
message CS_Get_Online_Award
{
	
}

// TEST_SUB_CMD = 100
message testSubCmd
{
	required string szNickName = 1;															//昵称
	required int32 iFaceID = 2;																//头像索引

	//required int32 iGender = 3;																//用户性别(0保密, 1男, 2女)
	//required int32 iMember = 4;												    			//会员类型1普通用户, 2商人, 3,内部测试 4普通GM 5管理员
 //required int32 iUserID = 5;																//用户 ID
//	required int32 iGameID = 6;																//游戏 ID
//	required int32 iLevel  = 7;																//用户Level
//	required int32 iExp   = 8;																//用户经验
  //      required int32 iTicket = 9;															//用户彩票
}

//LOBBY_SC_NOTIFY_FREE_AWARD                 
message SC_Notify_Free_Award
{
	optional int32 iLeftTimes						= 1;	//剩余次数
	optional int32 iType							= 2;	//免费用完可以用其他货币抽奖 1-钻石 2-金币 3-奖券 4-道具
	optional int32 iObj								= 3;	//如果需要道具对应的id
	optional int32 iCount							= 4;	//需要货币数量或者道具数量
}

//抽奖类型
//enum enAwardType
//{
//    AwardType_None              = 0;
//    AwardType_DT                = 1;            //大厅抽奖
//    AwardType_Max				= 2;
//}

//LOBBY_CS_REQUEST_AWARD                          
message CS_Request_Award
{
	optional int32 iType							= 1;	//抽奖类型
}

//抽奖的奖励类型
//enum enAwardItemType
//{
//    AwardItemType_None          = 0,
//    AwardItemType_Big           = 1,
//    AwardItemType_Middle        = 2,
//    AwardItemType_Small         = 3,
//    AwardItemType_Max,
//};


message AwardItem_Repeat
{
	optional int32 iIndex							= 1;	//抽奖道具序号
	optional int32 iAwardType						= 2;	//1-金币 2-钻石 3-道具 
	optional int32 iObjID							= 3;	//iAwardTyp=1表示金币数量   iAwardTyp=2表示钻石数量  iAwardTyp=3表示道具id
	optional int32 iObjCount						= 4;	//iAwardTyp=3 道具数量
	optional int32 iAwardKind						= 5;	//该值大于0需要随机排序 如果为0不随机排序,已经有序参考enAwardItemType
}

//LOBBY_CS_REQUEST_REFRESH_AWARD
message CS_Request_Refresh_Award
{
	optional int32 iType                            = 1;    //抽奖类型
}

//LOBBY_SC_NOTIFY_REFRESH_AWARD
message SC_Notify_Refresh_Award
{
	optional int32 iType                            = 1;    //抽奖类型
	repeated AwardItem_Repeat item                  = 2; 	//抽奖类型对应的候选抽奖道具   
}

//LOBBY_SC_RESPONSE_AWARD                            
message SC_Response_Award
{
	optional int32 iResult							= 1;	//中奖道具序号
	optional int32 iType							= 2;	//返回当次抽奖类型和CS_Request_Award消息的iType一致
}

//LOBBY_CS_REQUEST_GODMAN                             = 24; 
message CS_Request_GodMan
{
	//空消息
}

//LOBBY_SC_RESPONSE_GODMAN                            = 25;
message SC_Response_GoldMan
{
	optional int32 iResult							= 1;	//0-成功 1-上一局是输了不能敬财神 2-已经不在同一个房间了,无法敬财神
}

//LOBBY_SC_NOTIFY_GODMAN_PROGRESS                     = 26;
message SC_Notify_GodMan_Progress
{
	optional int64 lProgress						= 1;	//当前总的敬财神金币 (这个值可能比下面的 lMax要大)
	optional int64 lMax								= 2;	//当前阶段最大的敬财神金币
	repeated int64 lMaxSep							= 3;	//分档的最大值
}

//RETURN_IAP_GIVE_DIAMOND_SUB_CMD                     = 29;   // 通知客户端 充值加钻石	
message SC_ReturnIapGiveDiamond
{
	required int32   num			  = 1;  // 获取钻石数量
	required string  transaction_id  	  = 2;  // 交易id
	required int32 	 result = 3;		//交易结果 0 成功， 1:IAP认证失败， 2：没有对应的产品ID， 3：产品ID与票据不符。
	
}

//LOBBY_CS_REQUEST_GAME_WININFO                       = 30;   //客户端请求某个游戏的胜率信息
message CS_Request_Game_WinInfo
{
	optional int32 iUserID							= 1;	//用户ID
	optional int32 iKindID							= 2;	//游戏的kind
}

//LOBBY_SC_RESPONSE_GAME_WININFO                      = 31;   //服务器返回某个游戏的胜率信息
message SC_Response_Game_WinInfo
{
	optional int32 iUserID							= 1;
	optional int32 iKindID							= 2;	//游戏kind
	optional int32 iGameTimes						= 3;	//游戏总局数
	optional string szWinRate						= 4;	//胜率	
}

message GodMan_Record_Repeat
{
	optional int64 lTime							= 1;
	optional string szName							= 2;
	optional int32 iObjID                           = 3;    //iAwardTyp=1表示金币数量   iAwardTyp=2表示钻石数量  iAwardTyp=3表示道具id
	optional int32 iObjCount                        = 4;    //iAwardTyp=3 道具数量
}

//LOBBY_SC_NOTIFY_GODMAN_RECORD
message SC_Notify_GodMan_Record
{
	repeated GodMan_Record_Repeat item				= 1;
}


message VipPresent_Repeat
{
	optional int32 iObjID							= 1;
	optional int32 iCount							= 2;
}


//LOBBY_SC_NOTIFY_VIP_PRESENT
message SC_Notify_Vip_Present
{
	optional int32 iResult							= 1;	//0-成功 1-失败
	repeated VipPresent_Repeat item					= 2;
}




//	CS_REQUEST_SIGN_ENTER_MATCH                         = 35;   //客户端请求报名并立即进入房间	
message CS_Request_Sign_Enter_Match 
{
	required int32   roomID 			  = 1;             // 房间ID
	required int32   signItemIndex 		  = 2;             //  配置的需要消耗道具的 序号  0 , 1      
	
}



//	SC_RETURN_SIGN_ENTER_MATCH                          = 36;   // 报名直接进入房间返回	
message CS_Return_Sing_Enter_Match
{
	required int32   roomID 			  = 1;             // 房间ID
	required int32   retCode 			  = 2;             // 报名返回  非零表示报名出错  错误的时候有返回
		
}


// RETURN_ENTER_ROOM_RESULT_SUB_CMD                           = 37;       //客户端请求指定房间错误返回 只有不成功才返回 
message SC_EnterRommResultInfo
{
	required int32 iRoomID  = 1;													    	//房间ID
	required int32 ret      = 2;													    	// 只有不成功才返回   1， 请求房间不存在   2. 请求的房间暂时未开放
	
}

// LOBBY_SC_UPDATEACHIEVEMENT							= 38;	//更新成就数据
// 成就信息
message AchievementInfo_Repeated
{
	required uint32 id			= 1;
	optional uint32 progress	= 2;	// 进度
	optional uint32 curstatus	= 3; 	// 0:进行中 1:完成待领奖 2:完成已领奖
	optional uint32 completetime= 4;	// 完成时间
}

// 玩家的成就列表
message AchievementList
{
	repeated AchievementInfo_Repeated achinfo = 1;
}

// LOBBY_CS_GETACHIEVEMENTREWARD						= 39;	//领取成就奖励
message GetAchievementReward
{
	repeated uint32 achid = 1;
}


//SC_NOTITY_HIDE_URL_ADDRESS	     					= 41;	url
message Sc_Notify_Hide_Url_Address
{
	required string  url_address  	  = 1;  // url
}

//CS_REQUEST_PLAY_MATCH_AGAIN                           = 42
message CS_Req_Play_Match_Again
{
	required uint32 matchID = 1;										//比赛id
}

// LOBBY_SC_UPDATETASK                                 = 45;   //更新任务数据
// 任务数据
message SC_TaskData_Repeated
{
	required uint32	taskid		= 1;	// 任务ID
	required uint32 progress	= 2;	// 当前进度
	required uint32 curstatus	= 3;	// 当前状态  0:进行中 1:完成待领奖 2:完成已领奖
	optional uint32 endtime		= 4;	// 到期时间
}

message SC_TaskDataList
{
	repeated SC_TaskData_Repeated  taskdata = 1;
	optional int32 clientget = 2;    // 0:服务器主动更新   1:客户端请求更新   2:客户端领奖更新
}

// LOBBY_CS_GETTASKREWARD                              = 46;   //领取任务奖励
message CS_GetTaskReward
{
	repeated uint32 taskid = 1;
}

// LOBBY_CS_GETTASKINFO                                = 47;   //获取任务数据
message CS_GetTaskInfo
{
	required int32 tasktype = 1;		// 获取指定游戏的任务信息  -1:所有任务  0:大厅任务  >0:指定游戏的任务
}

// LOBBY_SC_RETURNPROPEXCHANGERECORD					= 49;	//返回实物兑换记录
message CS_ExchangeRecord_Repeated
{
	required string usetime = 1;	// 兑换的时间
	required uint32 usepropid = 2;	// 使用的道具ID
}
message CS_ExchangeRecordList
{
	repeated CS_ExchangeRecord_Repeated record = 1;
}



//服务器本地存储未中奖信息的消息(不与客户端通信)
message NoAwardTimes
{
	optional int32 iAwardID							= 1;	//抽奖ID
	optional int32 iBigTimes						= 2;	//累计大奖次数
	optional int32 iMidTimes						= 3;	//累计中奖次数
	optional int32 iNoBigTimes						= 4;	//未中大奖次数
	optional int32 iNoMidTimes						= 5;	//未中中奖次数
	optional int32 iFirstBigItem					= 6;	//首次产生大奖奖品ID
	optional int32 iFirstMidItem					= 7;	//首次产生中奖奖品ID
	optional int32 iGiveFirstBig					= 8;	//是否已经给了首次大奖
	optional int32 iGiveFirstMid					= 9;	//是否已经给了首次中奖
}

message Save_NoAwardTimes
{
	repeated NoAwardTimes item						= 1;
}

message RefreshAwardItem
{
	optional int32 iAwardId							= 1;
}

message Save_RefreshAwardItem
{
	repeated RefreshAwardItem item					= 1;
}


message Save_GodManRecord
{
	optional int64 lTime                            = 1;
	optional string szName                          = 2;
	optional int32 iAwardID                         = 3;
}

//LOBBY_SC_KICK_ROOM_LIST
message SC_KicK_Room_List
{

}

//LOBBY_CS_REQUEST_SCORE_TABLE_INFO
message CS_Request_Score_Table_Info
{
	optional int32  iKindID							= 1; 
	optional string iRoomID							= 2; //请求的房间ID
}

//LOBBY_CS_REQUEST_CREATE_TABLE
message CS_Reqeust_Create_Table
{
	optional int32 iRoomID = 1;							//游戏的房间ID	
}

//LOBBY_SC_CREATE_TABLE_RESULT
message SC_Create_Table_Result
{
	optional int32 iResult = 1;							//0-创建成功 1-人数已满无法创建房间
	optional string szPasswd = 2;						//密码
	optional int32 iRoomID = 3;							//房间ID
}

//LOBBY_GIVE_GIFT_SUB_CMD								= 50;	//客户端赠送礼物
message CS_Give_Gift
{
	required int32 iUserID							= 1;	//赠送给谁的用户ID
	required int32 iGiftID							= 2;	//礼包ID
	required int64 iCount							= 3;	//赠送数量
	required int64 iAllGlod							= 4;	//花费的金币
}

message SC_Give_Gift
{
	required int32 iResult							= 1;	//失败或成功的返回 0 成功 1或以上失败 
	optional string szDescription					= 2;	//结果描述
	optional string szGiveName						= 3;	//赠送这名称
	optional int32 iGiveUserID						= 4;	//赠送者ID
	optional string szReceName						= 5;	//接收人名称
	optional int32 iReceUserID						= 6;	//接收人ID
	optional int32 iGiftID							= 7;	//礼物ID
	optional int64 iGiftCount						= 8;	//礼物数量
	optional int64 iAllGold							= 9;	//礼物总价值
	optional string szTime							= 10;	//赠送时间
	optional int32 iGiveAccID						= 11;	//赠送者ID
	optional int32 iReceAccID						= 12;	//接收人ID
}


message Give_Gift_Record_Repeat
{
	required string  MailId						= 1; // 邮件id 
	required int32  SendUserId					= 2; // 发送者id 
	required string  SendNickName				= 3; // 发送者昵称
	required int32   ReceiveUserId				= 4; // 接受者id
	required string   ReceiveNickName			= 5; // 接受者昵称
	required int32  GiftId				    	= 6; // 礼物id 
	required int32  GiftNum						= 7; // 礼物数量
	required int64  SendTime					= 8; // 发送时间
	required int64   ReceiveTime				= 9; // 接受时间
	required int64  TotalGold					= 10; // 总的金币
	required int64  GetGold						= 11; // 领取的金币
	required int32 iGiveAccID						= 12;	//赠送者ID
	required int32 iReceAccID						= 13;	//接收人ID
	optional int64   BackTime						= 14; // 礼物退回时间
}
//LOBBY_GIVE_GIFT_RECORD								= 51;	//客户端请求赠送礼物记录
message CS_Give_Gift_Record
{
	required int32 iRecordTag						= 1;	//记录标识；1 赠送记录，2 领取记录
	optional int64 iBeginTime						= 2 [default = 0];	//开始时间 为0 则服务器会返回最近的100条记录
	optional int64 iEndTime							= 3 [default = 0];	//结束时间
}

message SC_Give_Gift_Record
{
	required int32 iRecordTag						= 1;	//记录标识；1 赠送记录，2 领取记录
	optional int32 typeTag							= 2 [default = 1];	//类型标识：1通过数量请求的，2通过时间范围请求的 
	repeated Give_Gift_Record_Repeat records		= 3;	//记录数据
}

//LOBBY_SEARCH_USER_INFO								= 52;	//通过用户ID 查找用户数据{昵称，性别，faceID}} 以后需要更多数据 请往后面添加
message CS_Search_User_Info
{
	required int32 iAccid							= 1;	//用户别名ID
}
//RETURN_SEARCH_USER_INFO  = 92
message SC_Search_User_Info
{	
	required int32 iUserID							= 1;	//用户ID
	optional string szNickName						= 2;	//昵称
	optional int32 iGender							= 3;	//性别
	optional string iFaceID 						= 4;	//faceid
	required int32 iAccid							= 5;	//用户别名id
	
}

message GameCfgItem_Repeated
{
	optional int32 iKindID							= 1;	//游戏类型
	optional int32 iHasMatch						= 2;	//是否有比赛场 1-有 0-没有
	optional int32 iHasCreateRoom					= 3;	//是否有创建房间的按钮
}

//LOBBY_SEND_GAME_CONFIG_INFO
message SC_Send_GameCfg_Info
{
	repeated GameCfgItem_Repeated item				= 1;	//房间具体信息
	optional int32		firstbindgivegold_ios		= 2;	//IOS用户 第一次绑定手机赠送金币
	optional int32 		firstbindgivegold_other		= 3;	//非IOS用户 第一次绑定手机赠送金币
	optional bool		open_firstrecharge			= 4;	//是否开启首充奖励
	optional bool       open_dayrecharge			= 5;	//是否开启每日充值累积奖励
	optional bool       open_alms_ios				= 6;	//IOS用户 是否开放救济金
    optional bool       open_alms_other				= 7;	//非IOS用户 是否开放救济金
}
//奖池请求
message RoomJackpotGoldInfo_Repeat
{
	required int32 iKindID = 1 [default = 0];												//kindID
	optional int32	iOnLineCount = 2;														//房间人数
	required int32  iRoomID = 3;															//房间唯一ID
	required int64 llJackpotGold = 4;														//奖池金额
	optional int64 llFirstJackpotGold = 5;														//第一奖池金额
	optional int64 llSecondJackpotGold = 6;														//第二奖池金额
	optional int64 llThirdJackpotGold = 7;														//第三奖池金额
	optional int64 llFourthJackpotGold = 8;														//第四奖池金额		
}
//REQUEST_SC_GAME_ROOM_JACKPOTGOLD                    = 55;   //发送房间奖池信息	
message SC_Game_RoomJackpotGoldList
{	
	repeated RoomJackpotGoldInfo_Repeat mRoomJackpotGoldList = 1;														//房间列表
	optional int32 iRoomType		= 2;													//房间类型
}
//REQUEST_CS_GAME_ROOM_JACKPOTGOLD                    = 54;   //请求房间奖池信息	
message CS_Game_RoomJackpotGoldList
{
	required int32 iKindID    = 1;													    	//游戏类型
	required int32 iRoomType  = 2;													    	//2 普通场   3 比赛场
}

message CreateTableItem_Repeat
{
	optional int32 iType													= 1; //类型
	optional int32 iValue													= 2; //类型对应的值
}

//LOBBY_CS_CREATE_SCORE_TABLE
message CS_Create_Score_Table
{
	optional int32 iKindID                                                  = 1; //游戏KindID
	repeated CreateTableItem_Repeat item									= 2; //对应数据
}




//LOBBY_SC_CREATE_SCORE_TABLE
message SC_Create_Score_Table
{
	optional int32 iResult													= 1; //结果 0-成功 1-房间已满创建 2-系统错误	
	optional int32 iKindID													= 2; //游戏类型
	optional int32 iRoomID                                                  = 3; //创建的房间ID
	repeated CreateTableItem_Repeat item                                    = 4; //对应数据
}
//LOBBY_CS_ENTER_SCORE_TABLE
message CS_Enter_Score_Table
{
	optional int32 iKindID													= 1; //游戏类型	
	optional string iRoomID													= 2; //加入积分场房间的ID
}
//LOBBY_SC_ENTER_SCORE_TABLE
message SC_Enter_Score_Table
{
	required string iRoomID													= 1; //房间号(为0为失败)
	required int32 iTableID													= 2; //桌子号
	required int32 iChairID													= 3; //椅子号
	required int32 iUserID													= 4; //创建者ID
	required int32 iMode													= 5; //游戏模式
}


//LOBBY_CS_REQUEST_DISMISS_PPROOM     
message CS_Request_Dismiss_PPRoom
{

}

//LOBBY_SC_NOTIFY_DISSMISS_PPROOM    
message SC_Notify_Dismiss_PPRoom
{
	optional int32 dwUserID													= 1; //申请解散的玩家ID
	optional string szNickName												= 2; //申请解散的玩家昵称
	optional int32 iLeftTime												= 3; //剩余时间秒数
}

//LOBBY_CS_RESPONSE_DISMISS_PPROOM    
message CS_Response_Dismiss_PPRoom
{
	optional int32 iResult													= 1;	//0-同意 1-反对
}


message PPRoom_Dismiss_Repeat
{
	optional int32 dwUserID													= 1; //玩家ID
	optional string szNickName												= 2; //玩家昵称
	optional int32 iAgree													= 3; //0-不同意 1-同意 2-无回应
}

//LOBBY_SC_RESPONSE_DISMISS_PPROOM	
message SC_Response_Dismiss_PPRoom
{
	repeated PPRoom_Dismiss_Repeat item										= 1;
	optional int32 dwUserID													= 2; //申请解散的玩家ID
	optional int32 iLeftTime												= 3; //剩余时间秒数
}




//LOBBY_CS_LEAVE_SCORE_TABLE
//message CS_Leave_Score_Table
//{
//	required int32 iroomid													= 1; //积分场房间ID	
//}
//LOBBY_SC_LEAVE_SCORE_TABLE
message SC_Leave_Score_Table
{
	optional int32 iCostType												= 1; //消耗类型
	optional int64 lCost													= 2; //返还数量
}
//SCORE_USERINFO
message ScoreUserInfo_Repeat
{
	optional int32 iUserID													= 1; //玩家ID
	optional string ifaceID													= 2; //玩家头像ID
	optional int32 iAccID													= 3; //玩家别名id
	optional string szNickName												= 4; //玩家昵称
	optional int64 lScore													= 5; //玩家分数
}
//LOBBY_SC_SOCRE_TABLE_RESULT
message SC_Score_Table_Result
{
	repeated ScoreUserInfo_Repeat UserInfo									= 1; //玩家信息
	optional int32 iMaxRounds                                               = 2; //最大局数
	optional int32 iCurRounds                                               = 3; //当前局数    
	optional int32 iDismiss													= 4; //是否是解散 0-是 1-不是
}

message ScoreTableMemberInfo_Repeat
{
	optional int32 iUserID													= 1; //用户ID
	optional string iFaceID													= 2; //头像
	optional string szNickName												= 3; //昵称
}
//LOBBY_SC_SCORE_TABLE_INFO
message SC_Score_Table_Info
{	
	optional int32 iKindID													= 1; //游戏类型
	optional string iPPRoomID												= 2; //积分房间ID
	optional int32 iMasterID												= 3; //创建者ID
	optional int32 iType													= 4; //0-其他时候返回桌子信息 1-请求查询的桌子信息返回
	repeated CreateTableItem_Repeat item                                    = 5; //对应数据
	repeated ScoreTableMemberInfo_Repeat member								= 6; //玩家列表
}

//LOBBY_CS_REQUEST_PPROOM_INVITE_FRIEND
message CS_Request_PPRoom_Invite_Friend
{
	repeated int32 iUserID													= 1; //好友ID
}

//LOBBY_CS_REQUEST_PPRESULT_INFO
message CS_Request_PPResult_Info
{
	optional int32 iMasterID												= 1;
	optional string szPPRoomID												= 2;
}

//LOBBY_SC_GETFREECREATESCORETABLETIMES
message SC_GetFreeCreateScoreTableTimes
{
	required int32 iScoreFreeTimes											= 1; //每日创建房间的次数
}
//LOBBY_CS_GETFREECREATESCORETABLETIMES
message CS_GetFreeCreateScoreTableTimes
{
}


//LOBBY_SC_NOEXIST_SCORE_TABLE
message SC_NoExist_Score_Table
{
}

//兑换码数据结构
message Save_UseRedeemCode
{
	repeated uint32 redeemcode = 1;							// 使用兑换码
}

//LOBBY_CS_USEREDEEMCODE                              = 70;   //使用兑换码
message CS_UseRedeemCode
{
	required string redeemcode = 1;		// 使用该兑换码
	required uint32 aimplayer  = 2;		// 送给该玩家
	required int32  type 	   = 3;		// 0:正常的CDKey  1:推荐码
}

//LOBBY_SC_USEREDEEMCODERST                           = 71;   //使用兑换码结果
message SC_UseRedeemCodeRst
{
	required int32 irst = 1;		// 0:成功  1:没有这个兑换码  2:已经被使用  3:该批次的兑换码已使用过并且不能重复使用  4:目标玩家不存在  5:不能使用自己的推荐码
	required uint32 propid = 2;		// 兑换的道具ID 
	required uint32 propnum = 3;	// 兑换的道具数量
	required int64 gold = 4;		//兑换的money
	optional int32  type = 5;		//  0:使用正常的CDKey  1:使用推荐码
}

//LOBBY_SC_BUSINESS_INFO							
message SC_Business_info 
{
	optional int32 iLvSign													= 1;//自己的等级
}

//LOBBY_SC_ROOM_CARD_COUNT						
message SC_ROOM_CARD_COUNT 
{
	optional int32 iCount													= 1;//房卡数量
}

//服务器内部保存
message BuyGoodsTimes
{
	optional int32 dwObjID      = 1;    //购买的道具ID
	optional int32 dwTimes      = 2;    //购买的次数
}
message Save_UserBuyGoodsTimes
{
	optional int64 qwRefreshTime	= 1;
	repeated BuyGoodsTimes item		= 2;	
}

message Save_UserProp
{
	optional int64 PropID   = 1;
	optional int32 dwCount = 2;				//道具数量
	repeated int64 qwTime = 3;
}
message Save_UserPropAllInFo
{
	repeated Save_UserProp  item = 1;
}


//REQUEST_GAME_ROOM_USER_INFO                         = 88;	//请求房间玩家信息
message CS_GameRoomUserInfo
{
	required int32 iRoomID  = 1;													    	//房间ID
	required int32 iUserCount  = 2;													    	//请求玩家信息的数量
}
//玩家进入发信息给房间所有人员
message User_Room_Info_Repeat
{
	required string szNickName = 1 [default = ""];										//昵称
	required string iFaceID = 2;												//头像索引
	required int32 iGender = 3;												//用户性别
	required int32 iUserID = 4;												//用户 ID
	required int32 iAccID = 5;												//用户别名ID
	required int32 iTicket = 6;												//用户彩票
	required int32 iGold = 7;												//金币数量
	required int32 iDiamond = 8;												//用户钻石
	required int64 i64RegistDate = 9;											//注册日期
	optional string szDescription = 10 [default = ""];                                              			//个人说明
	optional string szImage = 11 [default = ""];;                                                                           //头像
	optional string szMobile = 12 [default = ""];;                                          				//手机号
	required int32 iUserStatus = 13;											//用户状态
	optional string logonip = 14;                                                                                           // 登录ip 
}

//RETURN_GAME_ROOM_USER_INFO                          = 89;   //返回房间玩家信息
message SC_GameRoomUserInfo
{

	repeated User_Room_Info_Repeat userInfo  = 1;
	required int32 iRoomID  = 2;
}

//REQUEST_DIAMOND_TO_GOLD_SUB_CMD = 90  
message CS_RequestDiamondToGold 
{
	required int32   id      	          = 2;  // 商品编号
}
//RETURN_DIAMOND_TO_GOLD_SUB_CMD						=91;    //请求砖石换金币结果。
message SC_ReturnDiamondToGold 
{
	required int32 result 			  = 1;  // 结果码：0 成功，非0失败。1:商品不存在， 2：砖石不足
	required int32   id      	          = 2;  // 商品编号
	optional string resultStr = 3;
}

//LOBBY_SC_MAIL_CHANGE_SUB_CMD						= 93;	//通知玩家邮件信息有变化
message SC_MailChange 
{

}

//LOBBY_CS_SIGN_RED_CMD								= 94;	//签到领红包
message CS_Sign_Red
{

}

//LOBBY_SC_SIGN_RED_CMD							= 95;	//签到领红包返回
message SC_Sign_Red 
{
	required int32 result 			  = 1;  // 结果码：0 成功，非0失败。1:今日红包已领， 2：功能已关闭
	required int64 RedGold	  = 2;  //红包金豆数量
	required int64 WeekGold	  = 3;  //周奖励红包金豆数量
	required int64 SignCount  = 4;  //签到次数
	required int64 LastSignTime	  = 5;  //最后一次签到时间
}

//LOBBY_CS_REALNAME_AUTHENTICATION_CMD		= 96;	//实名认证请求
message CS_RealName_Authentication
{
	required string strRealName = 1; //真实姓名
	required string strIDCard   = 2; //身份证号 
}

//LOBBY_SC_REALNAME_AUTHENTICATION_CMD		= 97;	//实名认证返回
message SC_RealName_Authentication
{
	required int32 iResult = 1; //处理结果 0 成功其它错误读取错误消息
	required string strMsg   = 2; //错误消息 
}

//REQUEST_WX_PURCHASE_SUB_CMD						=98;    //请求威信购买钻石
message CS_Request_Wx_Purchase 
{
	required int64  product_id   		  = 1;  // 商品id
	required string  package           = 2;  //包用于生成签名
	required int32 trade_type         = 3;//支付类型   1 APP 2JSAPI公众号支付 等
}

//RETURN_WX_PURCHASE_SUB_CMD						   =99;    //返回威信购买钻石结果。
message SC_Response_Wx_Purchase 
{
	required string partnerId = 1;//子商户的商户号
	required string prepayId = 2;
	optional string package = 3;
	required string nonceStr= 4; 
	required int64  timeStamp= 5;
	required string sign= 6;
}

//REQUEST_WX_SGAME_PURCHASE_SUB_CMD						=100;    //请求威信小游戏-米大师购买钻石
message CS_Request_Wx_SGame_Purchase 
{
	required string  account   		 = 1;  // 登录时返回的帐号 及威信appid或unionid
	required string  package          = 2;  //包用于查找玩家
	required int32   shopid           = 3;  //商品ID
	optional string  clientip         = 4;  //客户端登录外网IP
}
//RETURN_WX_SGAME_PURCHASE_SUB_CMD						   =101;    //返回威信小游戏-米大师购买钻石结果。
message SC_Response_Wx_SGame_Purchase 
{
	required int32 iResult = 1; //处理结果 0 成功其它错误读取错误消息
	required string strMsg   = 2; //错误消息 
}