// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CmdXueZhanMj.proto

package XueZhanMj

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EnGameFrameID int32

const (
	EnGameFrameID_GAME_SUB_CS_USER_DISSOLVE_APPLY          EnGameFrameID = 1
	EnGameFrameID_GAME_SUB_CS_USER_ANSWER_DISSOLVE_APPLY   EnGameFrameID = 2
	EnGameFrameID_GAME_SUB_SC_USER_DISSOLVE_APPLY_NOTIFY   EnGameFrameID = 3
	EnGameFrameID_GAME_SUB_CS_USER_TABLE_CHAT              EnGameFrameID = 4
	EnGameFrameID_GAME_SUB_SC_USER_TABLE_CHAT_NOTIFY       EnGameFrameID = 5
	EnGameFrameID_GAME_SUB_CS_USER_READY_GAME              EnGameFrameID = 6
	EnGameFrameID_GAME_SUB_SC_USER_READY_GAME_NOTIFY       EnGameFrameID = 7
	EnGameFrameID_GAME_SUB_SC_USER_INFO_CHANGE_NOTIFY      EnGameFrameID = 8
	EnGameFrameID_GAME_SUB_SC_USER_TABLE_NOTIFY            EnGameFrameID = 9
	EnGameFrameID_GAME_SUB_SC_TABLE_DISMISS_NOTIFY         EnGameFrameID = 10
	EnGameFrameID_GAME_SUB_SC_USER_CARD_NOTIFY             EnGameFrameID = 11
	EnGameFrameID_GAME_SUB_CS_USER_DISMISS_TABLE           EnGameFrameID = 12
	EnGameFrameID_GAME_SUB_SC_USER_MJ_LAST_HANDLE_NOTIFY   EnGameFrameID = 13
	EnGameFrameID_GAME_SUB_SC_TABLE_TOTAL_WIN_NOTIFY       EnGameFrameID = 14
	EnGameFrameID_GAME_SUB_CS_TABLE_LAST_WIN_DETAIL        EnGameFrameID = 15
	EnGameFrameID_GAME_SUB_SC_TABLE_LAST_WIN_DETAIL_NOTIFY EnGameFrameID = 16
	EnGameFrameID_GAME_SUB_SC_USER_LAST_GAME_INFO_NOTIFY   EnGameFrameID = 17
	EnGameFrameID_GAME_SUB_CS_USER_WANT_CARDS              EnGameFrameID = 50
	EnGameFrameID_GAME_SUB_SC_USER_WANT_CARDS_RESULT       EnGameFrameID = 51
)

var EnGameFrameID_name = map[int32]string{
	1:  "GAME_SUB_CS_USER_DISSOLVE_APPLY",
	2:  "GAME_SUB_CS_USER_ANSWER_DISSOLVE_APPLY",
	3:  "GAME_SUB_SC_USER_DISSOLVE_APPLY_NOTIFY",
	4:  "GAME_SUB_CS_USER_TABLE_CHAT",
	5:  "GAME_SUB_SC_USER_TABLE_CHAT_NOTIFY",
	6:  "GAME_SUB_CS_USER_READY_GAME",
	7:  "GAME_SUB_SC_USER_READY_GAME_NOTIFY",
	8:  "GAME_SUB_SC_USER_INFO_CHANGE_NOTIFY",
	9:  "GAME_SUB_SC_USER_TABLE_NOTIFY",
	10: "GAME_SUB_SC_TABLE_DISMISS_NOTIFY",
	11: "GAME_SUB_SC_USER_CARD_NOTIFY",
	12: "GAME_SUB_CS_USER_DISMISS_TABLE",
	13: "GAME_SUB_SC_USER_MJ_LAST_HANDLE_NOTIFY",
	14: "GAME_SUB_SC_TABLE_TOTAL_WIN_NOTIFY",
	15: "GAME_SUB_CS_TABLE_LAST_WIN_DETAIL",
	16: "GAME_SUB_SC_TABLE_LAST_WIN_DETAIL_NOTIFY",
	17: "GAME_SUB_SC_USER_LAST_GAME_INFO_NOTIFY",
	50: "GAME_SUB_CS_USER_WANT_CARDS",
	51: "GAME_SUB_SC_USER_WANT_CARDS_RESULT",
}
var EnGameFrameID_value = map[string]int32{
	"GAME_SUB_CS_USER_DISSOLVE_APPLY":          1,
	"GAME_SUB_CS_USER_ANSWER_DISSOLVE_APPLY":   2,
	"GAME_SUB_SC_USER_DISSOLVE_APPLY_NOTIFY":   3,
	"GAME_SUB_CS_USER_TABLE_CHAT":              4,
	"GAME_SUB_SC_USER_TABLE_CHAT_NOTIFY":       5,
	"GAME_SUB_CS_USER_READY_GAME":              6,
	"GAME_SUB_SC_USER_READY_GAME_NOTIFY":       7,
	"GAME_SUB_SC_USER_INFO_CHANGE_NOTIFY":      8,
	"GAME_SUB_SC_USER_TABLE_NOTIFY":            9,
	"GAME_SUB_SC_TABLE_DISMISS_NOTIFY":         10,
	"GAME_SUB_SC_USER_CARD_NOTIFY":             11,
	"GAME_SUB_CS_USER_DISMISS_TABLE":           12,
	"GAME_SUB_SC_USER_MJ_LAST_HANDLE_NOTIFY":   13,
	"GAME_SUB_SC_TABLE_TOTAL_WIN_NOTIFY":       14,
	"GAME_SUB_CS_TABLE_LAST_WIN_DETAIL":        15,
	"GAME_SUB_SC_TABLE_LAST_WIN_DETAIL_NOTIFY": 16,
	"GAME_SUB_SC_USER_LAST_GAME_INFO_NOTIFY":   17,
	"GAME_SUB_CS_USER_WANT_CARDS":              50,
	"GAME_SUB_SC_USER_WANT_CARDS_RESULT":       51,
}

func (x EnGameFrameID) Enum() *EnGameFrameID {
	p := new(EnGameFrameID)
	*p = x
	return p
}
func (x EnGameFrameID) String() string {
	return proto.EnumName(EnGameFrameID_name, int32(x))
}
func (x *EnGameFrameID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnGameFrameID_value, data, "EnGameFrameID")
	if err != nil {
		return err
	}
	*x = EnGameFrameID(value)
	return nil
}
func (EnGameFrameID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{0}
}

type EnGameSubID int32

const (
	EnGameSubID_GAME_SUB_SC_GAME_START            EnGameSubID = 100
	EnGameSubID_GAME_SUB_SC_ASSIGN_MJ_NOTIFY      EnGameSubID = 101
	EnGameSubID_GAME_SUB_SC_GET_MJ_NOTIFY         EnGameSubID = 102
	EnGameSubID_GAME_SUB_SC_OPERATE_CODE_NOTIFY   EnGameSubID = 103
	EnGameSubID_GAME_SUB_SC_HUAN_SAN_ZHANG_NOTIFY EnGameSubID = 104
	EnGameSubID_GAME_SUB_CS_OPERATE               EnGameSubID = 105
	EnGameSubID_GAME_SUB_SC_OPERATE_RESULT_NOTIFY EnGameSubID = 106
	EnGameSubID_GAME_SUB_SC_SETTLEMENTINFO_NOTIFY EnGameSubID = 107
	EnGameSubID_GAME_SUB_SC_GAME_END              EnGameSubID = 108
)

var EnGameSubID_name = map[int32]string{
	100: "GAME_SUB_SC_GAME_START",
	101: "GAME_SUB_SC_ASSIGN_MJ_NOTIFY",
	102: "GAME_SUB_SC_GET_MJ_NOTIFY",
	103: "GAME_SUB_SC_OPERATE_CODE_NOTIFY",
	104: "GAME_SUB_SC_HUAN_SAN_ZHANG_NOTIFY",
	105: "GAME_SUB_CS_OPERATE",
	106: "GAME_SUB_SC_OPERATE_RESULT_NOTIFY",
	107: "GAME_SUB_SC_SETTLEMENTINFO_NOTIFY",
	108: "GAME_SUB_SC_GAME_END",
}
var EnGameSubID_value = map[string]int32{
	"GAME_SUB_SC_GAME_START":            100,
	"GAME_SUB_SC_ASSIGN_MJ_NOTIFY":      101,
	"GAME_SUB_SC_GET_MJ_NOTIFY":         102,
	"GAME_SUB_SC_OPERATE_CODE_NOTIFY":   103,
	"GAME_SUB_SC_HUAN_SAN_ZHANG_NOTIFY": 104,
	"GAME_SUB_CS_OPERATE":               105,
	"GAME_SUB_SC_OPERATE_RESULT_NOTIFY": 106,
	"GAME_SUB_SC_SETTLEMENTINFO_NOTIFY": 107,
	"GAME_SUB_SC_GAME_END":              108,
}

func (x EnGameSubID) Enum() *EnGameSubID {
	p := new(EnGameSubID)
	*p = x
	return p
}
func (x EnGameSubID) String() string {
	return proto.EnumName(EnGameSubID_name, int32(x))
}
func (x *EnGameSubID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnGameSubID_value, data, "EnGameSubID")
	if err != nil {
		return err
	}
	*x = EnGameSubID(value)
	return nil
}
func (EnGameSubID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{1}
}

type TableFinalDecision int32

const (
	TableFinalDecision_Table_Decision_None     TableFinalDecision = 1
	TableFinalDecision_Table_Decision_Agree    TableFinalDecision = 2
	TableFinalDecision_Table_Decision_Disagree TableFinalDecision = 3
)

var TableFinalDecision_name = map[int32]string{
	1: "Table_Decision_None",
	2: "Table_Decision_Agree",
	3: "Table_Decision_Disagree",
}
var TableFinalDecision_value = map[string]int32{
	"Table_Decision_None":     1,
	"Table_Decision_Agree":    2,
	"Table_Decision_Disagree": 3,
}

func (x TableFinalDecision) Enum() *TableFinalDecision {
	p := new(TableFinalDecision)
	*p = x
	return p
}
func (x TableFinalDecision) String() string {
	return proto.EnumName(TableFinalDecision_name, int32(x))
}
func (x *TableFinalDecision) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableFinalDecision_value, data, "TableFinalDecision")
	if err != nil {
		return err
	}
	*x = TableFinalDecision(value)
	return nil
}
func (TableFinalDecision) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{2}
}

type TableState int32

const (
	TableState_Table_State_Init          TableState = 1
	TableState_Table_State_Start         TableState = 2
	TableState_Table_State_Gaming        TableState = 3
	TableState_Table_State_Game_End      TableState = 4
	TableState_Table_State_Dissolve      TableState = 5
	TableState_Table_State_Wait_Dissolve TableState = 6
)

var TableState_name = map[int32]string{
	1: "Table_State_Init",
	2: "Table_State_Start",
	3: "Table_State_Gaming",
	4: "Table_State_Game_End",
	5: "Table_State_Dissolve",
	6: "Table_State_Wait_Dissolve",
}
var TableState_value = map[string]int32{
	"Table_State_Init":          1,
	"Table_State_Start":         2,
	"Table_State_Gaming":        3,
	"Table_State_Game_End":      4,
	"Table_State_Dissolve":      5,
	"Table_State_Wait_Dissolve": 6,
}

func (x TableState) Enum() *TableState {
	p := new(TableState)
	*p = x
	return p
}
func (x TableState) String() string {
	return proto.EnumName(TableState_name, int32(x))
}
func (x *TableState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableState_value, data, "TableState")
	if err != nil {
		return err
	}
	*x = TableState(value)
	return nil
}
func (TableState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{3}
}

type UserState int32

const (
	UserState_Mj_User_State_Init    UserState = 1
	UserState_Mj_User_State_Sit     UserState = 2
	UserState_Mj_User_State_Ready   UserState = 3
	UserState_Mj_User_State_Playing UserState = 4
	UserState_Mj_User_State_Hu      UserState = 5
	UserState_Mj_User_State_GiveUp  UserState = 6
)

var UserState_name = map[int32]string{
	1: "Mj_User_State_Init",
	2: "Mj_User_State_Sit",
	3: "Mj_User_State_Ready",
	4: "Mj_User_State_Playing",
	5: "Mj_User_State_Hu",
	6: "Mj_User_State_GiveUp",
}
var UserState_value = map[string]int32{
	"Mj_User_State_Init":    1,
	"Mj_User_State_Sit":     2,
	"Mj_User_State_Ready":   3,
	"Mj_User_State_Playing": 4,
	"Mj_User_State_Hu":      5,
	"Mj_User_State_GiveUp":  6,
}

func (x UserState) Enum() *UserState {
	p := new(UserState)
	*p = x
	return p
}
func (x UserState) String() string {
	return proto.EnumName(UserState_name, int32(x))
}
func (x *UserState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserState_value, data, "UserState")
	if err != nil {
		return err
	}
	*x = UserState(value)
	return nil
}
func (UserState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{4}
}

type HUAN_SAN_ZHANG_TYPE int32

const (
	HUAN_SAN_ZHANG_TYPE_HUAN_SAN_ZHANG_TYPE_NONE HUAN_SAN_ZHANG_TYPE = 0
	HUAN_SAN_ZHANG_TYPE_HUAN_SAN_ZHANG_TYPE_1    HUAN_SAN_ZHANG_TYPE = 1
	HUAN_SAN_ZHANG_TYPE_HUAN_SAN_ZHANG_TYPE_2    HUAN_SAN_ZHANG_TYPE = 2
)

var HUAN_SAN_ZHANG_TYPE_name = map[int32]string{
	0: "HUAN_SAN_ZHANG_TYPE_NONE",
	1: "HUAN_SAN_ZHANG_TYPE_1",
	2: "HUAN_SAN_ZHANG_TYPE_2",
}
var HUAN_SAN_ZHANG_TYPE_value = map[string]int32{
	"HUAN_SAN_ZHANG_TYPE_NONE": 0,
	"HUAN_SAN_ZHANG_TYPE_1":    1,
	"HUAN_SAN_ZHANG_TYPE_2":    2,
}

func (x HUAN_SAN_ZHANG_TYPE) Enum() *HUAN_SAN_ZHANG_TYPE {
	p := new(HUAN_SAN_ZHANG_TYPE)
	*p = x
	return p
}
func (x HUAN_SAN_ZHANG_TYPE) String() string {
	return proto.EnumName(HUAN_SAN_ZHANG_TYPE_name, int32(x))
}
func (x *HUAN_SAN_ZHANG_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HUAN_SAN_ZHANG_TYPE_value, data, "HUAN_SAN_ZHANG_TYPE")
	if err != nil {
		return err
	}
	*x = HUAN_SAN_ZHANG_TYPE(value)
	return nil
}
func (HUAN_SAN_ZHANG_TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{5}
}

// 扑克操作码
type MJ_OPERATE_MASK int32

const (
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_NONE           MJ_OPERATE_MASK = 1
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_DEAL           MJ_OPERATE_MASK = 2
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_GUO            MJ_OPERATE_MASK = 3
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_PENG           MJ_OPERATE_MASK = 4
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_MING_GANG      MJ_OPERATE_MASK = 5
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_AN_GANG        MJ_OPERATE_MASK = 6
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_BU_GANG        MJ_OPERATE_MASK = 7
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_REJECTSUIT     MJ_OPERATE_MASK = 8
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_HU             MJ_OPERATE_MASK = 9
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_MO_PAI         MJ_OPERATE_MASK = 10
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_GIVE_UP        MJ_OPERATE_MASK = 11
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_HUAN_SAN_ZHANG MJ_OPERATE_MASK = 12
)

var MJ_OPERATE_MASK_name = map[int32]string{
	1:  "MJ_OPERATE_MASK_NONE",
	2:  "MJ_OPERATE_MASK_DEAL",
	3:  "MJ_OPERATE_MASK_GUO",
	4:  "MJ_OPERATE_MASK_PENG",
	5:  "MJ_OPERATE_MASK_MING_GANG",
	6:  "MJ_OPERATE_MASK_AN_GANG",
	7:  "MJ_OPERATE_MASK_BU_GANG",
	8:  "MJ_OPERATE_MASK_REJECTSUIT",
	9:  "MJ_OPERATE_MASK_HU",
	10: "MJ_OPERATE_MASK_MO_PAI",
	11: "MJ_OPERATE_MASK_GIVE_UP",
	12: "MJ_OPERATE_MASK_HUAN_SAN_ZHANG",
}
var MJ_OPERATE_MASK_value = map[string]int32{
	"MJ_OPERATE_MASK_NONE":           1,
	"MJ_OPERATE_MASK_DEAL":           2,
	"MJ_OPERATE_MASK_GUO":            3,
	"MJ_OPERATE_MASK_PENG":           4,
	"MJ_OPERATE_MASK_MING_GANG":      5,
	"MJ_OPERATE_MASK_AN_GANG":        6,
	"MJ_OPERATE_MASK_BU_GANG":        7,
	"MJ_OPERATE_MASK_REJECTSUIT":     8,
	"MJ_OPERATE_MASK_HU":             9,
	"MJ_OPERATE_MASK_MO_PAI":         10,
	"MJ_OPERATE_MASK_GIVE_UP":        11,
	"MJ_OPERATE_MASK_HUAN_SAN_ZHANG": 12,
}

func (x MJ_OPERATE_MASK) Enum() *MJ_OPERATE_MASK {
	p := new(MJ_OPERATE_MASK)
	*p = x
	return p
}
func (x MJ_OPERATE_MASK) String() string {
	return proto.EnumName(MJ_OPERATE_MASK_name, int32(x))
}
func (x *MJ_OPERATE_MASK) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MJ_OPERATE_MASK_value, data, "MJ_OPERATE_MASK")
	if err != nil {
		return err
	}
	*x = MJ_OPERATE_MASK(value)
	return nil
}
func (MJ_OPERATE_MASK) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{6}
}

// 扑克结算类型
type MJ_SETTLEMENT_TYPE int32

const (
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_NONE       MJ_SETTLEMENT_TYPE = 0
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_HU         MJ_SETTLEMENT_TYPE = 1
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_ZI_MO      MJ_SETTLEMENT_TYPE = 2
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_QIANG_GANG MJ_SETTLEMENT_TYPE = 3
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_GANG_HUA   MJ_SETTLEMENT_TYPE = 4
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_GANG_PAO   MJ_SETTLEMENT_TYPE = 5
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_GUA_FENG   MJ_SETTLEMENT_TYPE = 6
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_XIA_YU     MJ_SETTLEMENT_TYPE = 7
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_CHA_JIAO   MJ_SETTLEMENT_TYPE = 8
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_TUI_SHUI   MJ_SETTLEMENT_TYPE = 9
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_HUA_ZHU    MJ_SETTLEMENT_TYPE = 10
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_ZHUAN_YU   MJ_SETTLEMENT_TYPE = 11
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_TIAN_HU    MJ_SETTLEMENT_TYPE = 12
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_DI_HU      MJ_SETTLEMENT_TYPE = 13
)

var MJ_SETTLEMENT_TYPE_name = map[int32]string{
	0:  "MJ_SETTLEMENT_TYPE_NONE",
	1:  "MJ_SETTLEMENT_TYPE_HU",
	2:  "MJ_SETTLEMENT_TYPE_ZI_MO",
	3:  "MJ_SETTLEMENT_TYPE_QIANG_GANG",
	4:  "MJ_SETTLEMENT_TYPE_GANG_HUA",
	5:  "MJ_SETTLEMENT_TYPE_GANG_PAO",
	6:  "MJ_SETTLEMENT_TYPE_GUA_FENG",
	7:  "MJ_SETTLEMENT_TYPE_XIA_YU",
	8:  "MJ_SETTLEMENT_TYPE_CHA_JIAO",
	9:  "MJ_SETTLEMENT_TYPE_TUI_SHUI",
	10: "MJ_SETTLEMENT_TYPE_HUA_ZHU",
	11: "MJ_SETTLEMENT_TYPE_ZHUAN_YU",
	12: "MJ_SETTLEMENT_TYPE_TIAN_HU",
	13: "MJ_SETTLEMENT_TYPE_DI_HU",
}
var MJ_SETTLEMENT_TYPE_value = map[string]int32{
	"MJ_SETTLEMENT_TYPE_NONE":       0,
	"MJ_SETTLEMENT_TYPE_HU":         1,
	"MJ_SETTLEMENT_TYPE_ZI_MO":      2,
	"MJ_SETTLEMENT_TYPE_QIANG_GANG": 3,
	"MJ_SETTLEMENT_TYPE_GANG_HUA":   4,
	"MJ_SETTLEMENT_TYPE_GANG_PAO":   5,
	"MJ_SETTLEMENT_TYPE_GUA_FENG":   6,
	"MJ_SETTLEMENT_TYPE_XIA_YU":     7,
	"MJ_SETTLEMENT_TYPE_CHA_JIAO":   8,
	"MJ_SETTLEMENT_TYPE_TUI_SHUI":   9,
	"MJ_SETTLEMENT_TYPE_HUA_ZHU":    10,
	"MJ_SETTLEMENT_TYPE_ZHUAN_YU":   11,
	"MJ_SETTLEMENT_TYPE_TIAN_HU":    12,
	"MJ_SETTLEMENT_TYPE_DI_HU":      13,
}

func (x MJ_SETTLEMENT_TYPE) Enum() *MJ_SETTLEMENT_TYPE {
	p := new(MJ_SETTLEMENT_TYPE)
	*p = x
	return p
}
func (x MJ_SETTLEMENT_TYPE) String() string {
	return proto.EnumName(MJ_SETTLEMENT_TYPE_name, int32(x))
}
func (x *MJ_SETTLEMENT_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MJ_SETTLEMENT_TYPE_value, data, "MJ_SETTLEMENT_TYPE")
	if err != nil {
		return err
	}
	*x = MJ_SETTLEMENT_TYPE(value)
	return nil
}
func (MJ_SETTLEMENT_TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{7}
}

type FINAL_CARD_TYPE int32

const (
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_NONE         FINAL_CARD_TYPE = 0
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_HU           FINAL_CARD_TYPE = 1
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_DA_DUI       FINAL_CARD_TYPE = 2
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_JIANG        FINAL_CARD_TYPE = 4
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_YAO_JIU      FINAL_CARD_TYPE = 8
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_QING         FINAL_CARD_TYPE = 16
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_QI_DUI       FINAL_CARD_TYPE = 32
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_JIN_GOU_DIAO FINAL_CARD_TYPE = 64
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_HAI_DI_LAO   FINAL_CARD_TYPE = 128
)

var FINAL_CARD_TYPE_name = map[int32]string{
	0:   "FINAL_CARD_TYPE_NONE",
	1:   "FINAL_CARD_TYPE_HU",
	2:   "FINAL_CARD_TYPE_DA_DUI",
	4:   "FINAL_CARD_TYPE_JIANG",
	8:   "FINAL_CARD_TYPE_YAO_JIU",
	16:  "FINAL_CARD_TYPE_QING",
	32:  "FINAL_CARD_TYPE_QI_DUI",
	64:  "FINAL_CARD_TYPE_JIN_GOU_DIAO",
	128: "FINAL_CARD_TYPE_HAI_DI_LAO",
}
var FINAL_CARD_TYPE_value = map[string]int32{
	"FINAL_CARD_TYPE_NONE":         0,
	"FINAL_CARD_TYPE_HU":           1,
	"FINAL_CARD_TYPE_DA_DUI":       2,
	"FINAL_CARD_TYPE_JIANG":        4,
	"FINAL_CARD_TYPE_YAO_JIU":      8,
	"FINAL_CARD_TYPE_QING":         16,
	"FINAL_CARD_TYPE_QI_DUI":       32,
	"FINAL_CARD_TYPE_JIN_GOU_DIAO": 64,
	"FINAL_CARD_TYPE_HAI_DI_LAO":   128,
}

func (x FINAL_CARD_TYPE) Enum() *FINAL_CARD_TYPE {
	p := new(FINAL_CARD_TYPE)
	*p = x
	return p
}
func (x FINAL_CARD_TYPE) String() string {
	return proto.EnumName(FINAL_CARD_TYPE_name, int32(x))
}
func (x *FINAL_CARD_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FINAL_CARD_TYPE_value, data, "FINAL_CARD_TYPE")
	if err != nil {
		return err
	}
	*x = FINAL_CARD_TYPE(value)
	return nil
}
func (FINAL_CARD_TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{8}
}

// 换三张的类型
type HSZ_TYPE int32

const (
	HSZ_TYPE_HSZ_TYPE_NONE           HSZ_TYPE = 0
	HSZ_TYPE_HSZ_TYPE_CLOCKWISE      HSZ_TYPE = 1
	HSZ_TYPE_HSZ_TYPE_ANTI_CLOCKWISE HSZ_TYPE = 2
	HSZ_TYPE_HSZ_TYPE_FTF            HSZ_TYPE = 3
)

var HSZ_TYPE_name = map[int32]string{
	0: "HSZ_TYPE_NONE",
	1: "HSZ_TYPE_CLOCKWISE",
	2: "HSZ_TYPE_ANTI_CLOCKWISE",
	3: "HSZ_TYPE_FTF",
}
var HSZ_TYPE_value = map[string]int32{
	"HSZ_TYPE_NONE":           0,
	"HSZ_TYPE_CLOCKWISE":      1,
	"HSZ_TYPE_ANTI_CLOCKWISE": 2,
	"HSZ_TYPE_FTF":            3,
}

func (x HSZ_TYPE) Enum() *HSZ_TYPE {
	p := new(HSZ_TYPE)
	*p = x
	return p
}
func (x HSZ_TYPE) String() string {
	return proto.EnumName(HSZ_TYPE_name, int32(x))
}
func (x *HSZ_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HSZ_TYPE_value, data, "HSZ_TYPE")
	if err != nil {
		return err
	}
	*x = HSZ_TYPE(value)
	return nil
}
func (HSZ_TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{9}
}

// GAME_SUB_CS_USER_DISSOLVE_APPLY = 1;//申请解散桌子
type CS_UserDissolveApply struct {
	MApplySeatId         *uint32  `protobuf:"varint,1,req,name=mApplySeatId" json:"mApplySeatId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_UserDissolveApply) Reset()         { *m = CS_UserDissolveApply{} }
func (m *CS_UserDissolveApply) String() string { return proto.CompactTextString(m) }
func (*CS_UserDissolveApply) ProtoMessage()    {}
func (*CS_UserDissolveApply) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{0}
}
func (m *CS_UserDissolveApply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_UserDissolveApply.Unmarshal(m, b)
}
func (m *CS_UserDissolveApply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_UserDissolveApply.Marshal(b, m, deterministic)
}
func (dst *CS_UserDissolveApply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_UserDissolveApply.Merge(dst, src)
}
func (m *CS_UserDissolveApply) XXX_Size() int {
	return xxx_messageInfo_CS_UserDissolveApply.Size(m)
}
func (m *CS_UserDissolveApply) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_UserDissolveApply.DiscardUnknown(m)
}

var xxx_messageInfo_CS_UserDissolveApply proto.InternalMessageInfo

func (m *CS_UserDissolveApply) GetMApplySeatId() uint32 {
	if m != nil && m.MApplySeatId != nil {
		return *m.MApplySeatId
	}
	return 0
}

// GAME_SUB_CS_USER_ANSWER_DISSOLVE_APPLY = 2;//应答解散申请
type CS_UserAnswerDissolveApply struct {
	MAnswerApplySeatId   *uint32  `protobuf:"varint,1,req,name=mAnswerApplySeatId" json:"mAnswerApplySeatId,omitempty"`
	MAgree               *bool    `protobuf:"varint,2,req,name=mAgree" json:"mAgree,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_UserAnswerDissolveApply) Reset()         { *m = CS_UserAnswerDissolveApply{} }
func (m *CS_UserAnswerDissolveApply) String() string { return proto.CompactTextString(m) }
func (*CS_UserAnswerDissolveApply) ProtoMessage()    {}
func (*CS_UserAnswerDissolveApply) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{1}
}
func (m *CS_UserAnswerDissolveApply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_UserAnswerDissolveApply.Unmarshal(m, b)
}
func (m *CS_UserAnswerDissolveApply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_UserAnswerDissolveApply.Marshal(b, m, deterministic)
}
func (dst *CS_UserAnswerDissolveApply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_UserAnswerDissolveApply.Merge(dst, src)
}
func (m *CS_UserAnswerDissolveApply) XXX_Size() int {
	return xxx_messageInfo_CS_UserAnswerDissolveApply.Size(m)
}
func (m *CS_UserAnswerDissolveApply) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_UserAnswerDissolveApply.DiscardUnknown(m)
}

var xxx_messageInfo_CS_UserAnswerDissolveApply proto.InternalMessageInfo

func (m *CS_UserAnswerDissolveApply) GetMAnswerApplySeatId() uint32 {
	if m != nil && m.MAnswerApplySeatId != nil {
		return *m.MAnswerApplySeatId
	}
	return 0
}

func (m *CS_UserAnswerDissolveApply) GetMAgree() bool {
	if m != nil && m.MAgree != nil {
		return *m.MAgree
	}
	return false
}

// GAME_SUB_SC_USER_DISSOLVE_APPLY_NOTIFY = 3;//申请解散通知
type SC_UserDissolveApplyNotify struct {
	MApplySeatId          *uint32             `protobuf:"varint,1,req,name=mApplySeatId" json:"mApplySeatId,omitempty"`
	MAgreeApplySeatIds    []uint32            `protobuf:"varint,2,rep,name=mAgreeApplySeatIds" json:"mAgreeApplySeatIds,omitempty"`
	MDisagreeApplySeatIds []uint32            `protobuf:"varint,3,rep,name=mDisagreeApplySeatIds" json:"mDisagreeApplySeatIds,omitempty"`
	MFinalDecision        *TableFinalDecision `protobuf:"varint,4,req,name=mFinalDecision,enum=XueZhanMj.TableFinalDecision" json:"mFinalDecision,omitempty"`
	MApplyTimeOut         *uint32             `protobuf:"varint,5,req,name=mApplyTimeOut" json:"mApplyTimeOut,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}            `json:"-"`
	XXX_unrecognized      []byte              `json:"-"`
	XXX_sizecache         int32               `json:"-"`
}

func (m *SC_UserDissolveApplyNotify) Reset()         { *m = SC_UserDissolveApplyNotify{} }
func (m *SC_UserDissolveApplyNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserDissolveApplyNotify) ProtoMessage()    {}
func (*SC_UserDissolveApplyNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{2}
}
func (m *SC_UserDissolveApplyNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserDissolveApplyNotify.Unmarshal(m, b)
}
func (m *SC_UserDissolveApplyNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserDissolveApplyNotify.Marshal(b, m, deterministic)
}
func (dst *SC_UserDissolveApplyNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserDissolveApplyNotify.Merge(dst, src)
}
func (m *SC_UserDissolveApplyNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserDissolveApplyNotify.Size(m)
}
func (m *SC_UserDissolveApplyNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserDissolveApplyNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserDissolveApplyNotify proto.InternalMessageInfo

func (m *SC_UserDissolveApplyNotify) GetMApplySeatId() uint32 {
	if m != nil && m.MApplySeatId != nil {
		return *m.MApplySeatId
	}
	return 0
}

func (m *SC_UserDissolveApplyNotify) GetMAgreeApplySeatIds() []uint32 {
	if m != nil {
		return m.MAgreeApplySeatIds
	}
	return nil
}

func (m *SC_UserDissolveApplyNotify) GetMDisagreeApplySeatIds() []uint32 {
	if m != nil {
		return m.MDisagreeApplySeatIds
	}
	return nil
}

func (m *SC_UserDissolveApplyNotify) GetMFinalDecision() TableFinalDecision {
	if m != nil && m.MFinalDecision != nil {
		return *m.MFinalDecision
	}
	return TableFinalDecision_Table_Decision_None
}

func (m *SC_UserDissolveApplyNotify) GetMApplyTimeOut() uint32 {
	if m != nil && m.MApplyTimeOut != nil {
		return *m.MApplyTimeOut
	}
	return 0
}

// GAME_SUB_CS_USER_TABLE_CHAT = 4;//聊天
type CS_UserTableChatRqst struct {
	MOperateSeatId       *uint32  `protobuf:"varint,1,req,name=mOperateSeatId" json:"mOperateSeatId,omitempty"`
	MTextContent         *string  `protobuf:"bytes,2,opt,name=mTextContent" json:"mTextContent,omitempty"`
	MBinaryContent       []byte   `protobuf:"bytes,3,opt,name=mBinaryContent" json:"mBinaryContent,omitempty"`
	MContentTime         *uint32  `protobuf:"varint,4,opt,name=mContentTime" json:"mContentTime,omitempty"`
	MImageId             *uint32  `protobuf:"varint,5,opt,name=mImageId" json:"mImageId,omitempty"`
	MMediaId             *uint32  `protobuf:"varint,6,opt,name=mMediaId" json:"mMediaId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_UserTableChatRqst) Reset()         { *m = CS_UserTableChatRqst{} }
func (m *CS_UserTableChatRqst) String() string { return proto.CompactTextString(m) }
func (*CS_UserTableChatRqst) ProtoMessage()    {}
func (*CS_UserTableChatRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{3}
}
func (m *CS_UserTableChatRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_UserTableChatRqst.Unmarshal(m, b)
}
func (m *CS_UserTableChatRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_UserTableChatRqst.Marshal(b, m, deterministic)
}
func (dst *CS_UserTableChatRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_UserTableChatRqst.Merge(dst, src)
}
func (m *CS_UserTableChatRqst) XXX_Size() int {
	return xxx_messageInfo_CS_UserTableChatRqst.Size(m)
}
func (m *CS_UserTableChatRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_UserTableChatRqst.DiscardUnknown(m)
}

var xxx_messageInfo_CS_UserTableChatRqst proto.InternalMessageInfo

func (m *CS_UserTableChatRqst) GetMOperateSeatId() uint32 {
	if m != nil && m.MOperateSeatId != nil {
		return *m.MOperateSeatId
	}
	return 0
}

func (m *CS_UserTableChatRqst) GetMTextContent() string {
	if m != nil && m.MTextContent != nil {
		return *m.MTextContent
	}
	return ""
}

func (m *CS_UserTableChatRqst) GetMBinaryContent() []byte {
	if m != nil {
		return m.MBinaryContent
	}
	return nil
}

func (m *CS_UserTableChatRqst) GetMContentTime() uint32 {
	if m != nil && m.MContentTime != nil {
		return *m.MContentTime
	}
	return 0
}

func (m *CS_UserTableChatRqst) GetMImageId() uint32 {
	if m != nil && m.MImageId != nil {
		return *m.MImageId
	}
	return 0
}

func (m *CS_UserTableChatRqst) GetMMediaId() uint32 {
	if m != nil && m.MMediaId != nil {
		return *m.MMediaId
	}
	return 0
}

// GAME_SUB_SC_USER_TABLE_CHAT_NOTIFY = 5;//聊天信息通知
type SC_UserTableChatNotify struct {
	MOperateSeatId       *uint32  `protobuf:"varint,1,req,name=mOperateSeatId" json:"mOperateSeatId,omitempty"`
	MTextContent         *string  `protobuf:"bytes,2,opt,name=mTextContent" json:"mTextContent,omitempty"`
	MBinaryContent       []byte   `protobuf:"bytes,3,opt,name=mBinaryContent" json:"mBinaryContent,omitempty"`
	MContentTime         *uint32  `protobuf:"varint,4,opt,name=mContentTime" json:"mContentTime,omitempty"`
	MImageId             *uint32  `protobuf:"varint,5,opt,name=mImageId" json:"mImageId,omitempty"`
	MMediaId             *uint32  `protobuf:"varint,6,opt,name=mMediaId" json:"mMediaId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_UserTableChatNotify) Reset()         { *m = SC_UserTableChatNotify{} }
func (m *SC_UserTableChatNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserTableChatNotify) ProtoMessage()    {}
func (*SC_UserTableChatNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{4}
}
func (m *SC_UserTableChatNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserTableChatNotify.Unmarshal(m, b)
}
func (m *SC_UserTableChatNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserTableChatNotify.Marshal(b, m, deterministic)
}
func (dst *SC_UserTableChatNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserTableChatNotify.Merge(dst, src)
}
func (m *SC_UserTableChatNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserTableChatNotify.Size(m)
}
func (m *SC_UserTableChatNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserTableChatNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserTableChatNotify proto.InternalMessageInfo

func (m *SC_UserTableChatNotify) GetMOperateSeatId() uint32 {
	if m != nil && m.MOperateSeatId != nil {
		return *m.MOperateSeatId
	}
	return 0
}

func (m *SC_UserTableChatNotify) GetMTextContent() string {
	if m != nil && m.MTextContent != nil {
		return *m.MTextContent
	}
	return ""
}

func (m *SC_UserTableChatNotify) GetMBinaryContent() []byte {
	if m != nil {
		return m.MBinaryContent
	}
	return nil
}

func (m *SC_UserTableChatNotify) GetMContentTime() uint32 {
	if m != nil && m.MContentTime != nil {
		return *m.MContentTime
	}
	return 0
}

func (m *SC_UserTableChatNotify) GetMImageId() uint32 {
	if m != nil && m.MImageId != nil {
		return *m.MImageId
	}
	return 0
}

func (m *SC_UserTableChatNotify) GetMMediaId() uint32 {
	if m != nil && m.MMediaId != nil {
		return *m.MMediaId
	}
	return 0
}

// GAME_SUB_CS_USER_READY_GAME = 6; //准备游戏
type CS_UserReadyGameRqst struct {
	MReadySeatId         *uint32  `protobuf:"varint,1,req,name=mReadySeatId" json:"mReadySeatId,omitempty"`
	MCards               []uint32 `protobuf:"varint,2,rep,name=mCards" json:"mCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_UserReadyGameRqst) Reset()         { *m = CS_UserReadyGameRqst{} }
func (m *CS_UserReadyGameRqst) String() string { return proto.CompactTextString(m) }
func (*CS_UserReadyGameRqst) ProtoMessage()    {}
func (*CS_UserReadyGameRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{5}
}
func (m *CS_UserReadyGameRqst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_UserReadyGameRqst.Unmarshal(m, b)
}
func (m *CS_UserReadyGameRqst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_UserReadyGameRqst.Marshal(b, m, deterministic)
}
func (dst *CS_UserReadyGameRqst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_UserReadyGameRqst.Merge(dst, src)
}
func (m *CS_UserReadyGameRqst) XXX_Size() int {
	return xxx_messageInfo_CS_UserReadyGameRqst.Size(m)
}
func (m *CS_UserReadyGameRqst) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_UserReadyGameRqst.DiscardUnknown(m)
}

var xxx_messageInfo_CS_UserReadyGameRqst proto.InternalMessageInfo

func (m *CS_UserReadyGameRqst) GetMReadySeatId() uint32 {
	if m != nil && m.MReadySeatId != nil {
		return *m.MReadySeatId
	}
	return 0
}

func (m *CS_UserReadyGameRqst) GetMCards() []uint32 {
	if m != nil {
		return m.MCards
	}
	return nil
}

// GAME_SUB_SC_USER_READY_GAME_NOTIFY = 7; //准备游戏通知
type SC_UserReadyGameNotify struct {
	MReadySeatId         *uint32  `protobuf:"varint,1,req,name=mReadySeatId" json:"mReadySeatId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_UserReadyGameNotify) Reset()         { *m = SC_UserReadyGameNotify{} }
func (m *SC_UserReadyGameNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserReadyGameNotify) ProtoMessage()    {}
func (*SC_UserReadyGameNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{6}
}
func (m *SC_UserReadyGameNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserReadyGameNotify.Unmarshal(m, b)
}
func (m *SC_UserReadyGameNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserReadyGameNotify.Marshal(b, m, deterministic)
}
func (dst *SC_UserReadyGameNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserReadyGameNotify.Merge(dst, src)
}
func (m *SC_UserReadyGameNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserReadyGameNotify.Size(m)
}
func (m *SC_UserReadyGameNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserReadyGameNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserReadyGameNotify proto.InternalMessageInfo

func (m *SC_UserReadyGameNotify) GetMReadySeatId() uint32 {
	if m != nil && m.MReadySeatId != nil {
		return *m.MReadySeatId
	}
	return 0
}

// GAME_SUB_SC_USER_INFO_CHANGE_NOTIFY = 8; //通知玩家基础信息改变
type SC_UseBaseInfoNotify struct {
	MSeatId              *uint32         `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MUserState           *UserState      `protobuf:"varint,2,req,name=mUserState,enum=XueZhanMj.UserState" json:"mUserState,omitempty"`
	MOffLineFlag         *bool           `protobuf:"varint,3,req,name=mOffLineFlag" json:"mOffLineFlag,omitempty"`
	MBaseInfo            *PlayerBaseInfo `protobuf:"bytes,4,req,name=mBaseInfo" json:"mBaseInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SC_UseBaseInfoNotify) Reset()         { *m = SC_UseBaseInfoNotify{} }
func (m *SC_UseBaseInfoNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UseBaseInfoNotify) ProtoMessage()    {}
func (*SC_UseBaseInfoNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{7}
}
func (m *SC_UseBaseInfoNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UseBaseInfoNotify.Unmarshal(m, b)
}
func (m *SC_UseBaseInfoNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UseBaseInfoNotify.Marshal(b, m, deterministic)
}
func (dst *SC_UseBaseInfoNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UseBaseInfoNotify.Merge(dst, src)
}
func (m *SC_UseBaseInfoNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UseBaseInfoNotify.Size(m)
}
func (m *SC_UseBaseInfoNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UseBaseInfoNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UseBaseInfoNotify proto.InternalMessageInfo

func (m *SC_UseBaseInfoNotify) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *SC_UseBaseInfoNotify) GetMUserState() UserState {
	if m != nil && m.MUserState != nil {
		return *m.MUserState
	}
	return UserState_Mj_User_State_Init
}

func (m *SC_UseBaseInfoNotify) GetMOffLineFlag() bool {
	if m != nil && m.MOffLineFlag != nil {
		return *m.MOffLineFlag
	}
	return false
}

func (m *SC_UseBaseInfoNotify) GetMBaseInfo() *PlayerBaseInfo {
	if m != nil {
		return m.MBaseInfo
	}
	return nil
}

type PlayerBaseInfo struct {
	MUserID              *int32   `protobuf:"varint,1,req,name=mUserID" json:"mUserID,omitempty"`
	MAccid               *int32   `protobuf:"varint,2,req,name=mAccid" json:"mAccid,omitempty"`
	MNickName            *string  `protobuf:"bytes,3,req,name=mNickName" json:"mNickName,omitempty"`
	MFaceID              *string  `protobuf:"bytes,4,req,name=mFaceID" json:"mFaceID,omitempty"`
	MSex                 *int32   `protobuf:"varint,5,req,name=mSex" json:"mSex,omitempty"`
	MUserGold            *int64   `protobuf:"varint,6,req,name=mUserGold" json:"mUserGold,omitempty"`
	MUserDiamond         *int32   `protobuf:"varint,7,req,name=mUserDiamond" json:"mUserDiamond,omitempty"`
	MDescription         *string  `protobuf:"bytes,8,req,name=mDescription,def=" json:"mDescription,omitempty"`
	MVipLevel            *int32   `protobuf:"varint,9,opt,name=mVipLevel" json:"mVipLevel,omitempty"`
	MUserPoint           *int64   `protobuf:"varint,10,req,name=mUserPoint" json:"mUserPoint,omitempty"`
	MUserIp              *string  `protobuf:"bytes,11,req,name=mUserIp" json:"mUserIp,omitempty"`
	MUserLng             *int64   `protobuf:"varint,12,req,name=mUserLng" json:"mUserLng,omitempty"`
	MUserLat             *int64   `protobuf:"varint,13,req,name=mUserLat" json:"mUserLat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerBaseInfo) Reset()         { *m = PlayerBaseInfo{} }
func (m *PlayerBaseInfo) String() string { return proto.CompactTextString(m) }
func (*PlayerBaseInfo) ProtoMessage()    {}
func (*PlayerBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{8}
}
func (m *PlayerBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerBaseInfo.Unmarshal(m, b)
}
func (m *PlayerBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerBaseInfo.Marshal(b, m, deterministic)
}
func (dst *PlayerBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerBaseInfo.Merge(dst, src)
}
func (m *PlayerBaseInfo) XXX_Size() int {
	return xxx_messageInfo_PlayerBaseInfo.Size(m)
}
func (m *PlayerBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerBaseInfo proto.InternalMessageInfo

func (m *PlayerBaseInfo) GetMUserID() int32 {
	if m != nil && m.MUserID != nil {
		return *m.MUserID
	}
	return 0
}

func (m *PlayerBaseInfo) GetMAccid() int32 {
	if m != nil && m.MAccid != nil {
		return *m.MAccid
	}
	return 0
}

func (m *PlayerBaseInfo) GetMNickName() string {
	if m != nil && m.MNickName != nil {
		return *m.MNickName
	}
	return ""
}

func (m *PlayerBaseInfo) GetMFaceID() string {
	if m != nil && m.MFaceID != nil {
		return *m.MFaceID
	}
	return ""
}

func (m *PlayerBaseInfo) GetMSex() int32 {
	if m != nil && m.MSex != nil {
		return *m.MSex
	}
	return 0
}

func (m *PlayerBaseInfo) GetMUserGold() int64 {
	if m != nil && m.MUserGold != nil {
		return *m.MUserGold
	}
	return 0
}

func (m *PlayerBaseInfo) GetMUserDiamond() int32 {
	if m != nil && m.MUserDiamond != nil {
		return *m.MUserDiamond
	}
	return 0
}

func (m *PlayerBaseInfo) GetMDescription() string {
	if m != nil && m.MDescription != nil {
		return *m.MDescription
	}
	return ""
}

func (m *PlayerBaseInfo) GetMVipLevel() int32 {
	if m != nil && m.MVipLevel != nil {
		return *m.MVipLevel
	}
	return 0
}

func (m *PlayerBaseInfo) GetMUserPoint() int64 {
	if m != nil && m.MUserPoint != nil {
		return *m.MUserPoint
	}
	return 0
}

func (m *PlayerBaseInfo) GetMUserIp() string {
	if m != nil && m.MUserIp != nil {
		return *m.MUserIp
	}
	return ""
}

func (m *PlayerBaseInfo) GetMUserLng() int64 {
	if m != nil && m.MUserLng != nil {
		return *m.MUserLng
	}
	return 0
}

func (m *PlayerBaseInfo) GetMUserLat() int64 {
	if m != nil && m.MUserLat != nil {
		return *m.MUserLat
	}
	return 0
}

type SeatInfo struct {
	MSeatId                 *uint32         `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MUserState              *UserState      `protobuf:"varint,2,req,name=mUserState,enum=XueZhanMj.UserState" json:"mUserState,omitempty"`
	MOffLineFlag            *bool           `protobuf:"varint,3,req,name=mOffLineFlag" json:"mOffLineFlag,omitempty"`
	MBaseInfo               *PlayerBaseInfo `protobuf:"bytes,4,opt,name=mBaseInfo" json:"mBaseInfo,omitempty"`
	StartMatchCurrencyValue *int64          `protobuf:"varint,5,opt,name=StartMatchCurrencyValue" json:"StartMatchCurrencyValue,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}        `json:"-"`
	XXX_unrecognized        []byte          `json:"-"`
	XXX_sizecache           int32           `json:"-"`
}

func (m *SeatInfo) Reset()         { *m = SeatInfo{} }
func (m *SeatInfo) String() string { return proto.CompactTextString(m) }
func (*SeatInfo) ProtoMessage()    {}
func (*SeatInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{9}
}
func (m *SeatInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeatInfo.Unmarshal(m, b)
}
func (m *SeatInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeatInfo.Marshal(b, m, deterministic)
}
func (dst *SeatInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeatInfo.Merge(dst, src)
}
func (m *SeatInfo) XXX_Size() int {
	return xxx_messageInfo_SeatInfo.Size(m)
}
func (m *SeatInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SeatInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SeatInfo proto.InternalMessageInfo

func (m *SeatInfo) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *SeatInfo) GetMUserState() UserState {
	if m != nil && m.MUserState != nil {
		return *m.MUserState
	}
	return UserState_Mj_User_State_Init
}

func (m *SeatInfo) GetMOffLineFlag() bool {
	if m != nil && m.MOffLineFlag != nil {
		return *m.MOffLineFlag
	}
	return false
}

func (m *SeatInfo) GetMBaseInfo() *PlayerBaseInfo {
	if m != nil {
		return m.MBaseInfo
	}
	return nil
}

func (m *SeatInfo) GetStartMatchCurrencyValue() int64 {
	if m != nil && m.StartMatchCurrencyValue != nil {
		return *m.StartMatchCurrencyValue
	}
	return 0
}

type StTableAttribute struct {
	GameCurrencyType       *int32 `protobuf:"varint,1,req,name=GameCurrencyType" json:"GameCurrencyType,omitempty"`
	PayRoomRateType        *int32 `protobuf:"varint,2,req,name=PayRoomRateType" json:"PayRoomRateType,omitempty"`
	PlanGameCount          *int32 `protobuf:"varint,3,req,name=PlanGameCount" json:"PlanGameCount,omitempty"`
	DiZhu                  *int64 `protobuf:"varint,4,req,name=DiZhu" json:"DiZhu,omitempty"`
	EnterScore             *int64 `protobuf:"varint,5,req,name=EnterScore" json:"EnterScore,omitempty"`
	LeaveScore             *int64 `protobuf:"varint,6,req,name=LeaveScore" json:"LeaveScore,omitempty"`
	BeiShuLimit            *int64 `protobuf:"varint,7,req,name=BeiShuLimit" json:"BeiShuLimit,omitempty"`
	ChairCount             *int32 `protobuf:"varint,8,req,name=ChairCount" json:"ChairCount,omitempty"`
	IsAllowEnterAfterStart *int32 `protobuf:"varint,9,req,name=IsAllowEnterAfterStart" json:"IsAllowEnterAfterStart,omitempty"`
	TableType              *int64 `protobuf:"varint,10,req,name=TableType" json:"TableType,omitempty"`
	RoomRate               *int64 `protobuf:"varint,11,req,name=RoomRate" json:"RoomRate,omitempty"`
	ServerRate             *int64 `protobuf:"varint,12,req,name=ServerRate" json:"ServerRate,omitempty"`
	// 高级参数部分
	ZiMoJiaFan              *bool                `protobuf:"varint,21,req,name=ZiMoJiaFan" json:"ZiMoJiaFan,omitempty"`
	ZiMoMoreThanMaxFan      *bool                `protobuf:"varint,22,req,name=ZiMoMoreThanMaxFan" json:"ZiMoMoreThanMaxFan,omitempty"`
	JinGouDiao              *bool                `protobuf:"varint,23,req,name=JinGouDiao" json:"JinGouDiao,omitempty"`
	HaiDiLaoYue             *bool                `protobuf:"varint,24,req,name=HaiDiLaoYue" json:"HaiDiLaoYue,omitempty"`
	DaXiaoYu                *bool                `protobuf:"varint,25,req,name=DaXiaoYu" json:"DaXiaoYu,omitempty"`
	DianGangHuaZiMo         *bool                `protobuf:"varint,26,req,name=DianGangHuaZiMo" json:"DianGangHuaZiMo,omitempty"`
	YaoJiu                  *bool                `protobuf:"varint,27,req,name=YaoJiu" json:"YaoJiu,omitempty"`
	Jiang                   *bool                `protobuf:"varint,28,req,name=Jiang" json:"Jiang,omitempty"`
	HuanSanZhangType        *HUAN_SAN_ZHANG_TYPE `protobuf:"varint,29,req,name=HuanSanZhangType,enum=XueZhanMj.HUAN_SAN_ZHANG_TYPE" json:"HuanSanZhangType,omitempty"`
	StartGameMinPlayerCount *int32               `protobuf:"varint,30,req,name=StartGameMinPlayerCount" json:"StartGameMinPlayerCount,omitempty"`
	MOwnerUserId            *int64               `protobuf:"varint,41,req,name=mOwnerUserId" json:"mOwnerUserId,omitempty"`
	TableAdvanceParam       *string              `protobuf:"bytes,40,req,name=TableAdvanceParam" json:"TableAdvanceParam,omitempty"`
	MTableName              *string              `protobuf:"bytes,43,req,name=mTableName" json:"mTableName,omitempty"`
	MRoomId                 *int32               `protobuf:"varint,44,req,name=mRoomId" json:"mRoomId,omitempty"`
	MTableId                *int32               `protobuf:"varint,45,req,name=mTableId" json:"mTableId,omitempty"`
	MKindId                 *int32               `protobuf:"varint,46,req,name=mKindId" json:"mKindId,omitempty"`
	MClubId                 *int32               `protobuf:"varint,47,req,name=mClubId" json:"mClubId,omitempty"`
	MIsIpWarn               *int32               `protobuf:"varint,48,req,name=mIsIpWarn" json:"mIsIpWarn,omitempty"`
	MIsGpsWarn              *int32               `protobuf:"varint,49,req,name=mIsGpsWarn" json:"mIsGpsWarn,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}             `json:"-"`
	XXX_unrecognized        []byte               `json:"-"`
	XXX_sizecache           int32                `json:"-"`
}

func (m *StTableAttribute) Reset()         { *m = StTableAttribute{} }
func (m *StTableAttribute) String() string { return proto.CompactTextString(m) }
func (*StTableAttribute) ProtoMessage()    {}
func (*StTableAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{10}
}
func (m *StTableAttribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StTableAttribute.Unmarshal(m, b)
}
func (m *StTableAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StTableAttribute.Marshal(b, m, deterministic)
}
func (dst *StTableAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StTableAttribute.Merge(dst, src)
}
func (m *StTableAttribute) XXX_Size() int {
	return xxx_messageInfo_StTableAttribute.Size(m)
}
func (m *StTableAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_StTableAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_StTableAttribute proto.InternalMessageInfo

func (m *StTableAttribute) GetGameCurrencyType() int32 {
	if m != nil && m.GameCurrencyType != nil {
		return *m.GameCurrencyType
	}
	return 0
}

func (m *StTableAttribute) GetPayRoomRateType() int32 {
	if m != nil && m.PayRoomRateType != nil {
		return *m.PayRoomRateType
	}
	return 0
}

func (m *StTableAttribute) GetPlanGameCount() int32 {
	if m != nil && m.PlanGameCount != nil {
		return *m.PlanGameCount
	}
	return 0
}

func (m *StTableAttribute) GetDiZhu() int64 {
	if m != nil && m.DiZhu != nil {
		return *m.DiZhu
	}
	return 0
}

func (m *StTableAttribute) GetEnterScore() int64 {
	if m != nil && m.EnterScore != nil {
		return *m.EnterScore
	}
	return 0
}

func (m *StTableAttribute) GetLeaveScore() int64 {
	if m != nil && m.LeaveScore != nil {
		return *m.LeaveScore
	}
	return 0
}

func (m *StTableAttribute) GetBeiShuLimit() int64 {
	if m != nil && m.BeiShuLimit != nil {
		return *m.BeiShuLimit
	}
	return 0
}

func (m *StTableAttribute) GetChairCount() int32 {
	if m != nil && m.ChairCount != nil {
		return *m.ChairCount
	}
	return 0
}

func (m *StTableAttribute) GetIsAllowEnterAfterStart() int32 {
	if m != nil && m.IsAllowEnterAfterStart != nil {
		return *m.IsAllowEnterAfterStart
	}
	return 0
}

func (m *StTableAttribute) GetTableType() int64 {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return 0
}

func (m *StTableAttribute) GetRoomRate() int64 {
	if m != nil && m.RoomRate != nil {
		return *m.RoomRate
	}
	return 0
}

func (m *StTableAttribute) GetServerRate() int64 {
	if m != nil && m.ServerRate != nil {
		return *m.ServerRate
	}
	return 0
}

func (m *StTableAttribute) GetZiMoJiaFan() bool {
	if m != nil && m.ZiMoJiaFan != nil {
		return *m.ZiMoJiaFan
	}
	return false
}

func (m *StTableAttribute) GetZiMoMoreThanMaxFan() bool {
	if m != nil && m.ZiMoMoreThanMaxFan != nil {
		return *m.ZiMoMoreThanMaxFan
	}
	return false
}

func (m *StTableAttribute) GetJinGouDiao() bool {
	if m != nil && m.JinGouDiao != nil {
		return *m.JinGouDiao
	}
	return false
}

func (m *StTableAttribute) GetHaiDiLaoYue() bool {
	if m != nil && m.HaiDiLaoYue != nil {
		return *m.HaiDiLaoYue
	}
	return false
}

func (m *StTableAttribute) GetDaXiaoYu() bool {
	if m != nil && m.DaXiaoYu != nil {
		return *m.DaXiaoYu
	}
	return false
}

func (m *StTableAttribute) GetDianGangHuaZiMo() bool {
	if m != nil && m.DianGangHuaZiMo != nil {
		return *m.DianGangHuaZiMo
	}
	return false
}

func (m *StTableAttribute) GetYaoJiu() bool {
	if m != nil && m.YaoJiu != nil {
		return *m.YaoJiu
	}
	return false
}

func (m *StTableAttribute) GetJiang() bool {
	if m != nil && m.Jiang != nil {
		return *m.Jiang
	}
	return false
}

func (m *StTableAttribute) GetHuanSanZhangType() HUAN_SAN_ZHANG_TYPE {
	if m != nil && m.HuanSanZhangType != nil {
		return *m.HuanSanZhangType
	}
	return HUAN_SAN_ZHANG_TYPE_HUAN_SAN_ZHANG_TYPE_NONE
}

func (m *StTableAttribute) GetStartGameMinPlayerCount() int32 {
	if m != nil && m.StartGameMinPlayerCount != nil {
		return *m.StartGameMinPlayerCount
	}
	return 0
}

func (m *StTableAttribute) GetMOwnerUserId() int64 {
	if m != nil && m.MOwnerUserId != nil {
		return *m.MOwnerUserId
	}
	return 0
}

func (m *StTableAttribute) GetTableAdvanceParam() string {
	if m != nil && m.TableAdvanceParam != nil {
		return *m.TableAdvanceParam
	}
	return ""
}

func (m *StTableAttribute) GetMTableName() string {
	if m != nil && m.MTableName != nil {
		return *m.MTableName
	}
	return ""
}

func (m *StTableAttribute) GetMRoomId() int32 {
	if m != nil && m.MRoomId != nil {
		return *m.MRoomId
	}
	return 0
}

func (m *StTableAttribute) GetMTableId() int32 {
	if m != nil && m.MTableId != nil {
		return *m.MTableId
	}
	return 0
}

func (m *StTableAttribute) GetMKindId() int32 {
	if m != nil && m.MKindId != nil {
		return *m.MKindId
	}
	return 0
}

func (m *StTableAttribute) GetMClubId() int32 {
	if m != nil && m.MClubId != nil {
		return *m.MClubId
	}
	return 0
}

func (m *StTableAttribute) GetMIsIpWarn() int32 {
	if m != nil && m.MIsIpWarn != nil {
		return *m.MIsIpWarn
	}
	return 0
}

func (m *StTableAttribute) GetMIsGpsWarn() int32 {
	if m != nil && m.MIsGpsWarn != nil {
		return *m.MIsGpsWarn
	}
	return 0
}

type TableInfo struct {
	MTableAttribute      *StTableAttribute `protobuf:"bytes,1,req,name=mTableAttribute" json:"mTableAttribute,omitempty"`
	MBankerSeatId        *uint32           `protobuf:"varint,2,req,name=mBankerSeatId" json:"mBankerSeatId,omitempty"`
	MFirstDice           *uint32           `protobuf:"varint,3,req,name=mFirstDice" json:"mFirstDice,omitempty"`
	MSecondDice          *uint32           `protobuf:"varint,4,req,name=mSecondDice" json:"mSecondDice,omitempty"`
	MCardNum             *uint32           `protobuf:"varint,5,req,name=mCardNum" json:"mCardNum,omitempty"`
	MTableState          *TableState       `protobuf:"varint,6,req,name=mTableState,enum=XueZhanMj.TableState" json:"mTableState,omitempty"`
	MSeatInfos           []*SeatInfo       `protobuf:"bytes,7,rep,name=mSeatInfos" json:"mSeatInfos,omitempty"`
	MGameCount           *uint32           `protobuf:"varint,8,req,name=mGameCount" json:"mGameCount,omitempty"`
	MRoundCount          *uint32           `protobuf:"varint,9,req,name=mRoundCount" json:"mRoundCount,omitempty"`
	MWaitReadyTime       *int64            `protobuf:"varint,10,req,name=mWaitReadyTime" json:"mWaitReadyTime,omitempty"`
	MWaitEndTime         *int64            `protobuf:"varint,11,req,name=mWaitEndTime" json:"mWaitEndTime,omitempty"`
	MAllWaitOperateTime  *int64            `protobuf:"varint,12,req,name=mAllWaitOperateTime" json:"mAllWaitOperateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TableInfo) Reset()         { *m = TableInfo{} }
func (m *TableInfo) String() string { return proto.CompactTextString(m) }
func (*TableInfo) ProtoMessage()    {}
func (*TableInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{11}
}
func (m *TableInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableInfo.Unmarshal(m, b)
}
func (m *TableInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableInfo.Marshal(b, m, deterministic)
}
func (dst *TableInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableInfo.Merge(dst, src)
}
func (m *TableInfo) XXX_Size() int {
	return xxx_messageInfo_TableInfo.Size(m)
}
func (m *TableInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TableInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TableInfo proto.InternalMessageInfo

func (m *TableInfo) GetMTableAttribute() *StTableAttribute {
	if m != nil {
		return m.MTableAttribute
	}
	return nil
}

func (m *TableInfo) GetMBankerSeatId() uint32 {
	if m != nil && m.MBankerSeatId != nil {
		return *m.MBankerSeatId
	}
	return 0
}

func (m *TableInfo) GetMFirstDice() uint32 {
	if m != nil && m.MFirstDice != nil {
		return *m.MFirstDice
	}
	return 0
}

func (m *TableInfo) GetMSecondDice() uint32 {
	if m != nil && m.MSecondDice != nil {
		return *m.MSecondDice
	}
	return 0
}

func (m *TableInfo) GetMCardNum() uint32 {
	if m != nil && m.MCardNum != nil {
		return *m.MCardNum
	}
	return 0
}

func (m *TableInfo) GetMTableState() TableState {
	if m != nil && m.MTableState != nil {
		return *m.MTableState
	}
	return TableState_Table_State_Init
}

func (m *TableInfo) GetMSeatInfos() []*SeatInfo {
	if m != nil {
		return m.MSeatInfos
	}
	return nil
}

func (m *TableInfo) GetMGameCount() uint32 {
	if m != nil && m.MGameCount != nil {
		return *m.MGameCount
	}
	return 0
}

func (m *TableInfo) GetMRoundCount() uint32 {
	if m != nil && m.MRoundCount != nil {
		return *m.MRoundCount
	}
	return 0
}

func (m *TableInfo) GetMWaitReadyTime() int64 {
	if m != nil && m.MWaitReadyTime != nil {
		return *m.MWaitReadyTime
	}
	return 0
}

func (m *TableInfo) GetMWaitEndTime() int64 {
	if m != nil && m.MWaitEndTime != nil {
		return *m.MWaitEndTime
	}
	return 0
}

func (m *TableInfo) GetMAllWaitOperateTime() int64 {
	if m != nil && m.MAllWaitOperateTime != nil {
		return *m.MAllWaitOperateTime
	}
	return 0
}

// GAME_SUB_SC_USER_TABLE_NOTIFY = 9; //桌子信息
type SC_TableInfoNotify struct {
	MTableInfo           *TableInfo `protobuf:"bytes,3,req,name=mTableInfo" json:"mTableInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SC_TableInfoNotify) Reset()         { *m = SC_TableInfoNotify{} }
func (m *SC_TableInfoNotify) String() string { return proto.CompactTextString(m) }
func (*SC_TableInfoNotify) ProtoMessage()    {}
func (*SC_TableInfoNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{12}
}
func (m *SC_TableInfoNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_TableInfoNotify.Unmarshal(m, b)
}
func (m *SC_TableInfoNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_TableInfoNotify.Marshal(b, m, deterministic)
}
func (dst *SC_TableInfoNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_TableInfoNotify.Merge(dst, src)
}
func (m *SC_TableInfoNotify) XXX_Size() int {
	return xxx_messageInfo_SC_TableInfoNotify.Size(m)
}
func (m *SC_TableInfoNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_TableInfoNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_TableInfoNotify proto.InternalMessageInfo

func (m *SC_TableInfoNotify) GetMTableInfo() *TableInfo {
	if m != nil {
		return m.MTableInfo
	}
	return nil
}

// GAME_SUB_SC_TABLE_DISMISS_NOTIFY = 10; //通知桌子解散
// 通知座子解散
type SC_UserTableDIsmissNotify struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_UserTableDIsmissNotify) Reset()         { *m = SC_UserTableDIsmissNotify{} }
func (m *SC_UserTableDIsmissNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserTableDIsmissNotify) ProtoMessage()    {}
func (*SC_UserTableDIsmissNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{13}
}
func (m *SC_UserTableDIsmissNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserTableDIsmissNotify.Unmarshal(m, b)
}
func (m *SC_UserTableDIsmissNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserTableDIsmissNotify.Marshal(b, m, deterministic)
}
func (dst *SC_UserTableDIsmissNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserTableDIsmissNotify.Merge(dst, src)
}
func (m *SC_UserTableDIsmissNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserTableDIsmissNotify.Size(m)
}
func (m *SC_UserTableDIsmissNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserTableDIsmissNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserTableDIsmissNotify proto.InternalMessageInfo

type MMjOperateRecord struct {
	MSeatId              *uint32          `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MOperateMask         *MJ_OPERATE_MASK `protobuf:"varint,2,req,name=mOperateMask,enum=XueZhanMj.MJ_OPERATE_MASK" json:"mOperateMask,omitempty"`
	MTagMj               *uint32          `protobuf:"varint,3,req,name=mTagMj" json:"mTagMj,omitempty"`
	MTagMj1              *uint32          `protobuf:"varint,4,opt,name=mTagMj1" json:"mTagMj1,omitempty"`
	MTagMj2              *uint32          `protobuf:"varint,5,opt,name=mTagMj2" json:"mTagMj2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MMjOperateRecord) Reset()         { *m = MMjOperateRecord{} }
func (m *MMjOperateRecord) String() string { return proto.CompactTextString(m) }
func (*MMjOperateRecord) ProtoMessage()    {}
func (*MMjOperateRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{14}
}
func (m *MMjOperateRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MMjOperateRecord.Unmarshal(m, b)
}
func (m *MMjOperateRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MMjOperateRecord.Marshal(b, m, deterministic)
}
func (dst *MMjOperateRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MMjOperateRecord.Merge(dst, src)
}
func (m *MMjOperateRecord) XXX_Size() int {
	return xxx_messageInfo_MMjOperateRecord.Size(m)
}
func (m *MMjOperateRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MMjOperateRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MMjOperateRecord proto.InternalMessageInfo

func (m *MMjOperateRecord) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *MMjOperateRecord) GetMOperateMask() MJ_OPERATE_MASK {
	if m != nil && m.MOperateMask != nil {
		return *m.MOperateMask
	}
	return MJ_OPERATE_MASK_MJ_OPERATE_MASK_NONE
}

func (m *MMjOperateRecord) GetMTagMj() uint32 {
	if m != nil && m.MTagMj != nil {
		return *m.MTagMj
	}
	return 0
}

func (m *MMjOperateRecord) GetMTagMj1() uint32 {
	if m != nil && m.MTagMj1 != nil {
		return *m.MTagMj1
	}
	return 0
}

func (m *MMjOperateRecord) GetMTagMj2() uint32 {
	if m != nil && m.MTagMj2 != nil {
		return *m.MTagMj2
	}
	return 0
}

type SeatCardInfo struct {
	MSeatId              *uint32             `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MTagSeatId           *uint32             `protobuf:"varint,2,req,name=mTagSeatId" json:"mTagSeatId,omitempty"`
	MUserState           *UserState          `protobuf:"varint,3,req,name=mUserState,enum=XueZhanMj.UserState" json:"mUserState,omitempty"`
	MRejectSuit          *uint32             `protobuf:"varint,4,req,name=mRejectSuit" json:"mRejectSuit,omitempty"`
	MDealCards           []uint32            `protobuf:"varint,5,rep,name=mDealCards" json:"mDealCards,omitempty"`
	MHandCards           []uint32            `protobuf:"varint,6,rep,name=mHandCards" json:"mHandCards,omitempty"`
	MMingCards           []uint32            `protobuf:"varint,7,rep,name=mMingCards" json:"mMingCards,omitempty"`
	MAnGangCards         []uint32            `protobuf:"varint,8,rep,name=mAnGangCards" json:"mAnGangCards,omitempty"`
	MBuGangCards         []uint32            `protobuf:"varint,9,rep,name=mBuGangCards" json:"mBuGangCards,omitempty"`
	MPengCards           []uint32            `protobuf:"varint,10,rep,name=mPengCards" json:"mPengCards,omitempty"`
	MHuCards             *uint32             `protobuf:"varint,11,req,name=mHuCards" json:"mHuCards,omitempty"`
	MLastOperateRecord   *MMjOperateRecord   `protobuf:"bytes,12,opt,name=mLastOperateRecord" json:"mLastOperateRecord,omitempty"`
	MHuanCards           []uint32            `protobuf:"varint,13,rep,name=mHuanCards" json:"mHuanCards,omitempty"`
	MHuanInCards         []uint32            `protobuf:"varint,14,rep,name=mHuanInCards" json:"mHuanInCards,omitempty"`
	MSettlementType      *MJ_SETTLEMENT_TYPE `protobuf:"varint,15,req,name=mSettlementType,enum=XueZhanMj.MJ_SETTLEMENT_TYPE" json:"mSettlementType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SeatCardInfo) Reset()         { *m = SeatCardInfo{} }
func (m *SeatCardInfo) String() string { return proto.CompactTextString(m) }
func (*SeatCardInfo) ProtoMessage()    {}
func (*SeatCardInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{15}
}
func (m *SeatCardInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeatCardInfo.Unmarshal(m, b)
}
func (m *SeatCardInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeatCardInfo.Marshal(b, m, deterministic)
}
func (dst *SeatCardInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeatCardInfo.Merge(dst, src)
}
func (m *SeatCardInfo) XXX_Size() int {
	return xxx_messageInfo_SeatCardInfo.Size(m)
}
func (m *SeatCardInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SeatCardInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SeatCardInfo proto.InternalMessageInfo

func (m *SeatCardInfo) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *SeatCardInfo) GetMTagSeatId() uint32 {
	if m != nil && m.MTagSeatId != nil {
		return *m.MTagSeatId
	}
	return 0
}

func (m *SeatCardInfo) GetMUserState() UserState {
	if m != nil && m.MUserState != nil {
		return *m.MUserState
	}
	return UserState_Mj_User_State_Init
}

func (m *SeatCardInfo) GetMRejectSuit() uint32 {
	if m != nil && m.MRejectSuit != nil {
		return *m.MRejectSuit
	}
	return 0
}

func (m *SeatCardInfo) GetMDealCards() []uint32 {
	if m != nil {
		return m.MDealCards
	}
	return nil
}

func (m *SeatCardInfo) GetMHandCards() []uint32 {
	if m != nil {
		return m.MHandCards
	}
	return nil
}

func (m *SeatCardInfo) GetMMingCards() []uint32 {
	if m != nil {
		return m.MMingCards
	}
	return nil
}

func (m *SeatCardInfo) GetMAnGangCards() []uint32 {
	if m != nil {
		return m.MAnGangCards
	}
	return nil
}

func (m *SeatCardInfo) GetMBuGangCards() []uint32 {
	if m != nil {
		return m.MBuGangCards
	}
	return nil
}

func (m *SeatCardInfo) GetMPengCards() []uint32 {
	if m != nil {
		return m.MPengCards
	}
	return nil
}

func (m *SeatCardInfo) GetMHuCards() uint32 {
	if m != nil && m.MHuCards != nil {
		return *m.MHuCards
	}
	return 0
}

func (m *SeatCardInfo) GetMLastOperateRecord() *MMjOperateRecord {
	if m != nil {
		return m.MLastOperateRecord
	}
	return nil
}

func (m *SeatCardInfo) GetMHuanCards() []uint32 {
	if m != nil {
		return m.MHuanCards
	}
	return nil
}

func (m *SeatCardInfo) GetMHuanInCards() []uint32 {
	if m != nil {
		return m.MHuanInCards
	}
	return nil
}

func (m *SeatCardInfo) GetMSettlementType() MJ_SETTLEMENT_TYPE {
	if m != nil && m.MSettlementType != nil {
		return *m.MSettlementType
	}
	return MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_NONE
}

// GAME_SUB_SC_USER_CARD_NOTIFY = 11; //通知玩家牌信息
type SC_UserCardNotify struct {
	MCardInfo            []*SeatCardInfo `protobuf:"bytes,1,rep,name=mCardInfo" json:"mCardInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SC_UserCardNotify) Reset()         { *m = SC_UserCardNotify{} }
func (m *SC_UserCardNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserCardNotify) ProtoMessage()    {}
func (*SC_UserCardNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{16}
}
func (m *SC_UserCardNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserCardNotify.Unmarshal(m, b)
}
func (m *SC_UserCardNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserCardNotify.Marshal(b, m, deterministic)
}
func (dst *SC_UserCardNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserCardNotify.Merge(dst, src)
}
func (m *SC_UserCardNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserCardNotify.Size(m)
}
func (m *SC_UserCardNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserCardNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserCardNotify proto.InternalMessageInfo

func (m *SC_UserCardNotify) GetMCardInfo() []*SeatCardInfo {
	if m != nil {
		return m.MCardInfo
	}
	return nil
}

// GAME_SUB_CS_USER_DISMISS_TABLE = 12;//解散桌子(强制解散)
// 通知座子解散
type CS_UserDismissTable struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_UserDismissTable) Reset()         { *m = CS_UserDismissTable{} }
func (m *CS_UserDismissTable) String() string { return proto.CompactTextString(m) }
func (*CS_UserDismissTable) ProtoMessage()    {}
func (*CS_UserDismissTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{17}
}
func (m *CS_UserDismissTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_UserDismissTable.Unmarshal(m, b)
}
func (m *CS_UserDismissTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_UserDismissTable.Marshal(b, m, deterministic)
}
func (dst *CS_UserDismissTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_UserDismissTable.Merge(dst, src)
}
func (m *CS_UserDismissTable) XXX_Size() int {
	return xxx_messageInfo_CS_UserDismissTable.Size(m)
}
func (m *CS_UserDismissTable) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_UserDismissTable.DiscardUnknown(m)
}

var xxx_messageInfo_CS_UserDismissTable proto.InternalMessageInfo

// GAME_SUB_SC_USER_MJ_LAST_HANDLE_NOTIFY = 13;//比赛结束时最终手牌
type SC_UserMjLastHandNotify struct {
	MSeatId              *uint32  `protobuf:"varint,3,req,name=mSeatId" json:"mSeatId,omitempty"`
	MMjs                 []uint32 `protobuf:"varint,4,rep,name=mMjs" json:"mMjs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_UserMjLastHandNotify) Reset()         { *m = SC_UserMjLastHandNotify{} }
func (m *SC_UserMjLastHandNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserMjLastHandNotify) ProtoMessage()    {}
func (*SC_UserMjLastHandNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{18}
}
func (m *SC_UserMjLastHandNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserMjLastHandNotify.Unmarshal(m, b)
}
func (m *SC_UserMjLastHandNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserMjLastHandNotify.Marshal(b, m, deterministic)
}
func (dst *SC_UserMjLastHandNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserMjLastHandNotify.Merge(dst, src)
}
func (m *SC_UserMjLastHandNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserMjLastHandNotify.Size(m)
}
func (m *SC_UserMjLastHandNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserMjLastHandNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserMjLastHandNotify proto.InternalMessageInfo

func (m *SC_UserMjLastHandNotify) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *SC_UserMjLastHandNotify) GetMMjs() []uint32 {
	if m != nil {
		return m.MMjs
	}
	return nil
}

type MMjUserWinDetail struct {
	MSeatId              *uint32  `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MUserId              *uint32  `protobuf:"varint,2,req,name=mUserId" json:"mUserId,omitempty"`
	MWinScore            *int64   `protobuf:"varint,3,req,name=mWinScore" json:"mWinScore,omitempty"`
	MAcciId              *uint32  `protobuf:"varint,4,req,name=mAcciId" json:"mAcciId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MMjUserWinDetail) Reset()         { *m = MMjUserWinDetail{} }
func (m *MMjUserWinDetail) String() string { return proto.CompactTextString(m) }
func (*MMjUserWinDetail) ProtoMessage()    {}
func (*MMjUserWinDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{19}
}
func (m *MMjUserWinDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MMjUserWinDetail.Unmarshal(m, b)
}
func (m *MMjUserWinDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MMjUserWinDetail.Marshal(b, m, deterministic)
}
func (dst *MMjUserWinDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MMjUserWinDetail.Merge(dst, src)
}
func (m *MMjUserWinDetail) XXX_Size() int {
	return xxx_messageInfo_MMjUserWinDetail.Size(m)
}
func (m *MMjUserWinDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_MMjUserWinDetail.DiscardUnknown(m)
}

var xxx_messageInfo_MMjUserWinDetail proto.InternalMessageInfo

func (m *MMjUserWinDetail) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *MMjUserWinDetail) GetMUserId() uint32 {
	if m != nil && m.MUserId != nil {
		return *m.MUserId
	}
	return 0
}

func (m *MMjUserWinDetail) GetMWinScore() int64 {
	if m != nil && m.MWinScore != nil {
		return *m.MWinScore
	}
	return 0
}

func (m *MMjUserWinDetail) GetMAcciId() uint32 {
	if m != nil && m.MAcciId != nil {
		return *m.MAcciId
	}
	return 0
}

// 单局比赛数据（总结算详细信息）
type MMatchWinRecord struct {
	MUserWinDetail       []*MMjUserWinDetail `protobuf:"bytes,1,rep,name=mUserWinDetail" json:"mUserWinDetail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MMatchWinRecord) Reset()         { *m = MMatchWinRecord{} }
func (m *MMatchWinRecord) String() string { return proto.CompactTextString(m) }
func (*MMatchWinRecord) ProtoMessage()    {}
func (*MMatchWinRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{20}
}
func (m *MMatchWinRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MMatchWinRecord.Unmarshal(m, b)
}
func (m *MMatchWinRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MMatchWinRecord.Marshal(b, m, deterministic)
}
func (dst *MMatchWinRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MMatchWinRecord.Merge(dst, src)
}
func (m *MMatchWinRecord) XXX_Size() int {
	return xxx_messageInfo_MMatchWinRecord.Size(m)
}
func (m *MMatchWinRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MMatchWinRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MMatchWinRecord proto.InternalMessageInfo

func (m *MMatchWinRecord) GetMUserWinDetail() []*MMjUserWinDetail {
	if m != nil {
		return m.MUserWinDetail
	}
	return nil
}

// GAME_SUB_SC_TABLE_TOTAL_WIN_NOTIFY = 14;//比赛所有输赢汇总通知
type SC_TAbleTotalWinNotify struct {
	MUserAllWinDetail    []*MMjUserWinDetail `protobuf:"bytes,1,rep,name=mUserAllWinDetail" json:"mUserAllWinDetail,omitempty"`
	MUserSignWinDetail   []*MMatchWinRecord  `protobuf:"bytes,2,rep,name=mUserSignWinDetail" json:"mUserSignWinDetail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SC_TAbleTotalWinNotify) Reset()         { *m = SC_TAbleTotalWinNotify{} }
func (m *SC_TAbleTotalWinNotify) String() string { return proto.CompactTextString(m) }
func (*SC_TAbleTotalWinNotify) ProtoMessage()    {}
func (*SC_TAbleTotalWinNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{21}
}
func (m *SC_TAbleTotalWinNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_TAbleTotalWinNotify.Unmarshal(m, b)
}
func (m *SC_TAbleTotalWinNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_TAbleTotalWinNotify.Marshal(b, m, deterministic)
}
func (dst *SC_TAbleTotalWinNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_TAbleTotalWinNotify.Merge(dst, src)
}
func (m *SC_TAbleTotalWinNotify) XXX_Size() int {
	return xxx_messageInfo_SC_TAbleTotalWinNotify.Size(m)
}
func (m *SC_TAbleTotalWinNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_TAbleTotalWinNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_TAbleTotalWinNotify proto.InternalMessageInfo

func (m *SC_TAbleTotalWinNotify) GetMUserAllWinDetail() []*MMjUserWinDetail {
	if m != nil {
		return m.MUserAllWinDetail
	}
	return nil
}

func (m *SC_TAbleTotalWinNotify) GetMUserSignWinDetail() []*MMatchWinRecord {
	if m != nil {
		return m.MUserSignWinDetail
	}
	return nil
}

// GAME_SUB_SC_GAME_START = 100; //游戏开始
type SC_GameStart struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_GameStart) Reset()         { *m = SC_GameStart{} }
func (m *SC_GameStart) String() string { return proto.CompactTextString(m) }
func (*SC_GameStart) ProtoMessage()    {}
func (*SC_GameStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{22}
}
func (m *SC_GameStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_GameStart.Unmarshal(m, b)
}
func (m *SC_GameStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_GameStart.Marshal(b, m, deterministic)
}
func (dst *SC_GameStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_GameStart.Merge(dst, src)
}
func (m *SC_GameStart) XXX_Size() int {
	return xxx_messageInfo_SC_GameStart.Size(m)
}
func (m *SC_GameStart) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_GameStart.DiscardUnknown(m)
}

var xxx_messageInfo_SC_GameStart proto.InternalMessageInfo

// 发牌
// GAME_SUB_SC_ASSIGN_MJ_NOTIFY = 101; //发牌
type SC_UserMjAssignNotify struct {
	MSeatId              *uint32  `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MBankerSeatId        *uint32  `protobuf:"varint,2,req,name=mBankerSeatId" json:"mBankerSeatId,omitempty"`
	MFirstDice           *uint32  `protobuf:"varint,3,req,name=mFirstDice" json:"mFirstDice,omitempty"`
	MSecondDice          *uint32  `protobuf:"varint,4,req,name=mSecondDice" json:"mSecondDice,omitempty"`
	MMjs                 []uint32 `protobuf:"varint,5,rep,name=mMjs" json:"mMjs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_UserMjAssignNotify) Reset()         { *m = SC_UserMjAssignNotify{} }
func (m *SC_UserMjAssignNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserMjAssignNotify) ProtoMessage()    {}
func (*SC_UserMjAssignNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{23}
}
func (m *SC_UserMjAssignNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserMjAssignNotify.Unmarshal(m, b)
}
func (m *SC_UserMjAssignNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserMjAssignNotify.Marshal(b, m, deterministic)
}
func (dst *SC_UserMjAssignNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserMjAssignNotify.Merge(dst, src)
}
func (m *SC_UserMjAssignNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserMjAssignNotify.Size(m)
}
func (m *SC_UserMjAssignNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserMjAssignNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserMjAssignNotify proto.InternalMessageInfo

func (m *SC_UserMjAssignNotify) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *SC_UserMjAssignNotify) GetMBankerSeatId() uint32 {
	if m != nil && m.MBankerSeatId != nil {
		return *m.MBankerSeatId
	}
	return 0
}

func (m *SC_UserMjAssignNotify) GetMFirstDice() uint32 {
	if m != nil && m.MFirstDice != nil {
		return *m.MFirstDice
	}
	return 0
}

func (m *SC_UserMjAssignNotify) GetMSecondDice() uint32 {
	if m != nil && m.MSecondDice != nil {
		return *m.MSecondDice
	}
	return 0
}

func (m *SC_UserMjAssignNotify) GetMMjs() []uint32 {
	if m != nil {
		return m.MMjs
	}
	return nil
}

// 摸牌
// GAME_SUB_SC_GET_MJ_NOTIFY = 102; //摸牌
type SC_UserMjGetNotify struct {
	MOperateMask         []MJ_OPERATE_MASK `protobuf:"varint,1,rep,name=mOperateMask,enum=XueZhanMj.MJ_OPERATE_MASK" json:"mOperateMask,omitempty"`
	MRelationSeatId      *uint32           `protobuf:"varint,2,req,name=mRelationSeatId" json:"mRelationSeatId,omitempty"`
	MTagMj               *uint32           `protobuf:"varint,3,req,name=mTagMj" json:"mTagMj,omitempty"`
	MOperateTimeOut      *uint32           `protobuf:"varint,4,req,name=mOperateTimeOut" json:"mOperateTimeOut,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SC_UserMjGetNotify) Reset()         { *m = SC_UserMjGetNotify{} }
func (m *SC_UserMjGetNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserMjGetNotify) ProtoMessage()    {}
func (*SC_UserMjGetNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{24}
}
func (m *SC_UserMjGetNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserMjGetNotify.Unmarshal(m, b)
}
func (m *SC_UserMjGetNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserMjGetNotify.Marshal(b, m, deterministic)
}
func (dst *SC_UserMjGetNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserMjGetNotify.Merge(dst, src)
}
func (m *SC_UserMjGetNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserMjGetNotify.Size(m)
}
func (m *SC_UserMjGetNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserMjGetNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserMjGetNotify proto.InternalMessageInfo

func (m *SC_UserMjGetNotify) GetMOperateMask() []MJ_OPERATE_MASK {
	if m != nil {
		return m.MOperateMask
	}
	return nil
}

func (m *SC_UserMjGetNotify) GetMRelationSeatId() uint32 {
	if m != nil && m.MRelationSeatId != nil {
		return *m.MRelationSeatId
	}
	return 0
}

func (m *SC_UserMjGetNotify) GetMTagMj() uint32 {
	if m != nil && m.MTagMj != nil {
		return *m.MTagMj
	}
	return 0
}

func (m *SC_UserMjGetNotify) GetMOperateTimeOut() uint32 {
	if m != nil && m.MOperateTimeOut != nil {
		return *m.MOperateTimeOut
	}
	return 0
}

// GAME_SUB_CS_OPERATE = 105; //玩家操作
type CS_UserOperate struct {
	MOperateSeatId       *uint32          `protobuf:"varint,1,req,name=mOperateSeatId" json:"mOperateSeatId,omitempty"`
	MOperateMask         *MJ_OPERATE_MASK `protobuf:"varint,2,req,name=mOperateMask,enum=XueZhanMj.MJ_OPERATE_MASK" json:"mOperateMask,omitempty"`
	MTagMj               *uint32          `protobuf:"varint,3,req,name=mTagMj" json:"mTagMj,omitempty"`
	MTagMj1              *uint32          `protobuf:"varint,4,opt,name=mTagMj1" json:"mTagMj1,omitempty"`
	MTagMj2              *uint32          `protobuf:"varint,5,opt,name=mTagMj2" json:"mTagMj2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CS_UserOperate) Reset()         { *m = CS_UserOperate{} }
func (m *CS_UserOperate) String() string { return proto.CompactTextString(m) }
func (*CS_UserOperate) ProtoMessage()    {}
func (*CS_UserOperate) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{25}
}
func (m *CS_UserOperate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_UserOperate.Unmarshal(m, b)
}
func (m *CS_UserOperate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_UserOperate.Marshal(b, m, deterministic)
}
func (dst *CS_UserOperate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_UserOperate.Merge(dst, src)
}
func (m *CS_UserOperate) XXX_Size() int {
	return xxx_messageInfo_CS_UserOperate.Size(m)
}
func (m *CS_UserOperate) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_UserOperate.DiscardUnknown(m)
}

var xxx_messageInfo_CS_UserOperate proto.InternalMessageInfo

func (m *CS_UserOperate) GetMOperateSeatId() uint32 {
	if m != nil && m.MOperateSeatId != nil {
		return *m.MOperateSeatId
	}
	return 0
}

func (m *CS_UserOperate) GetMOperateMask() MJ_OPERATE_MASK {
	if m != nil && m.MOperateMask != nil {
		return *m.MOperateMask
	}
	return MJ_OPERATE_MASK_MJ_OPERATE_MASK_NONE
}

func (m *CS_UserOperate) GetMTagMj() uint32 {
	if m != nil && m.MTagMj != nil {
		return *m.MTagMj
	}
	return 0
}

func (m *CS_UserOperate) GetMTagMj1() uint32 {
	if m != nil && m.MTagMj1 != nil {
		return *m.MTagMj1
	}
	return 0
}

func (m *CS_UserOperate) GetMTagMj2() uint32 {
	if m != nil && m.MTagMj2 != nil {
		return *m.MTagMj2
	}
	return 0
}

type MjSettlementDetail struct {
	MSeatId              *uint32  `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MValue               *int32   `protobuf:"varint,2,req,name=mValue" json:"mValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MjSettlementDetail) Reset()         { *m = MjSettlementDetail{} }
func (m *MjSettlementDetail) String() string { return proto.CompactTextString(m) }
func (*MjSettlementDetail) ProtoMessage()    {}
func (*MjSettlementDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{26}
}
func (m *MjSettlementDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MjSettlementDetail.Unmarshal(m, b)
}
func (m *MjSettlementDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MjSettlementDetail.Marshal(b, m, deterministic)
}
func (dst *MjSettlementDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MjSettlementDetail.Merge(dst, src)
}
func (m *MjSettlementDetail) XXX_Size() int {
	return xxx_messageInfo_MjSettlementDetail.Size(m)
}
func (m *MjSettlementDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_MjSettlementDetail.DiscardUnknown(m)
}

var xxx_messageInfo_MjSettlementDetail proto.InternalMessageInfo

func (m *MjSettlementDetail) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *MjSettlementDetail) GetMValue() int32 {
	if m != nil && m.MValue != nil {
		return *m.MValue
	}
	return 0
}

// 结算信息
type MjSettlementInfo struct {
	MType                *MJ_SETTLEMENT_TYPE   `protobuf:"varint,1,req,name=mType,enum=XueZhanMj.MJ_SETTLEMENT_TYPE" json:"mType,omitempty"`
	MDetail              []*MjSettlementDetail `protobuf:"bytes,2,rep,name=mDetail" json:"mDetail,omitempty"`
	MHuType              *uint32               `protobuf:"varint,3,req,name=mHuType" json:"mHuType,omitempty"`
	MMultiple            *uint32               `protobuf:"varint,4,req,name=mMultiple" json:"mMultiple,omitempty"`
	MGenCount            *int32                `protobuf:"varint,5,req,name=mGenCount" json:"mGenCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MjSettlementInfo) Reset()         { *m = MjSettlementInfo{} }
func (m *MjSettlementInfo) String() string { return proto.CompactTextString(m) }
func (*MjSettlementInfo) ProtoMessage()    {}
func (*MjSettlementInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{27}
}
func (m *MjSettlementInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MjSettlementInfo.Unmarshal(m, b)
}
func (m *MjSettlementInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MjSettlementInfo.Marshal(b, m, deterministic)
}
func (dst *MjSettlementInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MjSettlementInfo.Merge(dst, src)
}
func (m *MjSettlementInfo) XXX_Size() int {
	return xxx_messageInfo_MjSettlementInfo.Size(m)
}
func (m *MjSettlementInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MjSettlementInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MjSettlementInfo proto.InternalMessageInfo

func (m *MjSettlementInfo) GetMType() MJ_SETTLEMENT_TYPE {
	if m != nil && m.MType != nil {
		return *m.MType
	}
	return MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_NONE
}

func (m *MjSettlementInfo) GetMDetail() []*MjSettlementDetail {
	if m != nil {
		return m.MDetail
	}
	return nil
}

func (m *MjSettlementInfo) GetMHuType() uint32 {
	if m != nil && m.MHuType != nil {
		return *m.MHuType
	}
	return 0
}

func (m *MjSettlementInfo) GetMMultiple() uint32 {
	if m != nil && m.MMultiple != nil {
		return *m.MMultiple
	}
	return 0
}

func (m *MjSettlementInfo) GetMGenCount() int32 {
	if m != nil && m.MGenCount != nil {
		return *m.MGenCount
	}
	return 0
}

// GAME_SUB_SC_OPERATE_RESULT_NOTIFY = 106; //操作通知
type SC_OperateResultNotify struct {
	MOperateMask         *MJ_OPERATE_MASK    `protobuf:"varint,1,req,name=mOperateMask,enum=XueZhanMj.MJ_OPERATE_MASK" json:"mOperateMask,omitempty"`
	MOperateSeatId       *uint32             `protobuf:"varint,2,req,name=mOperateSeatId" json:"mOperateSeatId,omitempty"`
	MTagMj               *uint32             `protobuf:"varint,3,req,name=mTagMj" json:"mTagMj,omitempty"`
	MTagMj1              *uint32             `protobuf:"varint,4,opt,name=mTagMj1" json:"mTagMj1,omitempty"`
	MTagMj2              *uint32             `protobuf:"varint,5,opt,name=mTagMj2" json:"mTagMj2,omitempty"`
	MSettlementInfo      []*MjSettlementInfo `protobuf:"bytes,6,rep,name=mSettlementInfo" json:"mSettlementInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SC_OperateResultNotify) Reset()         { *m = SC_OperateResultNotify{} }
func (m *SC_OperateResultNotify) String() string { return proto.CompactTextString(m) }
func (*SC_OperateResultNotify) ProtoMessage()    {}
func (*SC_OperateResultNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{28}
}
func (m *SC_OperateResultNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_OperateResultNotify.Unmarshal(m, b)
}
func (m *SC_OperateResultNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_OperateResultNotify.Marshal(b, m, deterministic)
}
func (dst *SC_OperateResultNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_OperateResultNotify.Merge(dst, src)
}
func (m *SC_OperateResultNotify) XXX_Size() int {
	return xxx_messageInfo_SC_OperateResultNotify.Size(m)
}
func (m *SC_OperateResultNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_OperateResultNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_OperateResultNotify proto.InternalMessageInfo

func (m *SC_OperateResultNotify) GetMOperateMask() MJ_OPERATE_MASK {
	if m != nil && m.MOperateMask != nil {
		return *m.MOperateMask
	}
	return MJ_OPERATE_MASK_MJ_OPERATE_MASK_NONE
}

func (m *SC_OperateResultNotify) GetMOperateSeatId() uint32 {
	if m != nil && m.MOperateSeatId != nil {
		return *m.MOperateSeatId
	}
	return 0
}

func (m *SC_OperateResultNotify) GetMTagMj() uint32 {
	if m != nil && m.MTagMj != nil {
		return *m.MTagMj
	}
	return 0
}

func (m *SC_OperateResultNotify) GetMTagMj1() uint32 {
	if m != nil && m.MTagMj1 != nil {
		return *m.MTagMj1
	}
	return 0
}

func (m *SC_OperateResultNotify) GetMTagMj2() uint32 {
	if m != nil && m.MTagMj2 != nil {
		return *m.MTagMj2
	}
	return 0
}

func (m *SC_OperateResultNotify) GetMSettlementInfo() []*MjSettlementInfo {
	if m != nil {
		return m.MSettlementInfo
	}
	return nil
}

// GAME_SUB_SC_OPERATE_CODE_NOTIFY = 103;   //操作码通知
type SC_OperateCodeNotify struct {
	MOperateMask         []MJ_OPERATE_MASK `protobuf:"varint,1,rep,name=mOperateMask,enum=XueZhanMj.MJ_OPERATE_MASK" json:"mOperateMask,omitempty"`
	MWaitSeatId          *uint32           `protobuf:"varint,2,req,name=mWaitSeatId" json:"mWaitSeatId,omitempty"`
	MOperateTimeOut      *uint32           `protobuf:"varint,3,req,name=mOperateTimeOut" json:"mOperateTimeOut,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SC_OperateCodeNotify) Reset()         { *m = SC_OperateCodeNotify{} }
func (m *SC_OperateCodeNotify) String() string { return proto.CompactTextString(m) }
func (*SC_OperateCodeNotify) ProtoMessage()    {}
func (*SC_OperateCodeNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{29}
}
func (m *SC_OperateCodeNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_OperateCodeNotify.Unmarshal(m, b)
}
func (m *SC_OperateCodeNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_OperateCodeNotify.Marshal(b, m, deterministic)
}
func (dst *SC_OperateCodeNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_OperateCodeNotify.Merge(dst, src)
}
func (m *SC_OperateCodeNotify) XXX_Size() int {
	return xxx_messageInfo_SC_OperateCodeNotify.Size(m)
}
func (m *SC_OperateCodeNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_OperateCodeNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_OperateCodeNotify proto.InternalMessageInfo

func (m *SC_OperateCodeNotify) GetMOperateMask() []MJ_OPERATE_MASK {
	if m != nil {
		return m.MOperateMask
	}
	return nil
}

func (m *SC_OperateCodeNotify) GetMWaitSeatId() uint32 {
	if m != nil && m.MWaitSeatId != nil {
		return *m.MWaitSeatId
	}
	return 0
}

func (m *SC_OperateCodeNotify) GetMOperateTimeOut() uint32 {
	if m != nil && m.MOperateTimeOut != nil {
		return *m.MOperateTimeOut
	}
	return 0
}

// GAME_SUB_SC_HUAN_SAN_ZHANG_NOTIFY = 104;//换三张结果通知
type SC_HuanSanZhangNotify struct {
	MHuanType            *HSZ_TYPE `protobuf:"varint,1,req,name=mHuanType,enum=XueZhanMj.HSZ_TYPE" json:"mHuanType,omitempty"`
	MSeatId              *uint32   `protobuf:"varint,2,req,name=mSeatId" json:"mSeatId,omitempty"`
	MHuanCards           []uint32  `protobuf:"varint,3,rep,name=mHuanCards" json:"mHuanCards,omitempty"`
	MHuanInCards         []uint32  `protobuf:"varint,4,rep,name=mHuanInCards" json:"mHuanInCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SC_HuanSanZhangNotify) Reset()         { *m = SC_HuanSanZhangNotify{} }
func (m *SC_HuanSanZhangNotify) String() string { return proto.CompactTextString(m) }
func (*SC_HuanSanZhangNotify) ProtoMessage()    {}
func (*SC_HuanSanZhangNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{30}
}
func (m *SC_HuanSanZhangNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_HuanSanZhangNotify.Unmarshal(m, b)
}
func (m *SC_HuanSanZhangNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_HuanSanZhangNotify.Marshal(b, m, deterministic)
}
func (dst *SC_HuanSanZhangNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_HuanSanZhangNotify.Merge(dst, src)
}
func (m *SC_HuanSanZhangNotify) XXX_Size() int {
	return xxx_messageInfo_SC_HuanSanZhangNotify.Size(m)
}
func (m *SC_HuanSanZhangNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_HuanSanZhangNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_HuanSanZhangNotify proto.InternalMessageInfo

func (m *SC_HuanSanZhangNotify) GetMHuanType() HSZ_TYPE {
	if m != nil && m.MHuanType != nil {
		return *m.MHuanType
	}
	return HSZ_TYPE_HSZ_TYPE_NONE
}

func (m *SC_HuanSanZhangNotify) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *SC_HuanSanZhangNotify) GetMHuanCards() []uint32 {
	if m != nil {
		return m.MHuanCards
	}
	return nil
}

func (m *SC_HuanSanZhangNotify) GetMHuanInCards() []uint32 {
	if m != nil {
		return m.MHuanInCards
	}
	return nil
}

// GAME_SUB_SC_GAME_END  = 108;//游戏结束
type SC_GameEnd struct {
	MTableState          *TableState `protobuf:"varint,1,req,name=mTableState,enum=XueZhanMj.TableState" json:"mTableState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SC_GameEnd) Reset()         { *m = SC_GameEnd{} }
func (m *SC_GameEnd) String() string { return proto.CompactTextString(m) }
func (*SC_GameEnd) ProtoMessage()    {}
func (*SC_GameEnd) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{31}
}
func (m *SC_GameEnd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_GameEnd.Unmarshal(m, b)
}
func (m *SC_GameEnd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_GameEnd.Marshal(b, m, deterministic)
}
func (dst *SC_GameEnd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_GameEnd.Merge(dst, src)
}
func (m *SC_GameEnd) XXX_Size() int {
	return xxx_messageInfo_SC_GameEnd.Size(m)
}
func (m *SC_GameEnd) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_GameEnd.DiscardUnknown(m)
}

var xxx_messageInfo_SC_GameEnd proto.InternalMessageInfo

func (m *SC_GameEnd) GetMTableState() TableState {
	if m != nil && m.MTableState != nil {
		return *m.MTableState
	}
	return TableState_Table_State_Init
}

type MUserMjSettlementInfo struct {
	MSeatId              *uint32             `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MSettlementInfo      []*MjSettlementInfo `protobuf:"bytes,2,rep,name=mSettlementInfo" json:"mSettlementInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MUserMjSettlementInfo) Reset()         { *m = MUserMjSettlementInfo{} }
func (m *MUserMjSettlementInfo) String() string { return proto.CompactTextString(m) }
func (*MUserMjSettlementInfo) ProtoMessage()    {}
func (*MUserMjSettlementInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{32}
}
func (m *MUserMjSettlementInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MUserMjSettlementInfo.Unmarshal(m, b)
}
func (m *MUserMjSettlementInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MUserMjSettlementInfo.Marshal(b, m, deterministic)
}
func (dst *MUserMjSettlementInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MUserMjSettlementInfo.Merge(dst, src)
}
func (m *MUserMjSettlementInfo) XXX_Size() int {
	return xxx_messageInfo_MUserMjSettlementInfo.Size(m)
}
func (m *MUserMjSettlementInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MUserMjSettlementInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MUserMjSettlementInfo proto.InternalMessageInfo

func (m *MUserMjSettlementInfo) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *MUserMjSettlementInfo) GetMSettlementInfo() []*MjSettlementInfo {
	if m != nil {
		return m.MSettlementInfo
	}
	return nil
}

type SC_UserMjSettlementInfoNotify struct {
	MInfos               []*MUserMjSettlementInfo `protobuf:"bytes,1,rep,name=mInfos" json:"mInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SC_UserMjSettlementInfoNotify) Reset()         { *m = SC_UserMjSettlementInfoNotify{} }
func (m *SC_UserMjSettlementInfoNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserMjSettlementInfoNotify) ProtoMessage()    {}
func (*SC_UserMjSettlementInfoNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{33}
}
func (m *SC_UserMjSettlementInfoNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserMjSettlementInfoNotify.Unmarshal(m, b)
}
func (m *SC_UserMjSettlementInfoNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserMjSettlementInfoNotify.Marshal(b, m, deterministic)
}
func (dst *SC_UserMjSettlementInfoNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserMjSettlementInfoNotify.Merge(dst, src)
}
func (m *SC_UserMjSettlementInfoNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserMjSettlementInfoNotify.Size(m)
}
func (m *SC_UserMjSettlementInfoNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserMjSettlementInfoNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserMjSettlementInfoNotify proto.InternalMessageInfo

func (m *SC_UserMjSettlementInfoNotify) GetMInfos() []*MUserMjSettlementInfo {
	if m != nil {
		return m.MInfos
	}
	return nil
}

// 录像回放桌位信息
type MVideotapeSeatInfo struct {
	MSeatId              *uint32         `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MBaseInfos           *PlayerBaseInfo `protobuf:"bytes,2,req,name=mBaseInfos" json:"mBaseInfos,omitempty"`
	MCards               []uint32        `protobuf:"varint,3,rep,name=mCards" json:"mCards,omitempty"`
	MHuanCards           []uint32        `protobuf:"varint,4,rep,name=mHuanCards" json:"mHuanCards,omitempty"`
	MHuanInCards         []uint32        `protobuf:"varint,5,rep,name=mHuanInCards" json:"mHuanInCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MVideotapeSeatInfo) Reset()         { *m = MVideotapeSeatInfo{} }
func (m *MVideotapeSeatInfo) String() string { return proto.CompactTextString(m) }
func (*MVideotapeSeatInfo) ProtoMessage()    {}
func (*MVideotapeSeatInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{34}
}
func (m *MVideotapeSeatInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MVideotapeSeatInfo.Unmarshal(m, b)
}
func (m *MVideotapeSeatInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MVideotapeSeatInfo.Marshal(b, m, deterministic)
}
func (dst *MVideotapeSeatInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MVideotapeSeatInfo.Merge(dst, src)
}
func (m *MVideotapeSeatInfo) XXX_Size() int {
	return xxx_messageInfo_MVideotapeSeatInfo.Size(m)
}
func (m *MVideotapeSeatInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MVideotapeSeatInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MVideotapeSeatInfo proto.InternalMessageInfo

func (m *MVideotapeSeatInfo) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *MVideotapeSeatInfo) GetMBaseInfos() *PlayerBaseInfo {
	if m != nil {
		return m.MBaseInfos
	}
	return nil
}

func (m *MVideotapeSeatInfo) GetMCards() []uint32 {
	if m != nil {
		return m.MCards
	}
	return nil
}

func (m *MVideotapeSeatInfo) GetMHuanCards() []uint32 {
	if m != nil {
		return m.MHuanCards
	}
	return nil
}

func (m *MVideotapeSeatInfo) GetMHuanInCards() []uint32 {
	if m != nil {
		return m.MHuanInCards
	}
	return nil
}

// 单局游戏录像回放数据
type MGameVideotapeInfo struct {
	MTableAttribute        *StTableAttribute         `protobuf:"bytes,1,req,name=mTableAttribute" json:"mTableAttribute,omitempty"`
	MBankerSeatId          *uint32                   `protobuf:"varint,2,req,name=mBankerSeatId" json:"mBankerSeatId,omitempty"`
	MFirstDice             *uint32                   `protobuf:"varint,3,req,name=mFirstDice" json:"mFirstDice,omitempty"`
	MSecondDice            *uint32                   `protobuf:"varint,4,req,name=mSecondDice" json:"mSecondDice,omitempty"`
	MHuanType              *HSZ_TYPE                 `protobuf:"varint,5,req,name=mHuanType,enum=XueZhanMj.HSZ_TYPE" json:"mHuanType,omitempty"`
	MVideoSeatInfo         []*MVideotapeSeatInfo     `protobuf:"bytes,6,rep,name=mVideoSeatInfo" json:"mVideoSeatInfo,omitempty"`
	MOperateRecords        []*SC_OperateResultNotify `protobuf:"bytes,7,rep,name=mOperateRecords" json:"mOperateRecords,omitempty"`
	MTotalSettlementDetail []*MjSettlementDetail     `protobuf:"bytes,8,rep,name=mTotalSettlementDetail" json:"mTotalSettlementDetail,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                  `json:"-"`
	XXX_unrecognized       []byte                    `json:"-"`
	XXX_sizecache          int32                     `json:"-"`
}

func (m *MGameVideotapeInfo) Reset()         { *m = MGameVideotapeInfo{} }
func (m *MGameVideotapeInfo) String() string { return proto.CompactTextString(m) }
func (*MGameVideotapeInfo) ProtoMessage()    {}
func (*MGameVideotapeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{35}
}
func (m *MGameVideotapeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MGameVideotapeInfo.Unmarshal(m, b)
}
func (m *MGameVideotapeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MGameVideotapeInfo.Marshal(b, m, deterministic)
}
func (dst *MGameVideotapeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MGameVideotapeInfo.Merge(dst, src)
}
func (m *MGameVideotapeInfo) XXX_Size() int {
	return xxx_messageInfo_MGameVideotapeInfo.Size(m)
}
func (m *MGameVideotapeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MGameVideotapeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MGameVideotapeInfo proto.InternalMessageInfo

func (m *MGameVideotapeInfo) GetMTableAttribute() *StTableAttribute {
	if m != nil {
		return m.MTableAttribute
	}
	return nil
}

func (m *MGameVideotapeInfo) GetMBankerSeatId() uint32 {
	if m != nil && m.MBankerSeatId != nil {
		return *m.MBankerSeatId
	}
	return 0
}

func (m *MGameVideotapeInfo) GetMFirstDice() uint32 {
	if m != nil && m.MFirstDice != nil {
		return *m.MFirstDice
	}
	return 0
}

func (m *MGameVideotapeInfo) GetMSecondDice() uint32 {
	if m != nil && m.MSecondDice != nil {
		return *m.MSecondDice
	}
	return 0
}

func (m *MGameVideotapeInfo) GetMHuanType() HSZ_TYPE {
	if m != nil && m.MHuanType != nil {
		return *m.MHuanType
	}
	return HSZ_TYPE_HSZ_TYPE_NONE
}

func (m *MGameVideotapeInfo) GetMVideoSeatInfo() []*MVideotapeSeatInfo {
	if m != nil {
		return m.MVideoSeatInfo
	}
	return nil
}

func (m *MGameVideotapeInfo) GetMOperateRecords() []*SC_OperateResultNotify {
	if m != nil {
		return m.MOperateRecords
	}
	return nil
}

func (m *MGameVideotapeInfo) GetMTotalSettlementDetail() []*MjSettlementDetail {
	if m != nil {
		return m.MTotalSettlementDetail
	}
	return nil
}

type MWinDetailInfo struct {
	MSeatId              *int32   `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MWinScore            *int64   `protobuf:"varint,2,req,name=mWinScore" json:"mWinScore,omitempty"`
	MUserID              *int32   `protobuf:"varint,3,req,name=mUserID" json:"mUserID,omitempty"`
	MAccid               *int32   `protobuf:"varint,4,req,name=mAccid" json:"mAccid,omitempty"`
	MNickName            *string  `protobuf:"bytes,5,req,name=mNickName" json:"mNickName,omitempty"`
	MFaceID              *string  `protobuf:"bytes,6,req,name=mFaceID" json:"mFaceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MWinDetailInfo) Reset()         { *m = MWinDetailInfo{} }
func (m *MWinDetailInfo) String() string { return proto.CompactTextString(m) }
func (*MWinDetailInfo) ProtoMessage()    {}
func (*MWinDetailInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{36}
}
func (m *MWinDetailInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MWinDetailInfo.Unmarshal(m, b)
}
func (m *MWinDetailInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MWinDetailInfo.Marshal(b, m, deterministic)
}
func (dst *MWinDetailInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MWinDetailInfo.Merge(dst, src)
}
func (m *MWinDetailInfo) XXX_Size() int {
	return xxx_messageInfo_MWinDetailInfo.Size(m)
}
func (m *MWinDetailInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MWinDetailInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MWinDetailInfo proto.InternalMessageInfo

func (m *MWinDetailInfo) GetMSeatId() int32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *MWinDetailInfo) GetMWinScore() int64 {
	if m != nil && m.MWinScore != nil {
		return *m.MWinScore
	}
	return 0
}

func (m *MWinDetailInfo) GetMUserID() int32 {
	if m != nil && m.MUserID != nil {
		return *m.MUserID
	}
	return 0
}

func (m *MWinDetailInfo) GetMAccid() int32 {
	if m != nil && m.MAccid != nil {
		return *m.MAccid
	}
	return 0
}

func (m *MWinDetailInfo) GetMNickName() string {
	if m != nil && m.MNickName != nil {
		return *m.MNickName
	}
	return ""
}

func (m *MWinDetailInfo) GetMFaceID() string {
	if m != nil && m.MFaceID != nil {
		return *m.MFaceID
	}
	return ""
}

// GAME_SUB_CS_TABLE_LAST_WIN_DETAIL = 16;//桌子最上局比赛输赢记录
type CS_TableLastWinDetail struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_TableLastWinDetail) Reset()         { *m = CS_TableLastWinDetail{} }
func (m *CS_TableLastWinDetail) String() string { return proto.CompactTextString(m) }
func (*CS_TableLastWinDetail) ProtoMessage()    {}
func (*CS_TableLastWinDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{37}
}
func (m *CS_TableLastWinDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_TableLastWinDetail.Unmarshal(m, b)
}
func (m *CS_TableLastWinDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_TableLastWinDetail.Marshal(b, m, deterministic)
}
func (dst *CS_TableLastWinDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_TableLastWinDetail.Merge(dst, src)
}
func (m *CS_TableLastWinDetail) XXX_Size() int {
	return xxx_messageInfo_CS_TableLastWinDetail.Size(m)
}
func (m *CS_TableLastWinDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_TableLastWinDetail.DiscardUnknown(m)
}

var xxx_messageInfo_CS_TableLastWinDetail proto.InternalMessageInfo

// GAME_SUB_SC_TABLE_LAST_WIN_DETAIL_NOTIFY = 17;//桌子最上局比赛输赢记录通知
type SC_TableLastWinDetailNotify struct {
	MLastWinDetailInfo   []*MWinDetailInfo `protobuf:"bytes,1,rep,name=mLastWinDetailInfo" json:"mLastWinDetailInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SC_TableLastWinDetailNotify) Reset()         { *m = SC_TableLastWinDetailNotify{} }
func (m *SC_TableLastWinDetailNotify) String() string { return proto.CompactTextString(m) }
func (*SC_TableLastWinDetailNotify) ProtoMessage()    {}
func (*SC_TableLastWinDetailNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{38}
}
func (m *SC_TableLastWinDetailNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_TableLastWinDetailNotify.Unmarshal(m, b)
}
func (m *SC_TableLastWinDetailNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_TableLastWinDetailNotify.Marshal(b, m, deterministic)
}
func (dst *SC_TableLastWinDetailNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_TableLastWinDetailNotify.Merge(dst, src)
}
func (m *SC_TableLastWinDetailNotify) XXX_Size() int {
	return xxx_messageInfo_SC_TableLastWinDetailNotify.Size(m)
}
func (m *SC_TableLastWinDetailNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_TableLastWinDetailNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_TableLastWinDetailNotify proto.InternalMessageInfo

func (m *SC_TableLastWinDetailNotify) GetMLastWinDetailInfo() []*MWinDetailInfo {
	if m != nil {
		return m.MLastWinDetailInfo
	}
	return nil
}

// GAME_SUB_SC_USER_LAST_GAME_INFO_NOTIFY = 17; //通知上局游戏信息
type UserLastGameInfo struct {
	MSeatId              *uint32             `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MTotalRecord         *int32              `protobuf:"varint,2,req,name=mTotalRecord" json:"mTotalRecord,omitempty"`
	MRejectSuit          *uint32             `protobuf:"varint,3,req,name=mRejectSuit" json:"mRejectSuit,omitempty"`
	MHuCard              *uint32             `protobuf:"varint,4,req,name=mHuCard" json:"mHuCard,omitempty"`
	MDealCards           []uint32            `protobuf:"varint,5,rep,name=mDealCards" json:"mDealCards,omitempty"`
	MHandCards           []uint32            `protobuf:"varint,6,rep,name=mHandCards" json:"mHandCards,omitempty"`
	MMingCards           []uint32            `protobuf:"varint,7,rep,name=mMingCards" json:"mMingCards,omitempty"`
	MAnGangCards         []uint32            `protobuf:"varint,8,rep,name=mAnGangCards" json:"mAnGangCards,omitempty"`
	MBuGangCards         []uint32            `protobuf:"varint,9,rep,name=mBuGangCards" json:"mBuGangCards,omitempty"`
	MPengCards           []uint32            `protobuf:"varint,10,rep,name=mPengCards" json:"mPengCards,omitempty"`
	MSettlementType      *MJ_SETTLEMENT_TYPE `protobuf:"varint,11,req,name=mSettlementType,enum=XueZhanMj.MJ_SETTLEMENT_TYPE" json:"mSettlementType,omitempty"`
	MSettlementInfo      []*MjSettlementInfo `protobuf:"bytes,12,rep,name=mSettlementInfo" json:"mSettlementInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UserLastGameInfo) Reset()         { *m = UserLastGameInfo{} }
func (m *UserLastGameInfo) String() string { return proto.CompactTextString(m) }
func (*UserLastGameInfo) ProtoMessage()    {}
func (*UserLastGameInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{39}
}
func (m *UserLastGameInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLastGameInfo.Unmarshal(m, b)
}
func (m *UserLastGameInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLastGameInfo.Marshal(b, m, deterministic)
}
func (dst *UserLastGameInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLastGameInfo.Merge(dst, src)
}
func (m *UserLastGameInfo) XXX_Size() int {
	return xxx_messageInfo_UserLastGameInfo.Size(m)
}
func (m *UserLastGameInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLastGameInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserLastGameInfo proto.InternalMessageInfo

func (m *UserLastGameInfo) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *UserLastGameInfo) GetMTotalRecord() int32 {
	if m != nil && m.MTotalRecord != nil {
		return *m.MTotalRecord
	}
	return 0
}

func (m *UserLastGameInfo) GetMRejectSuit() uint32 {
	if m != nil && m.MRejectSuit != nil {
		return *m.MRejectSuit
	}
	return 0
}

func (m *UserLastGameInfo) GetMHuCard() uint32 {
	if m != nil && m.MHuCard != nil {
		return *m.MHuCard
	}
	return 0
}

func (m *UserLastGameInfo) GetMDealCards() []uint32 {
	if m != nil {
		return m.MDealCards
	}
	return nil
}

func (m *UserLastGameInfo) GetMHandCards() []uint32 {
	if m != nil {
		return m.MHandCards
	}
	return nil
}

func (m *UserLastGameInfo) GetMMingCards() []uint32 {
	if m != nil {
		return m.MMingCards
	}
	return nil
}

func (m *UserLastGameInfo) GetMAnGangCards() []uint32 {
	if m != nil {
		return m.MAnGangCards
	}
	return nil
}

func (m *UserLastGameInfo) GetMBuGangCards() []uint32 {
	if m != nil {
		return m.MBuGangCards
	}
	return nil
}

func (m *UserLastGameInfo) GetMPengCards() []uint32 {
	if m != nil {
		return m.MPengCards
	}
	return nil
}

func (m *UserLastGameInfo) GetMSettlementType() MJ_SETTLEMENT_TYPE {
	if m != nil && m.MSettlementType != nil {
		return *m.MSettlementType
	}
	return MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_NONE
}

func (m *UserLastGameInfo) GetMSettlementInfo() []*MjSettlementInfo {
	if m != nil {
		return m.MSettlementInfo
	}
	return nil
}

type SC_UserLastGameInfoNotify struct {
	MZhuangSeatId        *uint32             `protobuf:"varint,1,req,name=mZhuangSeatId" json:"mZhuangSeatId,omitempty"`
	MRemainCardNum       *uint32             `protobuf:"varint,2,req,name=mRemainCardNum" json:"mRemainCardNum,omitempty"`
	MLastGameInfo        []*UserLastGameInfo `protobuf:"bytes,3,rep,name=mLastGameInfo" json:"mLastGameInfo,omitempty"`
	MSettlementId        *uint64             `protobuf:"varint,4,req,name=mSettlementId" json:"mSettlementId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SC_UserLastGameInfoNotify) Reset()         { *m = SC_UserLastGameInfoNotify{} }
func (m *SC_UserLastGameInfoNotify) String() string { return proto.CompactTextString(m) }
func (*SC_UserLastGameInfoNotify) ProtoMessage()    {}
func (*SC_UserLastGameInfoNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{40}
}
func (m *SC_UserLastGameInfoNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserLastGameInfoNotify.Unmarshal(m, b)
}
func (m *SC_UserLastGameInfoNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserLastGameInfoNotify.Marshal(b, m, deterministic)
}
func (dst *SC_UserLastGameInfoNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserLastGameInfoNotify.Merge(dst, src)
}
func (m *SC_UserLastGameInfoNotify) XXX_Size() int {
	return xxx_messageInfo_SC_UserLastGameInfoNotify.Size(m)
}
func (m *SC_UserLastGameInfoNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserLastGameInfoNotify.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserLastGameInfoNotify proto.InternalMessageInfo

func (m *SC_UserLastGameInfoNotify) GetMZhuangSeatId() uint32 {
	if m != nil && m.MZhuangSeatId != nil {
		return *m.MZhuangSeatId
	}
	return 0
}

func (m *SC_UserLastGameInfoNotify) GetMRemainCardNum() uint32 {
	if m != nil && m.MRemainCardNum != nil {
		return *m.MRemainCardNum
	}
	return 0
}

func (m *SC_UserLastGameInfoNotify) GetMLastGameInfo() []*UserLastGameInfo {
	if m != nil {
		return m.MLastGameInfo
	}
	return nil
}

func (m *SC_UserLastGameInfoNotify) GetMSettlementId() uint64 {
	if m != nil && m.MSettlementId != nil {
		return *m.MSettlementId
	}
	return 0
}

// 用户配牌期望值
// GAME_SUB_CS_USER_WANT_CARDS = 50; //测试协议-用户期望牌值（发牌，和摸牌时用）
type CS_UserWantCards struct {
	MSeatId              *uint32  `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MWantCardType        *uint32  `protobuf:"varint,2,req,name=mWantCardType" json:"mWantCardType,omitempty"`
	MCards               []uint32 `protobuf:"varint,3,rep,name=mCards" json:"mCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CS_UserWantCards) Reset()         { *m = CS_UserWantCards{} }
func (m *CS_UserWantCards) String() string { return proto.CompactTextString(m) }
func (*CS_UserWantCards) ProtoMessage()    {}
func (*CS_UserWantCards) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{41}
}
func (m *CS_UserWantCards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CS_UserWantCards.Unmarshal(m, b)
}
func (m *CS_UserWantCards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CS_UserWantCards.Marshal(b, m, deterministic)
}
func (dst *CS_UserWantCards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CS_UserWantCards.Merge(dst, src)
}
func (m *CS_UserWantCards) XXX_Size() int {
	return xxx_messageInfo_CS_UserWantCards.Size(m)
}
func (m *CS_UserWantCards) XXX_DiscardUnknown() {
	xxx_messageInfo_CS_UserWantCards.DiscardUnknown(m)
}

var xxx_messageInfo_CS_UserWantCards proto.InternalMessageInfo

func (m *CS_UserWantCards) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *CS_UserWantCards) GetMWantCardType() uint32 {
	if m != nil && m.MWantCardType != nil {
		return *m.MWantCardType
	}
	return 0
}

func (m *CS_UserWantCards) GetMCards() []uint32 {
	if m != nil {
		return m.MCards
	}
	return nil
}

// 用户配牌结果
// GAME_SUB_SC_USER_WANT_CARDS_RESULT = 51; //测试协议-用户期望牌值配置结果（发牌，和摸牌时用）
type SC_UserWantCardsResult struct {
	MSeatId              *uint32  `protobuf:"varint,1,req,name=mSeatId" json:"mSeatId,omitempty"`
	MResultStr           *string  `protobuf:"bytes,2,req,name=mResultStr" json:"mResultStr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SC_UserWantCardsResult) Reset()         { *m = SC_UserWantCardsResult{} }
func (m *SC_UserWantCardsResult) String() string { return proto.CompactTextString(m) }
func (*SC_UserWantCardsResult) ProtoMessage()    {}
func (*SC_UserWantCardsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_CmdXueZhanMj_b49ce341ca59b876, []int{42}
}
func (m *SC_UserWantCardsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SC_UserWantCardsResult.Unmarshal(m, b)
}
func (m *SC_UserWantCardsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SC_UserWantCardsResult.Marshal(b, m, deterministic)
}
func (dst *SC_UserWantCardsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SC_UserWantCardsResult.Merge(dst, src)
}
func (m *SC_UserWantCardsResult) XXX_Size() int {
	return xxx_messageInfo_SC_UserWantCardsResult.Size(m)
}
func (m *SC_UserWantCardsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SC_UserWantCardsResult.DiscardUnknown(m)
}

var xxx_messageInfo_SC_UserWantCardsResult proto.InternalMessageInfo

func (m *SC_UserWantCardsResult) GetMSeatId() uint32 {
	if m != nil && m.MSeatId != nil {
		return *m.MSeatId
	}
	return 0
}

func (m *SC_UserWantCardsResult) GetMResultStr() string {
	if m != nil && m.MResultStr != nil {
		return *m.MResultStr
	}
	return ""
}

func init() {
	proto.RegisterType((*CS_UserDissolveApply)(nil), "XueZhanMj.CS_UserDissolveApply")
	proto.RegisterType((*CS_UserAnswerDissolveApply)(nil), "XueZhanMj.CS_UserAnswerDissolveApply")
	proto.RegisterType((*SC_UserDissolveApplyNotify)(nil), "XueZhanMj.SC_UserDissolveApplyNotify")
	proto.RegisterType((*CS_UserTableChatRqst)(nil), "XueZhanMj.CS_UserTableChatRqst")
	proto.RegisterType((*SC_UserTableChatNotify)(nil), "XueZhanMj.SC_UserTableChatNotify")
	proto.RegisterType((*CS_UserReadyGameRqst)(nil), "XueZhanMj.CS_UserReadyGameRqst")
	proto.RegisterType((*SC_UserReadyGameNotify)(nil), "XueZhanMj.SC_UserReadyGameNotify")
	proto.RegisterType((*SC_UseBaseInfoNotify)(nil), "XueZhanMj.SC_UseBaseInfoNotify")
	proto.RegisterType((*PlayerBaseInfo)(nil), "XueZhanMj.PlayerBaseInfo")
	proto.RegisterType((*SeatInfo)(nil), "XueZhanMj.SeatInfo")
	proto.RegisterType((*StTableAttribute)(nil), "XueZhanMj.stTableAttribute")
	proto.RegisterType((*TableInfo)(nil), "XueZhanMj.TableInfo")
	proto.RegisterType((*SC_TableInfoNotify)(nil), "XueZhanMj.SC_TableInfoNotify")
	proto.RegisterType((*SC_UserTableDIsmissNotify)(nil), "XueZhanMj.SC_UserTableDIsmissNotify")
	proto.RegisterType((*MMjOperateRecord)(nil), "XueZhanMj.MMjOperateRecord")
	proto.RegisterType((*SeatCardInfo)(nil), "XueZhanMj.SeatCardInfo")
	proto.RegisterType((*SC_UserCardNotify)(nil), "XueZhanMj.SC_UserCardNotify")
	proto.RegisterType((*CS_UserDismissTable)(nil), "XueZhanMj.CS_UserDismissTable")
	proto.RegisterType((*SC_UserMjLastHandNotify)(nil), "XueZhanMj.SC_UserMjLastHandNotify")
	proto.RegisterType((*MMjUserWinDetail)(nil), "XueZhanMj.MMjUserWinDetail")
	proto.RegisterType((*MMatchWinRecord)(nil), "XueZhanMj.MMatchWinRecord")
	proto.RegisterType((*SC_TAbleTotalWinNotify)(nil), "XueZhanMj.SC_TAbleTotalWinNotify")
	proto.RegisterType((*SC_GameStart)(nil), "XueZhanMj.SC_GameStart")
	proto.RegisterType((*SC_UserMjAssignNotify)(nil), "XueZhanMj.SC_UserMjAssignNotify")
	proto.RegisterType((*SC_UserMjGetNotify)(nil), "XueZhanMj.SC_UserMjGetNotify")
	proto.RegisterType((*CS_UserOperate)(nil), "XueZhanMj.CS_UserOperate")
	proto.RegisterType((*MjSettlementDetail)(nil), "XueZhanMj.MjSettlementDetail")
	proto.RegisterType((*MjSettlementInfo)(nil), "XueZhanMj.MjSettlementInfo")
	proto.RegisterType((*SC_OperateResultNotify)(nil), "XueZhanMj.SC_OperateResultNotify")
	proto.RegisterType((*SC_OperateCodeNotify)(nil), "XueZhanMj.SC_OperateCodeNotify")
	proto.RegisterType((*SC_HuanSanZhangNotify)(nil), "XueZhanMj.SC_HuanSanZhangNotify")
	proto.RegisterType((*SC_GameEnd)(nil), "XueZhanMj.SC_GameEnd")
	proto.RegisterType((*MUserMjSettlementInfo)(nil), "XueZhanMj.MUserMjSettlementInfo")
	proto.RegisterType((*SC_UserMjSettlementInfoNotify)(nil), "XueZhanMj.SC_UserMjSettlementInfoNotify")
	proto.RegisterType((*MVideotapeSeatInfo)(nil), "XueZhanMj.MVideotapeSeatInfo")
	proto.RegisterType((*MGameVideotapeInfo)(nil), "XueZhanMj.MGameVideotapeInfo")
	proto.RegisterType((*MWinDetailInfo)(nil), "XueZhanMj.MWinDetailInfo")
	proto.RegisterType((*CS_TableLastWinDetail)(nil), "XueZhanMj.CS_TableLastWinDetail")
	proto.RegisterType((*SC_TableLastWinDetailNotify)(nil), "XueZhanMj.SC_TableLastWinDetailNotify")
	proto.RegisterType((*UserLastGameInfo)(nil), "XueZhanMj.UserLastGameInfo")
	proto.RegisterType((*SC_UserLastGameInfoNotify)(nil), "XueZhanMj.SC_UserLastGameInfoNotify")
	proto.RegisterType((*CS_UserWantCards)(nil), "XueZhanMj.CS_UserWantCards")
	proto.RegisterType((*SC_UserWantCardsResult)(nil), "XueZhanMj.SC_UserWantCardsResult")
	proto.RegisterEnum("XueZhanMj.EnGameFrameID", EnGameFrameID_name, EnGameFrameID_value)
	proto.RegisterEnum("XueZhanMj.EnGameSubID", EnGameSubID_name, EnGameSubID_value)
	proto.RegisterEnum("XueZhanMj.TableFinalDecision", TableFinalDecision_name, TableFinalDecision_value)
	proto.RegisterEnum("XueZhanMj.TableState", TableState_name, TableState_value)
	proto.RegisterEnum("XueZhanMj.UserState", UserState_name, UserState_value)
	proto.RegisterEnum("XueZhanMj.HUAN_SAN_ZHANG_TYPE", HUAN_SAN_ZHANG_TYPE_name, HUAN_SAN_ZHANG_TYPE_value)
	proto.RegisterEnum("XueZhanMj.MJ_OPERATE_MASK", MJ_OPERATE_MASK_name, MJ_OPERATE_MASK_value)
	proto.RegisterEnum("XueZhanMj.MJ_SETTLEMENT_TYPE", MJ_SETTLEMENT_TYPE_name, MJ_SETTLEMENT_TYPE_value)
	proto.RegisterEnum("XueZhanMj.FINAL_CARD_TYPE", FINAL_CARD_TYPE_name, FINAL_CARD_TYPE_value)
	proto.RegisterEnum("XueZhanMj.HSZ_TYPE", HSZ_TYPE_name, HSZ_TYPE_value)
}

func init() { proto.RegisterFile("CmdXueZhanMj.proto", fileDescriptor_CmdXueZhanMj_b49ce341ca59b876) }

var fileDescriptor_CmdXueZhanMj_b49ce341ca59b876 = []byte{
	// 3140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0x4f, 0x6f, 0xe3, 0xd6,
	0xb5, 0x8f, 0x24, 0xcb, 0xb6, 0x8e, 0x2d, 0x9b, 0x43, 0xff, 0xe3, 0xd8, 0x99, 0x19, 0x87, 0x79,
	0x2f, 0xf1, 0xf3, 0x9b, 0xcc, 0x4b, 0x9c, 0x37, 0x79, 0x41, 0xf0, 0xd2, 0x96, 0x16, 0x65, 0x89,
	0x8e, 0x48, 0x79, 0x4c, 0x6a, 0x3c, 0xf6, 0xa2, 0xc4, 0x1d, 0xeb, 0x8e, 0x4c, 0x8f, 0x48, 0xb9,
	0x22, 0xe5, 0xc4, 0x5d, 0x65, 0xd7, 0x2e, 0x8a, 0xa2, 0x9b, 0x14, 0x05, 0x0a, 0x74, 0x55, 0xa0,
	0x40, 0xbf, 0x40, 0x17, 0xdd, 0x76, 0xd3, 0xae, 0xfa, 0x01, 0xba, 0x2c, 0xfa, 0x09, 0xfa, 0x01,
	0x8a, 0x7b, 0x2e, 0x49, 0xf1, 0x9f, 0x67, 0xfa, 0x07, 0x6d, 0xba, 0xb3, 0x7f, 0xe7, 0xdc, 0x73,
	0x0e, 0xcf, 0xff, 0x7b, 0x05, 0x62, 0xc3, 0xed, 0x3f, 0x9b, 0xd0, 0xb3, 0x0b, 0xe2, 0xe9, 0x97,
	0x8f, 0xae, 0xc6, 0xa3, 0x60, 0x24, 0xd6, 0x62, 0x40, 0x7e, 0x08, 0xab, 0x0d, 0xd3, 0xee, 0xf9,
	0x74, 0xac, 0x3a, 0xbe, 0x3f, 0x1a, 0x5e, 0x53, 0xe5, 0xea, 0x6a, 0x78, 0x23, 0xae, 0xc2, 0xa2,
	0x8b, 0x7f, 0x99, 0x94, 0x04, 0x5a, 0x5f, 0x2a, 0x6d, 0x97, 0x77, 0xea, 0x72, 0x1b, 0x36, 0x43,
	0x6e, 0xc5, 0xf3, 0x3f, 0xcf, 0x9e, 0xd9, 0x04, 0xd1, 0xe5, 0x78, 0xee, 0xa4, 0xb8, 0x04, 0xb3,
	0xae, 0x32, 0x18, 0x53, 0x2a, 0x95, 0xb7, 0xcb, 0x3b, 0xf3, 0xf2, 0xaf, 0x4b, 0xb0, 0x69, 0x36,
	0xf2, 0x8a, 0x8d, 0x51, 0xe0, 0xbc, 0xb8, 0x45, 0x3d, 0x57, 0xc0, 0x84, 0x24, 0x48, 0xbe, 0x54,
	0xde, 0xae, 0xec, 0xd4, 0xc5, 0x7b, 0xb0, 0xe6, 0xaa, 0x8e, 0x4f, 0x72, 0xe4, 0x0a, 0x92, 0x1f,
	0xc3, 0x92, 0x7b, 0xe0, 0x78, 0x64, 0xa8, 0xd2, 0x73, 0xc7, 0x77, 0x46, 0x9e, 0x34, 0xb3, 0x5d,
	0xde, 0x59, 0xda, 0xbb, 0xf7, 0x68, 0xea, 0x1c, 0x8b, 0x3c, 0x1f, 0xd2, 0x14, 0x93, 0xb8, 0x06,
	0x75, 0x6e, 0x87, 0xe5, 0xb8, 0xb4, 0x3b, 0x09, 0xa4, 0x2a, 0xfa, 0xe1, 0xc7, 0xa5, 0xd8, 0x6d,
	0x78, 0xa8, 0x71, 0x41, 0x82, 0xe3, 0xef, 0xf8, 0x81, 0xb8, 0x0e, 0x4b, 0x6e, 0xf7, 0x8a, 0x8e,
	0x49, 0x40, 0x53, 0x96, 0xb3, 0xef, 0xb1, 0xe8, 0x17, 0x41, 0x63, 0xe4, 0x05, 0xd4, 0x0b, 0xa4,
	0xf2, 0x76, 0x69, 0xa7, 0x86, 0xdc, 0xfb, 0x8e, 0x47, 0xc6, 0x37, 0x11, 0x5e, 0xd9, 0x2e, 0xed,
	0x2c, 0x22, 0x77, 0x88, 0x30, 0xbd, 0xd2, 0xcc, 0x76, 0x69, 0xa7, 0x2e, 0x0a, 0x30, 0xef, 0x6a,
	0x2e, 0x19, 0x50, 0xad, 0x2f, 0x55, 0x63, 0x44, 0xa7, 0x7d, 0x87, 0x68, 0x7d, 0x69, 0x96, 0x21,
	0xf2, 0x4f, 0x4a, 0xb0, 0x1e, 0xba, 0x35, 0x36, 0x2c, 0x74, 0xe9, 0xd7, 0x6d, 0xda, 0xff, 0xc7,
	0x2e, 0x3b, 0xa6, 0xa4, 0x7f, 0xd3, 0x22, 0x2e, 0x45, 0x97, 0x31, 0x89, 0x88, 0xe4, 0xf2, 0xa5,
	0x41, 0xc6, 0x51, 0x78, 0xe5, 0x47, 0xf1, 0x77, 0xc5, 0xa7, 0x13, 0xa9, 0x92, 0x3b, 0x2f, 0x7f,
	0x55, 0x82, 0x55, 0x7e, 0x60, 0x9f, 0xf8, 0x54, 0xf3, 0x5e, 0x8c, 0x42, 0xf6, 0x65, 0x98, 0x73,
	0x53, 0x9a, 0x76, 0x00, 0x5c, 0x26, 0xd7, 0x0c, 0x48, 0xc0, 0xb3, 0x73, 0x69, 0x6f, 0x35, 0x91,
	0x15, 0x31, 0x0d, 0x35, 0x75, 0x5f, 0xbc, 0xe8, 0x38, 0x1e, 0x3d, 0x18, 0x92, 0x81, 0x54, 0x61,
	0x99, 0x2c, 0x3e, 0x84, 0x9a, 0x1b, 0xe9, 0xc0, 0xa4, 0x5a, 0xd8, 0xbb, 0x9b, 0x38, 0x7e, 0x34,
	0x24, 0x37, 0x74, 0x1c, 0x31, 0xc8, 0x5f, 0x96, 0x61, 0x29, 0x0d, 0xa1, 0x45, 0x4c, 0x89, 0xa6,
	0xa2, 0x45, 0x55, 0x5e, 0x2b, 0xe7, 0xe7, 0x4e, 0x1f, 0xad, 0xa9, 0x8a, 0x77, 0xa0, 0xe6, 0x1a,
	0xce, 0xf9, 0x4b, 0x83, 0xb8, 0x14, 0x95, 0xd6, 0xf0, 0xcc, 0x01, 0x39, 0xa7, 0x9a, 0x8a, 0x2a,
	0x6b, 0xe2, 0x22, 0xcc, 0xb8, 0x26, 0xfd, 0x02, 0xf3, 0x93, 0x9f, 0x60, 0x22, 0x5b, 0xa3, 0x21,
	0x73, 0x7f, 0x79, 0xa7, 0x82, 0xc6, 0xf3, 0x6a, 0x23, 0xee, 0xc8, 0xeb, 0x4b, 0x73, 0xc8, 0xb8,
	0x0e, 0x8b, 0xae, 0x4a, 0xfd, 0xf3, 0xb1, 0x73, 0x15, 0xb0, 0xa2, 0x98, 0x67, 0xc2, 0x3e, 0x79,
	0x03, 0x05, 0x3c, 0x75, 0xae, 0x3a, 0xf4, 0x9a, 0x0e, 0xa5, 0xda, 0x76, 0x69, 0xa7, 0x2a, 0x8a,
	0xa1, 0x9f, 0x8e, 0x46, 0x8e, 0x17, 0x48, 0x80, 0x42, 0x63, 0xd3, 0xaf, 0xa4, 0x05, 0x34, 0x83,
	0x85, 0x9d, 0x01, 0x1d, 0x6f, 0x20, 0x2d, 0x22, 0x4b, 0x8c, 0x90, 0x40, 0xaa, 0x33, 0x44, 0xfe,
	0x65, 0x09, 0xe6, 0x31, 0x02, 0xd1, 0xc7, 0xff, 0x33, 0xc3, 0x51, 0x7a, 0x65, 0x38, 0xc4, 0x07,
	0xb0, 0x61, 0x06, 0x64, 0x1c, 0xe8, 0x24, 0x38, 0xbf, 0x68, 0x4c, 0xc6, 0x63, 0xea, 0x9d, 0xdf,
	0x3c, 0x25, 0xc3, 0x09, 0xc5, 0x3c, 0xae, 0xc8, 0xbf, 0xa9, 0x82, 0xe0, 0x07, 0x58, 0x4b, 0x4a,
	0x10, 0x8c, 0x9d, 0xe7, 0x93, 0x80, 0x8a, 0x12, 0x08, 0x2c, 0x01, 0x23, 0x7e, 0xeb, 0xe6, 0x8a,
	0x86, 0xa1, 0xdb, 0x80, 0xe5, 0x23, 0x72, 0x73, 0x3c, 0x1a, 0xb9, 0xc7, 0x24, 0xa0, 0x48, 0xe0,
	0x31, 0x5c, 0x83, 0xfa, 0xd1, 0x90, 0x78, 0x78, 0x6c, 0x34, 0xc1, 0x72, 0x62, 0x70, 0x1d, 0xaa,
	0xaa, 0x73, 0x76, 0x31, 0xc1, 0x28, 0x56, 0x98, 0x8f, 0x9b, 0x5e, 0x40, 0xc7, 0xe6, 0xf9, 0x68,
	0x4c, 0x31, 0x96, 0x88, 0x75, 0x28, 0xb9, 0xa6, 0x1c, 0xe3, 0xc1, 0x5c, 0x81, 0x85, 0x7d, 0xea,
	0x98, 0x17, 0x93, 0x8e, 0xe3, 0x3a, 0x01, 0xc6, 0x12, 0x19, 0x1b, 0x17, 0xc4, 0x19, 0x73, 0xf9,
	0xf3, 0x28, 0xff, 0x3e, 0xac, 0x6b, 0xbe, 0x32, 0x1c, 0x8e, 0x3e, 0x47, 0xb9, 0xca, 0x8b, 0x00,
	0xbd, 0x37, 0x0e, 0xa4, 0x5a, 0x94, 0x28, 0xf8, 0x6d, 0x68, 0x29, 0x44, 0x01, 0x8b, 0xec, 0xc7,
	0xa0, 0xa2, 0x60, 0x93, 0x8e, 0xaf, 0xe9, 0x18, 0xb1, 0xc5, 0x08, 0x3b, 0x73, 0xf4, 0xd1, 0xa1,
	0x43, 0x0e, 0x88, 0x27, 0xad, 0xa1, 0xeb, 0x37, 0x41, 0x64, 0x98, 0x3e, 0x1a, 0x53, 0x8b, 0x79,
	0x9b, 0x7c, 0xc1, 0x68, 0xeb, 0x48, 0x13, 0x01, 0x0e, 0x1d, 0xaf, 0x35, 0x9a, 0xa8, 0x0e, 0x19,
	0x49, 0x1b, 0x88, 0xad, 0xc0, 0x42, 0x9b, 0x38, 0xaa, 0xd3, 0x21, 0xa3, 0xd3, 0x09, 0x95, 0x24,
	0x04, 0x05, 0x98, 0x57, 0xc9, 0x33, 0x87, 0x41, 0xd2, 0x5d, 0x44, 0x36, 0x60, 0x59, 0x75, 0x98,
	0xeb, 0xbc, 0x41, 0x7b, 0x42, 0x98, 0x06, 0x69, 0x13, 0x09, 0x4b, 0x30, 0x7b, 0x4a, 0x46, 0x87,
	0xce, 0x44, 0xda, 0xc2, 0xff, 0xeb, 0x50, 0x3d, 0x74, 0x88, 0x37, 0x90, 0xde, 0xc4, 0x7f, 0x3f,
	0x06, 0xa1, 0x3d, 0x21, 0x9e, 0x49, 0x3c, 0x16, 0xfb, 0x01, 0x7e, 0xe2, 0x3d, 0xcc, 0xa7, 0xfb,
	0x89, 0x84, 0x68, 0xf7, 0x14, 0xc3, 0x36, 0x15, 0xc3, 0x3e, 0x6b, 0x2b, 0x46, 0xcb, 0xb6, 0x4e,
	0x8f, 0x9a, 0x71, 0x56, 0xb0, 0x68, 0xe9, 0x8e, 0xc7, 0x73, 0x86, 0xbb, 0xf5, 0x3e, 0xba, 0x0d,
	0x53, 0xef, 0x73, 0x8f, 0x8e, 0x31, 0xf9, 0xfb, 0xd2, 0x7f, 0xa1, 0x4f, 0xee, 0xc2, 0x1d, 0x9e,
	0x28, 0xfd, 0x6b, 0xe2, 0x9d, 0xd3, 0x23, 0x32, 0x26, 0xae, 0xb4, 0x83, 0x75, 0xc1, 0x8a, 0x07,
	0x69, 0x58, 0xc3, 0xff, 0x1d, 0xd7, 0x30, 0xf3, 0xb4, 0xd6, 0x97, 0x1e, 0xa2, 0x54, 0x56, 0x2a,
	0xc8, 0xa4, 0xf5, 0xa5, 0xf7, 0x10, 0x61, 0x2c, 0x9f, 0x39, 0x5e, 0x5f, 0xeb, 0x4b, 0x8f, 0x62,
	0xa0, 0x31, 0x9c, 0x3c, 0xd7, 0xfa, 0xd2, 0xff, 0xc4, 0x95, 0xae, 0xf9, 0xda, 0xd5, 0x09, 0x19,
	0x7b, 0xd2, 0xfb, 0x08, 0x31, 0x5d, 0x9a, 0xdf, 0xba, 0xf2, 0x11, 0xfb, 0x80, 0x61, 0xf2, 0x1f,
	0xca, 0x61, 0xa0, 0x31, 0xeb, 0xff, 0x17, 0x96, 0xdd, 0x74, 0x4a, 0x63, 0xfa, 0x2e, 0xec, 0x6d,
	0x25, 0x1c, 0x93, 0xcb, 0x7a, 0x36, 0x0b, 0xf7, 0x89, 0xf7, 0x92, 0x8e, 0xc3, 0x82, 0x2d, 0x63,
	0xc1, 0x32, 0x75, 0x07, 0xce, 0xd8, 0x0f, 0x54, 0xe7, 0x9c, 0xb7, 0xa7, 0x3a, 0x8b, 0xac, 0x6b,
	0xd2, 0xf3, 0x91, 0xd7, 0x47, 0x70, 0x06, 0x41, 0xf6, 0x79, 0xac, 0xa5, 0x1b, 0x13, 0x97, 0x8f,
	0x51, 0x71, 0x17, 0x16, 0xb8, 0x1d, 0xbc, 0xd8, 0x67, 0x31, 0x38, 0x6b, 0xd9, 0x89, 0xcc, 0xab,
	0xfd, 0x5d, 0x00, 0x37, 0xea, 0x1a, 0xbe, 0x34, 0xb7, 0x5d, 0xd9, 0x59, 0xd8, 0x5b, 0x49, 0xb0,
	0xc6, 0x1d, 0x85, 0xd9, 0x33, 0x2d, 0xb3, 0xf9, 0xd8, 0x9e, 0xe3, 0xd1, 0xc4, 0xeb, 0x73, 0xb0,
	0x86, 0x20, 0x1b, 0x71, 0x27, 0xc4, 0x09, 0x70, 0x78, 0xe0, 0x30, 0x83, 0xb8, 0x53, 0x32, 0xbc,
	0xe9, 0xf5, 0x11, 0xe5, 0x45, 0xb0, 0x05, 0x2b, 0xae, 0x32, 0x1c, 0x32, 0x42, 0x38, 0x45, 0x91,
	0x88, 0xd5, 0x20, 0x7f, 0x03, 0x44, 0xb3, 0x61, 0xc7, 0x0e, 0x0e, 0x47, 0xcd, 0x4e, 0x14, 0x74,
	0xec, 0x45, 0x15, 0xf4, 0xf0, 0x6a, 0xf6, 0xeb, 0x70, 0x2a, 0x6c, 0xc1, 0xdd, 0xe4, 0xd4, 0x56,
	0x35, 0xdf, 0x75, 0x7c, 0x9f, 0x8b, 0x91, 0xbf, 0x57, 0x02, 0x41, 0xd7, 0x2f, 0x43, 0xad, 0xc7,
	0xf4, 0x7c, 0x34, 0xee, 0xe7, 0xfb, 0xe6, 0xfb, 0x2c, 0x25, 0x39, 0x8b, 0x4e, 0xfc, 0x97, 0x61,
	0xe7, 0xdc, 0x4c, 0xa8, 0xd3, 0x0f, 0xed, 0xee, 0x51, 0xf3, 0x58, 0xb1, 0x9a, 0xb6, 0xae, 0x98,
	0x9f, 0xe1, 0x98, 0xb1, 0xc8, 0x40, 0xbf, 0x0c, 0x83, 0xc6, 0x44, 0xe2, 0xff, 0x1f, 0x84, 0x53,
	0x3d, 0x06, 0xf6, 0xf8, 0x50, 0x97, 0x7f, 0x5a, 0x81, 0x45, 0xa6, 0x94, 0x45, 0xb1, 0xb8, 0x7b,
	0xf3, 0x3c, 0x1f, 0xa4, 0x12, 0x24, 0xdd, 0xd1, 0x2b, 0xaf, 0xe8, 0xe8, 0x18, 0x26, 0x7a, 0x49,
	0xcf, 0x03, 0x73, 0xe2, 0x04, 0x61, 0xda, 0x30, 0x91, 0x2a, 0x25, 0x43, 0xbe, 0x0d, 0x54, 0x71,
	0x9b, 0x63, 0x58, 0x9b, 0x78, 0x7d, 0x8e, 0xcd, 0xc6, 0x98, 0xee, 0x78, 0x03, 0x8e, 0xcd, 0x21,
	0x86, 0x6b, 0x24, 0x76, 0x0e, 0x8e, 0xce, 0xc7, 0xe8, 0xfe, 0x64, 0x8a, 0xd6, 0xe2, 0xf3, 0x47,
	0x34, 0xc2, 0x00, 0x31, 0x96, 0xb2, 0xed, 0x09, 0x47, 0x16, 0xd0, 0x9a, 0xff, 0x03, 0xd1, 0xed,
	0x10, 0x3f, 0x48, 0x45, 0x43, 0x5a, 0xc4, 0x39, 0x93, 0xac, 0x9e, 0x5c, 0xc0, 0xd0, 0xe4, 0x09,
	0xf1, 0xb8, 0xb0, 0x7a, 0x6c, 0x08, 0xc3, 0xb4, 0x10, 0x5d, 0x42, 0xf4, 0x23, 0x58, 0x76, 0x4d,
	0x1a, 0x04, 0x43, 0xea, 0xb2, 0x2d, 0x8b, 0xb5, 0xad, 0xe5, 0xdc, 0xae, 0xaa, 0x1f, 0xda, 0x66,
	0xd3, 0xb2, 0x3a, 0x4d, 0xbd, 0x69, 0x58, 0xd8, 0xb5, 0xe4, 0x6f, 0xc2, 0x9d, 0x30, 0x89, 0xb0,
	0xca, 0x78, 0x0e, 0xee, 0x42, 0xcd, 0x8d, 0xc2, 0x25, 0x95, 0xb0, 0x6a, 0x36, 0x32, 0x55, 0x13,
	0x91, 0xe5, 0x35, 0x58, 0x99, 0xde, 0x05, 0x58, 0x02, 0x62, 0x32, 0xca, 0x1f, 0xc3, 0x46, 0x28,
	0x57, 0xbf, 0x64, 0x9f, 0xce, 0x1c, 0x9f, 0x5f, 0xa6, 0x78, 0x0e, 0xb1, 0x35, 0x44, 0xbf, 0xf4,
	0xa5, 0x19, 0x5c, 0xda, 0x9e, 0x61, 0xe2, 0xb2, 0x93, 0x27, 0x8e, 0xa7, 0xd2, 0x80, 0x38, 0xc3,
	0x7c, 0xca, 0xc4, 0x3b, 0x44, 0x94, 0x2f, 0xac, 0xa5, 0x9d, 0x38, 0x1e, 0x9f, 0x77, 0x95, 0x78,
	0xcf, 0x60, 0x1b, 0x91, 0xd6, 0xe7, 0x49, 0x21, 0x1f, 0xc0, 0xb2, 0x8e, 0x33, 0xfb, 0xc4, 0xf1,
	0x42, 0x07, 0x7f, 0x08, 0x4b, 0x6e, 0x4a, 0x55, 0xf8, 0xb9, 0x99, 0xa8, 0xa4, 0x58, 0xe4, 0xef,
	0xf3, 0x7d, 0xd9, 0x52, 0xd8, 0x0c, 0x1c, 0x05, 0x64, 0x78, 0xe2, 0x78, 0xe1, 0xb7, 0x7d, 0x04,
	0x77, 0x50, 0x1e, 0x2b, 0xfa, 0xbf, 0x41, 0xa4, 0xf8, 0x11, 0x88, 0x3c, 0xdd, 0x9d, 0x81, 0x37,
	0x3d, 0x58, 0xc6, 0x83, 0xa9, 0x72, 0x4c, 0xdb, 0x2f, 0x2f, 0xc1, 0xa2, 0xd9, 0xb0, 0x59, 0xe7,
	0xc2, 0xd9, 0x23, 0x5f, 0xc3, 0x5a, 0xec, 0x76, 0xc5, 0xf7, 0x9d, 0x81, 0x77, 0xdb, 0x06, 0xfb,
	0x8f, 0x36, 0xe6, 0x28, 0x68, 0x58, 0x5b, 0xcc, 0x25, 0x62, 0xac, 0xb8, 0x45, 0xa3, 0xeb, 0x43,
	0xb6, 0xbf, 0x30, 0x4f, 0xbc, 0xba, 0xbf, 0x6c, 0xc0, 0xb2, 0x7b, 0x4c, 0x87, 0x84, 0x2d, 0x96,
	0x29, 0xc3, 0xb2, 0x8d, 0x87, 0x31, 0x26, 0x7a, 0x2a, 0xbb, 0x66, 0xf1, 0x28, 0xff, 0xa0, 0x04,
	0x4b, 0x61, 0x46, 0x86, 0xf4, 0x5b, 0x6f, 0x31, 0xff, 0x8a, 0xf6, 0xf7, 0x18, 0x44, 0xfd, 0x72,
	0x5a, 0x99, 0xb7, 0x25, 0x34, 0x13, 0xcc, 0x57, 0x48, 0x5c, 0xfd, 0xe4, 0x5f, 0xb0, 0xfe, 0x9d,
	0x38, 0x87, 0x9d, 0xf3, 0x21, 0x54, 0xdd, 0x78, 0x6f, 0x7c, 0x5d, 0x69, 0x8b, 0x8f, 0x60, 0xce,
	0x4d, 0x25, 0x52, 0x8a, 0xbf, 0xd8, 0xa6, 0xf6, 0x04, 0xe5, 0x57, 0xe2, 0x9a, 0xd2, 0x27, 0xc3,
	0xc0, 0xb9, 0x1a, 0x46, 0x51, 0x67, 0x50, 0x8b, 0x7a, 0x7c, 0x22, 0xe2, 0xb5, 0x41, 0xfe, 0x1d,
	0xaf, 0x86, 0xb8, 0x71, 0xf9, 0x93, 0xe1, 0xed, 0xe1, 0x7f, 0x9d, 0x7f, 0xf3, 0x91, 0x2a, 0x8e,
	0xfe, 0x6b, 0xfd, 0x8e, 0xeb, 0x4a, 0xda, 0x7d, 0xd8, 0xf2, 0x33, 0x75, 0x98, 0xf1, 0xb0, 0x7c,
	0x8d, 0x17, 0xc0, 0xd0, 0x82, 0xc6, 0xa8, 0x4f, 0xff, 0xee, 0x44, 0x66, 0x45, 0xc3, 0xe6, 0x7e,
	0xea, 0x33, 0x0a, 0x92, 0x16, 0xbf, 0x47, 0xfe, 0x2e, 0xd6, 0x6d, 0x72, 0xf3, 0x0c, 0x15, 0xbf,
	0x03, 0x35, 0xec, 0xf6, 0x89, 0xb0, 0x27, 0x17, 0x98, 0xb6, 0x79, 0xc6, 0x83, 0x9d, 0x48, 0xa8,
	0x69, 0x21, 0x4f, 0x47, 0x47, 0xa5, 0x70, 0x74, 0xf0, 0x86, 0xfb, 0x31, 0x40, 0xd8, 0x43, 0x9a,
	0x5e, 0x3f, 0xbb, 0x5e, 0x95, 0x5e, 0xb1, 0x5e, 0xc9, 0xdf, 0x86, 0x35, 0x9d, 0x97, 0x7c, 0x26,
	0x51, 0x73, 0xe9, 0x5d, 0x10, 0x8d, 0xf2, 0xeb, 0xa3, 0xf1, 0x04, 0xee, 0xc5, 0x4d, 0x25, 0x4d,
	0x8a, 0xc3, 0x32, 0xeb, 0xf2, 0xdd, 0x8e, 0xf7, 0xd8, 0xed, 0xa4, 0xb4, 0xa2, 0x73, 0xf2, 0x0f,
	0x4b, 0x20, 0xea, 0x4f, 0x9d, 0x3e, 0x1d, 0x05, 0xe4, 0x8a, 0xde, 0x7e, 0xa3, 0x7c, 0x0f, 0x20,
	0xbe, 0x11, 0xfa, 0xe8, 0xd2, 0x57, 0x5e, 0x09, 0xa7, 0x2f, 0x0f, 0x95, 0xe9, 0xae, 0x11, 0x7b,
	0x7f, 0xa6, 0xd0, 0xfb, 0xbc, 0x73, 0xfe, 0xb1, 0x0c, 0xa2, 0xce, 0x9c, 0x1f, 0x1b, 0xf5, 0x35,
	0x6e, 0xdb, 0xa9, 0x6c, 0xab, 0xde, 0x9e, 0x6d, 0x8f, 0x61, 0xc9, 0x45, 0x7b, 0x23, 0x07, 0x86,
	0xb5, 0x95, 0xea, 0x30, 0x79, 0x2f, 0x7f, 0x32, 0x4d, 0x7f, 0x3e, 0xbf, 0xa2, 0x9d, 0xfc, 0xad,
	0xe4, 0x76, 0x51, 0xdc, 0x4b, 0x3e, 0x85, 0x75, 0x17, 0x87, 0x6d, 0xb6, 0x6f, 0xe1, 0x7e, 0xf6,
	0xba, 0xe6, 0x26, 0xdf, 0xc0, 0x92, 0x1e, 0x0f, 0xd6, 0xa2, 0x90, 0x57, 0xd3, 0x2b, 0x44, 0x39,
	0xfd, 0x54, 0xa1, 0x86, 0x57, 0xef, 0xe9, 0x2b, 0xcb, 0x4c, 0xfe, 0x95, 0xa5, 0x9a, 0x7d, 0x65,
	0x61, 0x77, 0x93, 0x9a, 0xbc, 0x01, 0x6b, 0x0d, 0x93, 0xef, 0xf9, 0x6c, 0x13, 0x9a, 0xee, 0x11,
	0x16, 0x6c, 0x45, 0x17, 0x80, 0x14, 0x21, 0xfc, 0xe2, 0xc7, 0xe1, 0xd6, 0x98, 0x32, 0x3b, 0x4c,
	0xf4, 0x64, 0x2a, 0xa6, 0xbf, 0x4b, 0xfe, 0x6d, 0x19, 0x04, 0xfe, 0x76, 0xe2, 0xe3, 0x5d, 0xb4,
	0x38, 0xbf, 0xf1, 0x01, 0x8f, 0xb9, 0x33, 0x5c, 0x46, 0xf9, 0x83, 0x43, 0x66, 0x97, 0x9e, 0xf6,
	0x5a, 0xbe, 0xcf, 0xfe, 0x1b, 0x2c, 0xd7, 0x05, 0x7b, 0xee, 0xc2, 0x5f, 0x33, 0x0c, 0x0b, 0x1a,
	0xd0, 0xe2, 0xeb, 0x1b, 0xd0, 0x57, 0xa5, 0xf8, 0x8e, 0x95, 0x74, 0x67, 0x18, 0x20, 0x56, 0x6d,
	0x67, 0x17, 0x13, 0xe2, 0x0d, 0x52, 0xae, 0x65, 0x33, 0xec, 0x98, 0xba, 0xc4, 0xf1, 0xa2, 0x8b,
	0x2b, 0xaf, 0xc2, 0x3d, 0xa8, 0xbb, 0x49, 0x29, 0xd8, 0x2a, 0xd2, 0x06, 0xe4, 0xe2, 0xc6, 0x54,
	0x24, 0x6c, 0xe2, 0x11, 0x98, 0x91, 0x0f, 0x41, 0x08, 0x57, 0x9c, 0x13, 0xe2, 0xe1, 0x2e, 0xee,
	0x17, 0x6f, 0x78, 0x11, 0x39, 0x7e, 0x54, 0xaa, 0x67, 0x5b, 0x95, 0xfc, 0x69, 0xfc, 0x48, 0x1a,
	0xcb, 0xe2, 0x85, 0x57, 0x7c, 0x51, 0xe3, 0x34, 0x33, 0x18, 0xa3, 0xb8, 0xda, 0xee, 0x9f, 0xab,
	0x50, 0xa7, 0xf8, 0x44, 0x75, 0x30, 0x66, 0x56, 0xab, 0xe2, 0xdb, 0xf0, 0xa0, 0xa5, 0xe8, 0x4d,
	0xdb, 0xec, 0xed, 0xdb, 0xcc, 0x4a, 0xb3, 0x79, 0x6c, 0xab, 0x9a, 0x69, 0x76, 0x3b, 0x4f, 0x9b,
	0xb6, 0x72, 0x74, 0xd4, 0x39, 0x15, 0x4a, 0xe2, 0x2e, 0xbc, 0x93, 0x63, 0x52, 0x0c, 0xf3, 0x24,
	0xcf, 0x5b, 0x4e, 0xf1, 0x32, 0x53, 0xf3, 0x02, 0x6d, 0xa3, 0x6b, 0x69, 0x07, 0xa7, 0x42, 0x45,
	0x7c, 0x00, 0x5b, 0x39, 0xb9, 0x96, 0xb2, 0xdf, 0x69, 0xda, 0x8d, 0xb6, 0x62, 0x09, 0x33, 0xe2,
	0x3b, 0x20, 0xe7, 0x84, 0x4d, 0x19, 0x22, 0x41, 0xd5, 0x42, 0x41, 0xc7, 0x4d, 0x45, 0x3d, 0xb5,
	0x19, 0x2c, 0xcc, 0x16, 0x0a, 0x9a, 0x32, 0x44, 0x82, 0xe6, 0xc4, 0x77, 0xe1, 0xed, 0x1c, 0x9f,
	0x66, 0x1c, 0x74, 0x99, 0x3e, 0xa3, 0x15, 0x33, 0xce, 0x8b, 0x6f, 0xc1, 0xbd, 0x5b, 0x2c, 0x0b,
	0x59, 0x6a, 0xe2, 0x7f, 0xc0, 0x76, 0x92, 0x85, 0x53, 0x55, 0xcd, 0xd4, 0x35, 0xd3, 0x8c, 0xb8,
	0x40, 0xdc, 0x86, 0x37, 0x73, 0x82, 0x1a, 0xca, 0xb1, 0x1a, 0x71, 0x2c, 0x88, 0x32, 0xdc, 0x2f,
	0x0a, 0x11, 0x8a, 0x41, 0xa1, 0xc2, 0x62, 0xa1, 0xd7, 0xf5, 0x43, 0xbb, 0xa3, 0x98, 0x96, 0xdd,
	0x56, 0x0c, 0x75, 0x6a, 0x57, 0x3d, 0xeb, 0x0b, 0x6e, 0x97, 0xd5, 0xb5, 0x94, 0x8e, 0x7d, 0xa2,
	0x19, 0x11, 0xdf, 0x92, 0xf8, 0x9f, 0xf0, 0x56, 0x52, 0x2f, 0xe7, 0x43, 0x89, 0x8c, 0x4d, 0x6d,
	0x5a, 0x8a, 0xd6, 0x11, 0x96, 0xc5, 0x87, 0xb0, 0x93, 0x17, 0x97, 0x61, 0x8b, 0x84, 0x0a, 0x85,
	0x86, 0x22, 0x33, 0xa2, 0xe8, 0xea, 0x90, 0xf7, 0x4e, 0x61, 0x54, 0x4f, 0x14, 0xc3, 0x42, 0xff,
	0x98, 0xc2, 0x5e, 0x61, 0x54, 0xa7, 0x0c, 0xf6, 0x71, 0xd3, 0xec, 0x75, 0x2c, 0xe1, 0xc3, 0xdd,
	0x5f, 0x95, 0x61, 0x81, 0xa7, 0xbd, 0x39, 0x79, 0xae, 0xa9, 0xe2, 0x26, 0xac, 0x27, 0xcf, 0xf1,
	0xbf, 0x2d, 0xe5, 0xd8, 0x12, 0xfa, 0xd9, 0x78, 0x28, 0xa6, 0xa9, 0xb5, 0x0c, 0xe6, 0xcb, 0xd0,
	0x2c, 0x2a, 0xde, 0x83, 0xbb, 0xa9, 0xd3, 0x4d, 0x2b, 0x41, 0x7e, 0x91, 0xaa, 0x28, 0x36, 0x1e,
	0xc3, 0x3d, 0xb3, 0xd1, 0x55, 0xe3, 0x18, 0x0c, 0x52, 0xbe, 0x65, 0xbb, 0x64, 0xfa, 0x89, 0x32,
	0x64, 0xbb, 0x10, 0x37, 0x60, 0x25, 0xe9, 0x81, 0x50, 0x96, 0xe0, 0x64, 0xcf, 0x47, 0x4a, 0xf8,
	0x17, 0x47, 0xe7, 0x2f, 0xb3, 0x6c, 0xd3, 0x3e, 0x9b, 0x74, 0xf4, 0x4b, 0x51, 0x82, 0xd5, 0x9c,
	0x3f, 0x9a, 0x86, 0x2a, 0x0c, 0x77, 0xfb, 0x20, 0x16, 0xfc, 0x66, 0xb6, 0x01, 0x2b, 0x88, 0xda,
	0x11, 0x62, 0x1b, 0x23, 0x8f, 0x0a, 0x25, 0x26, 0x28, 0x43, 0xc0, 0x1f, 0xf3, 0x84, 0xb2, 0xb8,
	0x05, 0x1b, 0x19, 0x4a, 0xf4, 0x53, 0x9e, 0x50, 0xd9, 0xfd, 0x79, 0x09, 0x20, 0xf1, 0x10, 0xb8,
	0x0a, 0x02, 0xe7, 0xc5, 0x7f, 0x6d, 0xcd, 0x73, 0x02, 0xa1, 0x24, 0xae, 0x85, 0x6f, 0xaf, 0x21,
	0x8a, 0x57, 0x68, 0xa1, 0x2c, 0xae, 0x87, 0x16, 0x86, 0x70, 0x8b, 0xb8, 0x8e, 0x37, 0x10, 0x2a,
	0x53, 0x53, 0x62, 0x9c, 0xda, 0x4d, 0xaf, 0x2f, 0xcc, 0x64, 0x29, 0xd1, 0x8f, 0x93, 0x42, 0x95,
	0x45, 0x36, 0x49, 0x61, 0x37, 0x82, 0x29, 0x79, 0x76, 0xf7, 0x67, 0x25, 0xa8, 0x4d, 0x9f, 0xb2,
	0xd6, 0xd9, 0x5d, 0x11, 0x5b, 0x71, 0xce, 0xce, 0x34, 0x6e, 0x3a, 0xcc, 0xce, 0x0d, 0x58, 0x49,
	0xc3, 0xf8, 0x28, 0x29, 0x54, 0xc4, 0xbb, 0xb0, 0x96, 0x26, 0xb0, 0x6d, 0x95, 0x7d, 0xc3, 0x0c,
	0x73, 0x44, 0x9a, 0xd4, 0x9e, 0x08, 0x55, 0x66, 0x7f, 0x1a, 0x6d, 0x39, 0xd7, 0xb4, 0x77, 0x25,
	0xcc, 0xee, 0x3a, 0xb0, 0x52, 0xf4, 0xd8, 0xfd, 0x26, 0x48, 0x05, 0xb0, 0x6d, 0x74, 0x8d, 0xa6,
	0xf0, 0x06, 0xd3, 0x5f, 0x44, 0xfd, 0x40, 0x28, 0xdd, 0x46, 0xda, 0x13, 0xca, 0xbb, 0x7f, 0x2a,
	0xc3, 0x72, 0xf6, 0x16, 0xc5, 0x0c, 0x4b, 0x43, 0x5c, 0x47, 0xa9, 0x88, 0xa2, 0x36, 0x95, 0x4e,
	0xe8, 0x96, 0x0c, 0xa5, 0xd5, 0xeb, 0xf2, 0xf8, 0x65, 0x09, 0x47, 0x4d, 0xa3, 0x25, 0xcc, 0xb0,
	0x28, 0x65, 0x29, 0xba, 0x66, 0xb4, 0xec, 0x96, 0x62, 0xb4, 0x84, 0x2a, 0xcb, 0xb4, 0x2c, 0x59,
	0x31, 0x38, 0x71, 0xb6, 0x88, 0xb8, 0xdf, 0xe3, 0xc4, 0x39, 0xf1, 0x3e, 0x6c, 0x66, 0x89, 0xc7,
	0xcd, 0xc3, 0x66, 0xc3, 0x32, 0x7b, 0x9a, 0x25, 0xcc, 0x63, 0xc4, 0x33, 0xf4, 0x76, 0x4f, 0xa8,
	0xb1, 0x76, 0x92, 0x33, 0xa8, 0x6b, 0x1f, 0x29, 0x9a, 0x00, 0x45, 0x0a, 0x5b, 0xda, 0xd3, 0xa6,
	0xdd, 0x3b, 0xe2, 0x9d, 0x3d, 0x2f, 0x30, 0xe9, 0x6f, 0x61, 0x71, 0xf7, 0xf7, 0x15, 0xd4, 0x9a,
	0x5d, 0x91, 0xb8, 0xdc, 0x0c, 0x9a, 0x08, 0x69, 0x01, 0xb1, 0xdd, 0x13, 0x4a, 0x2c, 0x17, 0x0a,
	0x48, 0x67, 0x9a, 0xad, 0x77, 0x85, 0x32, 0x9b, 0x6a, 0x05, 0xd4, 0x27, 0x9a, 0x12, 0xb9, 0x17,
	0x67, 0x76, 0x01, 0x0b, 0x23, 0x32, 0xdb, 0x85, 0x99, 0x57, 0x31, 0x1c, 0x29, 0x5d, 0x3e, 0xac,
	0x8b, 0x18, 0x7a, 0x8a, 0x7d, 0xd0, 0xc4, 0x20, 0xf1, 0x00, 0x67, 0x19, 0x9e, 0x69, 0x8a, 0x7d,
	0xda, 0x13, 0xe6, 0x6e, 0x39, 0xdf, 0x68, 0x2b, 0xf6, 0xa1, 0xa6, 0x74, 0x85, 0xf9, 0x5b, 0x18,
	0xac, 0x9e, 0x66, 0x9b, 0xed, 0x9e, 0x26, 0xd4, 0xc2, 0x40, 0xe7, 0xfd, 0xa3, 0xd8, 0x67, 0xed,
	0x9e, 0x00, 0xb7, 0x08, 0x38, 0xc3, 0xd8, 0x9c, 0xf6, 0x84, 0x85, 0x5b, 0x04, 0x58, 0x9a, 0x62,
	0x30, 0x2f, 0x2f, 0xde, 0xe2, 0x65, 0x55, 0x63, 0xd4, 0xfa, 0xee, 0x8f, 0xca, 0xb0, 0x7c, 0xa0,
	0x19, 0x4a, 0x87, 0x0f, 0x7a, 0x8c, 0xa7, 0x04, 0xab, 0x19, 0x28, 0x0a, 0xe6, 0x3a, 0x88, 0x59,
	0x0a, 0x46, 0x72, 0x13, 0xd6, 0xb3, 0xb8, 0xaa, 0xd8, 0x6a, 0x4f, 0x13, 0xca, 0x2c, 0x01, 0xb2,
	0xb4, 0x43, 0x16, 0x44, 0x61, 0x86, 0x25, 0x4e, 0x96, 0x74, 0xaa, 0x74, 0xed, 0x43, 0xad, 0x27,
	0xcc, 0x17, 0x59, 0xf1, 0x44, 0x33, 0x5a, 0x82, 0x50, 0xa4, 0xed, 0x89, 0x86, 0xda, 0xb6, 0xd9,
	0xc8, 0xcc, 0x6b, 0x33, 0xec, 0x56, 0xb7, 0x67, 0xab, 0x2c, 0x22, 0xdf, 0x12, 0x1f, 0xc0, 0x66,
	0xee, 0x1b, 0x14, 0x8d, 0x39, 0xa4, 0xa3, 0x74, 0x85, 0x2f, 0x4b, 0xbb, 0x7d, 0x98, 0x8f, 0xef,
	0xab, 0x77, 0xa0, 0x1e, 0xfd, 0x9d, 0xf0, 0x41, 0x0c, 0x35, 0x3a, 0xdd, 0xc6, 0x67, 0x27, 0x9a,
	0xc9, 0xfa, 0xca, 0x16, 0x6c, 0xc4, 0xb8, 0x62, 0x58, 0x5a, 0x82, 0x58, 0x16, 0x05, 0x58, 0x8c,
	0x89, 0x07, 0xd6, 0x81, 0x50, 0xf9, 0x4b, 0x00, 0x00, 0x00, 0xff, 0xff, 0xba, 0x34, 0xb1, 0x49,
	0x2a, 0x23, 0x00, 0x00,
}
